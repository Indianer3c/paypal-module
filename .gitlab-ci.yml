---
stages:
  - build_release
#  - deploy_integration
  - test
  - promote

build_release:
  stage: build_release
  image: composer:2.0.8
  before_script:
    - php oxideshop/composer-2.0.14.phar config -g cache-dir "$(pwd)/.composer-cache"
  variables:
    ARTIFACT: $CI_BUILD_REF.tar.gz
  script:
    - cd oxideshop
    - rm -rf vendor
    - php composer-2.0.14.phar install --no-scripts --no-plugins
    - php composer-2.0.14.phar install
    - php composer-2.0.14.phar ci:archive
  cache:
    key:
      files:
        - oxideshop/composer.lock
    paths:
      - .composer-cache/
  artifacts:
    paths:
      - "*.tar.gz"
    expire_in: 1 hour
  interruptible: false

.template: &template
  image:
    name: mprokopov/oxid-ansible-runner
    entrypoint: [""]
  needs: [build_release]
  variables:
    ARTIFACT: $CI_BUILD_REF.tar.gz
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@psgit.oxid-esales.com/psprojects/paypal-apiv2-deploy.git
    - mv $ARTIFACT paypal-apiv2-deploy
    - cd paypal-apiv2-deploy
    - /entrypoint.sh deliver.yml --inventory inventories/$CI_ENVIRONMENT_NAME/hosts.ini --extra-vars build_id=$CI_COMMIT_SHA --verbose
    - /entrypoint.sh deploy.yml --inventory inventories/$CI_ENVIRONMENT_NAME/hosts.ini --extra-vars build_id=$CI_COMMIT_SHA  --verbose

codecheck:
  stage: test
  only:
    - merge_requests
    - develop
  needs:
    - build_release
  image: composer:2.0.8
  variables:
    TZ: Europe/Berlin
  script:
    - mkdir generated
    - cd oxideshop
    - vendor/bin/phpcs --standard=phpcs.xml --report-junit=../generated/phpcs-junit.xml
  artifacts:
    reports:
      junit:
        - generated/phpcs-junit.xml
    expire_in: 2 hours
  interruptible: true

promote_to_staging:
  <<: *template
  stage: promote
  only:
    - develop
  needs:
    - build_release
  environment:
    name: staging
    url: https://pp.oxidps.de/
  interruptible: false
