<?php

/**
 * Copyright Â© OXID eSales AG. All rights reserved.
 * See LICENSE file for license details.
 */

namespace OxidSolutionCatalysts\PayPal\Core;

use OxidSolutionCatalysts\PayPal\Traits\LegacyModulesCommonDetails;
use OxidEsales\Eshop\Core\DatabaseProvider;
use OxidSolutionCatalysts\PayPal\Service\ModuleSettings;

class LegacyPaypalPlusModuleDetails
{
    use LegacyModulesCommonDetails;

    public const LEGACY_MODULE_ID = 'payppaypalplus';

    public const LEGACY_PAYMENT_ID = 'payppaypalplus';

    /**
     * Checks whether oepaypal and its transaction data tables are present and the transfer hasn't been executed yet.
     * @return bool
     */
    public function showTransferTransactiondataButton(): bool
    {
        if (!$this->isLegacyModuleActive()) {
            return false;
        }

        if ($this->getServiceFromContainer(ModuleSettings::class)->getLegacyPaypPlusTransactionsTransferStatus())
        {
            return false;
        }

        $db = DatabaseProvider::getDb(DatabaseProvider::FETCH_MODE_ASSOC);
        $out = $db->getAll(
            "SELECT COUNT(*) as c FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?;",
            ['payppaypalpluspayment']
        );

        return $out[0]['c'];
    }

    /**
     * Queries data generated by transactions with the oepaypal module and returns the results
     * @return array
     * @throws \OxidEsales\Eshop\Core\Exception\DatabaseConnectionException
     * @throws \OxidEsales\Eshop\Core\Exception\DatabaseErrorException
     */
    public function getTransactionRecords()
    {
        $db = DatabaseProvider::getDb(DatabaseProvider::FETCH_MODE_ASSOC);

        $query = <<<'SQL'
SELECT
r.OXID as 'recordid', s.OXSHOPID as 'shopid',
r.OXORDERID as 'orderid', s.OXTRANSID as 'transactionid',
r.OXSTATUS as 'status',
s.OXPAYMENTTYPE as 'paymenttype'
FROM payppaypalpluspayment r
LEFT JOIN oxorder s ON r.OXORDERID = s.OXID;
SQL;

        return $db->getAll($query);
    }
}
