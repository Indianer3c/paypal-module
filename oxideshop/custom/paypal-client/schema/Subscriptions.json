{
  "swagger": "2.0",
  "info": {
    "title": "Subscriptions",
    "x-publicDocsPath": "subscriptions",
    "x-serviceName": "subscriptionmgmtserv",
    "description": "You can use billing plans and subscriptions to create subscriptions that process recurring PayPal payments for physical or digital goods, or services. A plan includes pricing and billing cycle information that defines the amount and frequency of charge for a subscription. You can also define a fixed plan, such as a $5 basic plan or a volume- or graduated-based plan with pricing tiers based on the quantity purchased. For more information, see <a href=\"/docs/limited-release/subscriptions/\">Subscriptions Overview</a>.",
    "version": "1.3"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "host": "api.paypal.com",
  "basePath": "/v1/billing",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "tokenUrl": "https://api.paypal.com/v1/oauth2/token",
      "flow": "application",
      "scopes": {
        "https://uri.paypal.com/services/subscriptions": "Manage plan & subscription"
      }
    }
  },
  "paths": {
    "/plans": {
      "post": {
        "summary": "Create plan",
        "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
        "operationId": "plans.create",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows billing plan details.",
            "schema": {
              "$ref": "#/definitions/plan.json"
            }
          },
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that shows billing plan details.",
            "schema": {
              "$ref": "#/definitions/plan.json",
              "example": {
                "id": "P-5ML4271244454362WXNWU5NQ",
                "product_id": "PROD-XXCD1234QWER65782",
                "name": "Video Streaming Service Plan",
                "description": "Video Streaming Service basic plan",
                "status": "ACTIVE",
                "billing_cycles": [
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 1,
                    "total_cycles": 2,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "3",
                        "currency_code": "USD"
                      },
                      "version": 1,
                      "create_time": "2020-05-27T12:13:51Z",
                      "update_time": "2020-05-27T12:13:51Z"
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 2,
                    "total_cycles": 3,
                    "pricing_scheme": {
                      "fixed_price": {
                        "currency_code": "USD",
                        "value": "6"
                      },
                      "version": 1,
                      "create_time": "2020-05-27T12:13:51Z",
                      "update_time": "2020-05-27T12:13:51Z"
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "REGULAR",
                    "sequence": 3,
                    "total_cycles": 12,
                    "pricing_scheme": {
                      "fixed_price": {
                        "currency_code": "USD",
                        "value": "10"
                      },
                      "version": 1,
                      "create_time": "2020-05-27T12:13:51Z",
                      "update_time": "2020-05-27T12:13:51Z"
                    }
                  }
                ],
                "payment_preferences": {
                  "auto_bill_outstanding": true,
                  "setup_fee": {
                    "value": "10",
                    "currency_code": "USD"
                  },
                  "setup_fee_failure_action": "CONTINUE",
                  "payment_failure_threshold": 3
                },
                "taxes": {
                  "percentage": "10",
                  "inclusive": false
                },
                "create_time": "2020-05-27T12:13:51Z",
                "update_time": "2020-05-27T12:13:51Z",
                "links": [
                  {
                    "href": "https://api.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ",
                    "rel": "self",
                    "method": "GET"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ/deactivate",
                    "rel": "deactivate",
                    "method": "POST"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ/update-pricing-schemes",
                    "rel": "edit",
                    "method": "POST"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 72 hours.",
            "required": false
          },
          {
            "name": "plan_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan_request_POST.json",
              "example": {
                "product_id": "PROD-XXCD1234QWER65782",
                "name": "Video Streaming Service Plan",
                "description": "Video Streaming Service basic plan",
                "status": "ACTIVE",
                "billing_cycles": [
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 1,
                    "total_cycles": 2,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "3",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 2,
                    "total_cycles": 3,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "6",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "REGULAR",
                    "sequence": 3,
                    "total_cycles": 12,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "10",
                        "currency_code": "USD"
                      }
                    }
                  }
                ],
                "payment_preferences": {
                  "auto_bill_outstanding": true,
                  "setup_fee": {
                    "value": "10",
                    "currency_code": "USD"
                  },
                  "setup_fee_failure_action": "CONTINUE",
                  "payment_failure_threshold": 3
                },
                "taxes": {
                  "percentage": "10",
                  "inclusive": false
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      },
      "get": {
        "summary": "List plans",
        "description": "Lists billing plans.",
        "operationId": "plans.list",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists billing plans.",
            "schema": {
              "$ref": "#/definitions/plan_collection.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>name</code>, <code>description</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Subject-Account",
            "in": "header",
            "type": "string",
            "description": "An internal only header to pass a target account number to API. The value of the header is a CSV (aka Comma separated values).",
            "format": "ppaas_payer_id_v3",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "required": false,
            "x-visibility": {
              "extent": "INTERNAL"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Filters the response by a Product ID.",
            "type": "string",
            "required": false,
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "plan_ids",
            "in": "query",
            "description": "Filters the response by list of plan IDs. Filter supports upto 10 plan IDs.",
            "type": "string",
            "required": false,
            "minimum": 3,
            "maximum": 270
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to return in the response.",
            "default": 10,
            "type": "integer",
            "minimum": 1,
            "maximum": 20
          },
          {
            "name": "page",
            "in": "query",
            "description": "A non-zero integer which is the start index of the entire list of items to return in the response. The combination of `page=1` and `page_size=20` returns the first 20 items. The combination of `page=2` and `page_size=20` returns the next 20 items.",
            "default": 1,
            "type": "integer",
            "minimum": 1,
            "maximum": 100000
          },
          {
            "name": "total_required",
            "in": "query",
            "description": "Indicates whether to show the total count in the response.",
            "default": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}": {
      "get": {
        "summary": "Show plan details",
        "description": "Shows details for a plan, by ID.",
        "operationId": "plans.get",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows plan details.",
            "schema": {
              "$ref": "#/definitions/plan.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "PayPal-Subject-Account",
            "in": "header",
            "type": "string",
            "description": "An internal only header to pass a target account number to API. The value of the header is a CSV (aka Comma separated values).",
            "format": "ppaas_payer_id_v3",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "required": false,
            "x-visibility": {
              "extent": "INTERNAL"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "The version of the plan.",
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "x-visibility": {
              "extent": "INTERNAL"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      },
      "patch": {
        "summary": "Update plan",
        "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr></tbody></table>",
        "operationId": "plans.patch",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string"
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "replace",
                  "path": "/payment_preferences/payment_failure_threshold",
                  "value": 7
                }
              ]
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      },
      "put": {
        "summary": "Replace plan",
        "description": "Replaces an entire plan with the `CREATED` status.",
        "operationId": "plans.replace",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string"
          },
          {
            "name": "plan",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan.json",
              "example": {
                "product_id": "PROD-XXCD1234QWER65782",
                "name": "Video Streaming Service Plan",
                "description": "Video Streaming Service basic plan",
                "status": "ACTIVE",
                "billing_cycles": [
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 1,
                    "total_cycles": 1,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "10",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "REGULAR",
                    "sequence": 2,
                    "total_cycles": 12,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "100",
                        "currency_code": "USD"
                      }
                    }
                  }
                ],
                "payment_preferences": {
                  "auto_bill_outstanding": true,
                  "setup_fee": {
                    "value": "10",
                    "currency_code": "USD"
                  },
                  "setup_fee_failure_action": "CONTINUE",
                  "payment_failure_threshold": 3
                },
                "taxes": {
                  "percentage": "10",
                  "inclusive": false
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}/activate": {
      "post": {
        "summary": "Activate plan",
        "description": "Activates a plan, by ID.",
        "operationId": "plans.activate",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}/deactivate": {
      "post": {
        "summary": "Deactivate plan",
        "description": "Deactivates a plan, by ID.",
        "operationId": "plans.deactivate",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}/update-pricing-schemes": {
      "post": {
        "summary": "Update pricing",
        "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
        "operationId": "plans.update-pricing-schemes",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID for the plan.",
            "type": "string"
          },
          {
            "name": "update-pricing-schemes_list_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/update_pricing_schemes_list_request.json",
              "example": {
                "pricing_schemes": [
                  {
                    "billing_cycle_sequence": 2,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "50",
                        "currency_code": "USD"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/subscriptions": {
      "post": {
        "summary": "Create subscription",
        "description": "Creates a subscription.",
        "operationId": "subscriptions.create",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription.json"
            }
          },
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription.json",
              "example": {
                "id": "I-BW452GLLEP1G",
                "status": "APPROVAL_PENDING",
                "status_update_time": "2018-12-10T21:20:49Z",
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "start_time": "2018-11-01T00:00:00Z",
                "quantity": "20",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "subscriber": {
                  "name": {
                    "given_name": "John",
                    "surname": "Doe"
                  },
                  "email_address": "customer@example.com",
                  "payer_id": "2J6QB8YJQSJRJ",
                  "shipping_address": {
                    "name": {
                      "full_name": "John Doe"
                    },
                    "address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "Building 17",
                      "admin_area_2": "San Jose",
                      "admin_area_1": "CA",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  }
                },
                "create_time": "2018-12-10T21:20:49Z",
                "links": [
                  {
                    "href": "https://www.paypal.com/webapps/billing/subscriptions?ba_token=BA-2M539689T3856352J",
                    "rel": "approve",
                    "method": "GET"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "self",
                    "method": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 72 hours.",
            "required": false
          },
          {
            "name": "subscription_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_request_post.json",
              "example": {
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "start_time": "2018-11-01T00:00:00Z",
                "quantity": "20",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "subscriber": {
                  "name": {
                    "given_name": "John",
                    "surname": "Doe"
                  },
                  "email_address": "customer@example.com",
                  "shipping_address": {
                    "name": {
                      "full_name": "John Doe"
                    },
                    "address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "Building 17",
                      "admin_area_2": "San Jose",
                      "admin_area_1": "CA",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  }
                },
                "application_context": {
                  "brand_name": "walmart",
                  "locale": "en-US",
                  "shipping_preference": "SET_PROVIDED_ADDRESS",
                  "user_action": "SUBSCRIBE_NOW",
                  "payment_method": {
                    "payer_selected": "PAYPAL",
                    "payee_preferred": "IMMEDIATE_PAYMENT_REQUIRED"
                  },
                  "return_url": "https://example.com/returnUrl",
                  "cancel_url": "https://example.com/cancelUrl"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "summary": "List subscriptions",
        "description": "List all subscriptions for merchant account.",
        "operationId": "subscriptions.list",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the subscriptions.",
            "schema": {
              "$ref": "#/definitions/subscription_collection.json",
              "example": {
                "total_items": 20,
                "total_pages": 10,
                "subscriptions": [
                  {
                    "id": "I-BW452GLLEP1G",
                    "plan_id": "P-5ML4271244454362WXNWU5NQ",
                    "status": "SUSPENDED",
                    "create_time": "2018-12-10T21:20:49Z",
                    "subscriber": {
                      "email_address": "customer@example.com"
                    },
                    "links": [
                      {
                        "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                        "rel": "self",
                        "method": "GET"
                      }
                    ]
                  },
                  {
                    "id": "I-YR452GHHEP7R",
                    "plan_id": "P-5ML4271244454362WXNWW6VZ",
                    "status": "ACTIVE",
                    "create_time": "2019-01-10T21:20:49Z",
                    "subscriber": {
                      "email_address": "customer@example.com"
                    },
                    "links": [
                      {
                        "href": "https://api.paypal.com/v1/billing/subscriptions/I-YR452GHHEP7R",
                        "rel": "self",
                        "method": "GET"
                      }
                    ]
                  }
                ],
                "links": [
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids=P-5ML4271244454362WXNWU5NQ,P-5ML4271244454362WXNWW6VZ&statuses=SUSPENDED,ACTIVE&created_after=2018-01-21T07:50:20.940Z&created_before=2018-08-21T07:50:20.940Z&page_size=2&page=1&total_required=true&filter=billing_info.outstanding_balance ge 0&status_updated_before=2019-01-23T07:50:20.940Z&status_updated_after=2019-01-27T07:50:20.940Z",
                    "rel": "self",
                    "method": "GET"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids=P-5ML4271244454362WXNWU5NQ,P-5ML4271244454362WXNWW6VZ&statuses=SUSPENDED,ACTIVE&created_after=2018-01-21T07:50:20.940Z&created_before=2018-08-21T07:50:20.940Z&page_size=2&page=2&total_required=true&filter=billing_info.outstanding_balance ge 0&status_updated_before=2019-01-23T07:50:20.940Z&status_updated_after=2019-01-27T07:50:20.940Z",
                    "rel": "next",
                    "method": "GET"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids=P-5ML4271244454362WXNWU5NQ,P-5ML4271244454362WXNWW6VZ&statuses=SUSPENDED,ACTIVE&created_after=2018-01-21T07:50:20.940Z&created_before=2018-08-21T07:50:20.940Z&page_size=2&page=10&total_required=true&filter=billing_info.outstanding_balance ge 0&status_updated_before=2019-01-23T07:50:20.940Z&status_updated_after=2019-01-27T07:50:20.940Z",
                    "rel": "last",
                    "method": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "plan_ids",
            "in": "query",
            "description": "Filters the response by list of plan IDs. Filter supports upto <code>70</code> plan IDs. URLs should not exceed a length of <code>2000</code> characters.",
            "type": "string",
            "required": false,
            "minimum": 3,
            "maximum": 1890
          },
          {
            "name": "statuses",
            "in": "query",
            "type": "string",
            "description": "Filters the response by list of subscription statuses.",
            "minLength": 1,
            "maxLength": 70,
            "pattern": "^[A-Z_,]+$",
            "x-enum": [
              {
                "value": "ACTIVE",
                "description": "Active state of the subscription."
              },
              {
                "value": "SUSPENDED",
                "description": "Suspended state of the subscription."
              },
              {
                "value": "CANCELLED",
                "description": "Cancelled state of the subscription."
              },
              {
                "value": "EXPIRED",
                "description": "Expired state of the subscription."
              }
            ]
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "description": "Filters the response by subscription creation start time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "description": "Filters the response by subscription creation end time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
          },
          {
            "name": "status_updated_before",
            "in": "query",
            "required": false,
            "description": "Filters the response by status update start time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
          },
          {
            "name": "status_updated_after",
            "in": "query",
            "required": false,
            "description": "Filters the response by status update end time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the response using complex expressions that could use comparison operators like ge, gt, le, lt and logical operators such as 'and' and 'or'.",
            "type": "string",
            "required": false,
            "minLength": 0,
            "maxLength": 100
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to return in the response.",
            "default": 10,
            "type": "integer",
            "minimum": 1,
            "maximum": 20
          },
          {
            "name": "page",
            "in": "query",
            "description": "A non-zero integer which is the start index of the entire list of items to return in the response. The combination of `page=1` and `page_size=20` returns the first 20 items. The combination of `page=2` and `page_size=20` returns the next 20 items.",
            "default": 1,
            "type": "integer",
            "minimum": 1,
            "maximum": 10000000
          },
          {
            "name": "total_required",
            "in": "query",
            "description": "Indicates whether to show the total count in the response.",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "payer_ids",
            "in": "query",
            "required": false,
            "description": "Filters the response by list of payer IDs.",
            "type": "string",
            "format": "ppaas_payer_id_v3",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "x-visibility": {
              "extent": "INTERNAL"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "summary": "Show subscription details",
        "description": "Shows details for a subscription, by ID.",
        "operationId": "subscriptions.get",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription.json",
              "example": {
                "id": "I-BW452GLLEP1G",
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "start_time": "2019-04-10T07:00:00Z",
                "quantity": "20",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.0"
                },
                "subscriber": {
                  "shipping_address": {
                    "name": {
                      "full_name": "John Doe"
                    },
                    "address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "Building 17",
                      "admin_area_2": "San Jose",
                      "admin_area_1": "CA",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  },
                  "name": {
                    "given_name": "John",
                    "surname": "Doe"
                  },
                  "email_address": "customer@example.com",
                  "payer_id": "2J6QB8YJQSJRJ"
                },
                "billing_info": {
                  "outstanding_balance": {
                    "currency_code": "USD",
                    "value": "1.0"
                  },
                  "cycle_executions": [
                    {
                      "tenure_type": "TRIAL",
                      "sequence": 1,
                      "cycles_completed": 0,
                      "cycles_remaining": 2,
                      "total_cycles": 2
                    },
                    {
                      "tenure_type": "TRIAL",
                      "sequence": 2,
                      "cycles_completed": 0,
                      "cycles_remaining": 3,
                      "total_cycles": 3
                    },
                    {
                      "tenure_type": "REGULAR",
                      "sequence": 3,
                      "cycles_completed": 0,
                      "cycles_remaining": 12,
                      "total_cycles": 12
                    }
                  ],
                  "last_payment": {
                    "amount": {
                      "currency_code": "USD",
                      "value": "1.15"
                    },
                    "time": "2019-04-09T10:27:20Z"
                  },
                  "next_billing_time": "2019-04-10T10:00:00Z",
                  "failed_payments_count": 0
                },
                "create_time": "2019-04-09T10:26:04Z",
                "update_time": "2019-04-09T10:27:27Z",
                "links": [
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/cancel",
                    "rel": "cancel",
                    "method": "POST"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "self",
                    "method": "GET"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/suspend",
                    "rel": "suspend",
                    "method": "POST"
                  },
                  {
                    "href": "https://api.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/capture",
                    "rel": "capture",
                    "method": "POST"
                  }
                ],
                "status": "ACTIVE",
                "status_update_time": "2019-04-09T10:27:27Z"
              }
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields that are to be returned in the response. Possible value for fields is last_failed_payment.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "summary": "Update subscription",
        "description": "Updates a subscription, by ID.",
        "operationId": "subscriptions.patch",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID for the subscription.",
            "type": "string"
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "replace",
                  "path": "/billing_info/outstanding_balance",
                  "value": {
                    "currency_code": "USD",
                    "value": "50.00"
                  }
                }
              ]
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/revise": {
      "post": {
        "summary": "Update quantity of product or service in subscription",
        "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
        "operationId": "subscriptions.revise",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription_revise_response.json",
              "example": {
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "effective_time": "2018-11-01T00:00:00Z",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "shipping_address": {
                  "name": {
                    "full_name": "John Doe"
                  },
                  "address": {
                    "address_line_1": "2211 N First Street",
                    "address_line_2": "Building 17",
                    "admin_area_2": "San Jose",
                    "admin_area_1": "CA",
                    "postal_code": "95131",
                    "country_code": "US"
                  }
                },
                "links": [
                  {
                    "href": "https://www.paypal.com/webapps/billing/subscriptions/update?ba_token=BA-2M539689T3856352J",
                    "rel": "approve",
                    "method": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "subscription_revise_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_revise_request.json",
              "example": {
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "shipping_address": {
                  "name": {
                    "full_name": "John Doe"
                  },
                  "address": {
                    "address_line_1": "2211 N First Street",
                    "address_line_2": "Building 17",
                    "admin_area_2": "San Jose",
                    "admin_area_1": "CA",
                    "postal_code": "95131",
                    "country_code": "US"
                  }
                },
                "application_context": {
                  "brand_name": "walmart",
                  "locale": "en-US",
                  "shipping_preference": "SET_PROVIDED_ADDRESS",
                  "payment_method": {
                    "payer_selected": "PAYPAL",
                    "payee_preferred": "IMMEDIATE_PAYMENT_REQUIRED"
                  },
                  "return_url": "https://example.com/returnUrl",
                  "cancel_url": "https://example.com/cancelUrl"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/save": {
      "post": {
        "summary": "Save subscription",
        "description": "Internal API to be consumed by PayPal applications and not by merchants. Used to commit the changes to SOR after the buyer approves the changes made to the subscription.",
        "operationId": "subscriptions.save",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "subscription_save_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_save_request.json",
              "example": {
                "token_id": "BA-65235000D8208803V"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/suspend": {
      "post": {
        "summary": "Suspend subscription",
        "description": "Suspends the subscription.",
        "operationId": "subscriptions.suspend",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "subscription_suspend_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_suspend_request.json",
              "example": {
                "reason": "Item out of stock"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/cancel": {
      "post": {
        "summary": "Cancel subscription",
        "description": "Cancels the subscription.",
        "operationId": "subscriptions.cancel",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "subscription_cancel_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_cancel_request.json",
              "example": {
                "reason": "Not satisfied with the service"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/activate": {
      "post": {
        "summary": "Activate subscription",
        "description": "Activates the subscription.",
        "operationId": "subscriptions.activate",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "subscription_activate_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_activate_request.json",
              "example": {
                "reason": "Reactivating the subscription"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/capture": {
      "post": {
        "summary": "Capture authorized payment on subscription",
        "description": "Captures an authorized payment from the subscriber on the subscription.",
        "operationId": "subscriptions.capture",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/transaction.json"
            }
          },
          "202": {
            "description": "Request Accepted."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 72 hours.",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "subscription_capture_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_capture_request.json",
              "example": {
                "note": "Charging as the balance reached the limit",
                "capture_type": "OUTSTANDING_BALANCE",
                "amount": {
                  "currency_code": "USD",
                  "value": "100"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/transactions": {
      "get": {
        "summary": "List transactions for subscription",
        "description": "Lists transactions for a subscription.",
        "operationId": "subscriptions.transactions",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/transactions_list.json"
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "description": "The start time of the range of transactions to list.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "description": "The end time of the range of transactions to list.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "plans",
      "description": "Use the `/billing/plans` resource to create and manage plans."
    },
    {
      "name": "subscriptions",
      "description": "Use the `/billing/subscriptions` resource to create and manage subscriptions."
    }
  ],
  "externalDocs": {
    "url": "../doc/USERGUIDE.md"
  },
  "definitions": {
    "plan.json": {
      "title": "Plan",
      "description": "The plan details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique PayPal-generated ID for the plan.",
          "minLength": 3,
          "maxLength": 50,
          "readOnly": true
        },
        "version": {
          "type": "integer",
          "description": "The version of the plan.",
          "minimum": 1,
          "maximum": 10,
          "readOnly": true,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "product_id": {
          "type": "string",
          "description": "The ID for the product.",
          "minLength": 6,
          "maxLength": 50
        },
        "name": {
          "type": "string",
          "description": "The plan name.",
          "minLength": 1,
          "maxLength": 127
        },
        "status": {
          "type": "string",
          "description": "The plan status.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The plan was created. You cannot create subscriptions for a plan in this state."
            },
            {
              "value": "INACTIVE",
              "description": "The plan is inactive."
            },
            {
              "value": "ACTIVE",
              "description": "The plan is active. You can only create subscriptions for a plan in this state."
            }
          ]
        },
        "description": {
          "type": "string",
          "description": "The detailed description of the plan.",
          "minLength": 1,
          "maxLength": 127
        },
        "usage_type": {
          "type": "string",
          "description": "The type of the plan, which indicates the billing pattern.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "LICENSED",
          "x-enum": [
            {
              "value": "LICENSED",
              "description": "A licensed plan."
            },
            {
              "value": "METERED",
              "description": "A metered plan."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "billing_cycles": {
          "type": "array",
          "description": "An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/billing_cycle.json",
            "x-publicDocsSchemaName": "billing_cycle"
          }
        },
        "payment_preferences": {
          "$ref": "#/definitions/payment_preferences.json",
          "x-publicDocsSchemaName": "payment_preferences"
        },
        "taxes": {
          "$ref": "#/definitions/taxes.json",
          "x-publicDocsSchemaName": "taxes"
        },
        "quantity_supported": {
          "type": "boolean",
          "description": "Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.",
          "default": false
        },
        "payee": {
          "readOnly": true,
          "$ref": "#/definitions/customized_x_unsupported_6272_merchant.CommonComponentsSpecification-v1-schema-payee.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "create_time": {
          "description": "The date and time when the plan was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "update_time": {
          "description": "The date and time when the plan was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
            "readOnly": true,
            "x-publicDocsSchemaName": "link_description"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api.paypal.com/v1/billing/plans/{id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans/{id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans/{id}/update-pricing-schemes",
          "rel": "edit",
          "method": "POST"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans/{id}/activate",
          "rel": "activate",
          "method": "POST"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans/{id}/deactivate",
          "rel": "deactivate",
          "method": "POST"
        }
      ],
      "x-publicDocsSchemaName": "plan"
    },
    "billing_cycle.json": {
      "title": "Billing Cycle",
      "description": "The billing cycle details.",
      "type": "object",
      "properties": {
        "pricing_scheme": {
          "description": "The active pricing scheme for this billing cycle. A free trial billing cycle does not require a pricing scheme.",
          "$ref": "#/definitions/pricing_scheme.json"
        },
        "frequency": {
          "description": "The frequency details for this billing cycle.",
          "$ref": "#/definitions/frequency.json"
        },
        "tenure_type": {
          "type": "string",
          "description": "The tenure type of the billing cycle. In case of a plan having trial cycle, only 2 trial cycles are allowed per plan.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "REGULAR",
              "description": "A regular billing cycle."
            },
            {
              "value": "TRIAL",
              "description": "A trial billing cycle."
            }
          ]
        },
        "sequence": {
          "type": "integer",
          "description": "The order in which this cycle is to run among other billing cycles. For example, a trial billing cycle has a `sequence` of `1` while a regular billing cycle has a `sequence` of `2`, so that trial cycle runs before the regular cycle.",
          "minimum": 1,
          "maximum": 99
        },
        "total_cycles": {
          "type": "integer",
          "description": "The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).",
          "minimum": 0,
          "maximum": 999,
          "default": 1
        }
      },
      "required": [
        "frequency",
        "tenure_type",
        "sequence"
      ],
      "x-publicDocsSchemaName": "billing_cycle"
    },
    "pricing_scheme.json": {
      "title": "Pricing Scheme",
      "description": "The pricing scheme details.",
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "description": "The version of the pricing scheme.",
          "minimum": 0,
          "maximum": 999,
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the pricing scheme.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "IN_PROGRESS",
              "description": "The pricing scheme change is in progress."
            },
            {
              "value": "ACTIVE",
              "description": "The pricing scheme change is active."
            },
            {
              "value": "INACTIVE",
              "description": "The pricing scheme is inactive."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true
        },
        "fixed_price": {
          "description": "The fixed amount to charge for the subscription. The changes to fixed amount are applicable to both existing and future subscriptions. For existing subscriptions, payments within 10 days of price change are not affected.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "tier_mode": {
          "type": "string",
          "description": "The pricing model for tiered plan. The `tiers` parameter is required.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "VOLUME",
              "description": "A volume-tiered model."
            },
            {
              "value": "GRADUATED",
              "description": "A graduated-tiered model."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "tiers": {
          "type": "array",
          "description": "An array of pricing tiers which are used for billing volume/graduated plans. tier_mode field has to be specified.",
          "minItems": 1,
          "maxItems": 32,
          "items": {
            "$ref": "#/definitions/pricing_tier.json",
            "x-publicDocsSchemaName": "pricing_tier"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "roll_out_strategy": {
          "$ref": "#/definitions/roll_out_strategy.json",
          "description": "Not exposed to merchants for the initial release. If not specified, the pricing changes will apply to all existing (with current time as effective time and applies to next scheduled payment) and new subscriptions.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "create_time": {
          "description": "The date and time when this pricing scheme was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "update_time": {
          "description": "The date and time when this pricing scheme was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "x-publicDocsSchemaName": "pricing_scheme"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json": {
      "type": "object",
      "title": "Money",
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "properties": {
        "currency_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json"
        },
        "value": {
          "type": "string",
          "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).",
          "maxLength": 32,
          "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
        }
      },
      "required": [
        "currency_code",
        "value"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json": {
      "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
      "type": "string",
      "format": "ppaas_common_currency_code_v2",
      "minLength": 3,
      "maxLength": 3,
      "properties": {}
    },
    "pricing_tier.json": {
      "title": "Pricing Tier",
      "description": "The pricing tier details.",
      "type": "object",
      "properties": {
        "starting_quantity": {
          "type": "string",
          "description": "The starting quantity for the tier.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32
        },
        "ending_quantity": {
          "type": "string",
          "description": "The ending quantity for the tier. Optional for the last tier.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32
        },
        "amount": {
          "description": "The pricing amount for the tier.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        }
      },
      "required": [
        "starting_quantity",
        "amount"
      ],
      "x-publicDocsSchemaName": "pricing_tier"
    },
    "roll_out_strategy.json": {
      "title": "Roll-out Strategy for Pricing Scheme Change",
      "description": "The roll-out strategy for a pricing scheme update. After the pricing update, all new subscriptions are based on this pricing scheme and the values in this object determine the behavior for the existing subscriptions.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "type": "object",
      "properties": {
        "effective_time": {
          "description": "The date and time when the pricing scheme change becomes effective, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "process_change_from": {
          "type": "string",
          "description": "The date and time when this pricing change goes into effect, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Applies only if the plan's pricing scheme is updated.",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^[A-Z_]+$",
          "default": "NEXT_PAYMENT",
          "x-enum": [
            {
              "value": "NEXT_PAYMENT",
              "description": "The pricing change takes effect from the next billing payment after the effective time."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "roll_out_strategy"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json": {
      "type": "string",
      "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
      "format": "ppaas_date_time_v3",
      "minLength": 20,
      "maxLength": 64,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
      "properties": {}
    },
    "frequency.json": {
      "title": "Billing Cycle Frequency",
      "description": "The frequency of the billing cycle.",
      "type": "object",
      "properties": {
        "interval_unit": {
          "type": "string",
          "description": "The interval at which the subscription is charged or billed.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "DAY",
              "description": "A daily billing cycle."
            },
            {
              "value": "WEEK",
              "description": "A weekly billing cycle."
            },
            {
              "value": "SEMI_MONTH",
              "description": "A monthly billing cycle.",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            {
              "value": "MONTH",
              "description": "A monthly billing cycle."
            },
            {
              "value": "YEAR",
              "description": "A yearly billing cycle."
            }
          ]
        },
        "interval_count": {
          "type": "integer",
          "description": "The number of intervals after which a subscriber is billed. For example, if the `interval_unit` is `DAY` with an `interval_count` of  `2`, the subscription is billed once every two days. The following table lists the maximum allowed values for the `interval_count` for each `interval_unit`:<table><thead><tr><th><code>Interval unit</code></th><th>Maximum interval count</th></tr></thead><tbody><tr><td><code>DAY</code></td><td align=\"right\">365</td></tr><tr><td><code>WEEK</code></td><td align=\"right\">52</td></tr><tr><td><code>MONTH</code></td><td align=\"right\">12</td></tr><tr><td><code>YEAR</code></td><td align=\"right\">1</td></tr></tbody></table>",
          "minimum": 1,
          "maximum": 365,
          "default": 1
        }
      },
      "required": [
        "interval_unit"
      ],
      "x-publicDocsSchemaName": "frequency"
    },
    "payment_preferences.json": {
      "title": "Payment Preferences",
      "description": "The payment preferences for a subscription.",
      "type": "object",
      "properties": {
        "service_type": {
          "type": "string",
          "description": "A pre- or post-paid service.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "PREPAID",
          "x-enum": [
            {
              "value": "PREPAID",
              "description": "A prepaid billing cycle."
            },
            {
              "value": "POSTPAID",
              "description": "A postpaid billing cycle."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "auto_bill_outstanding": {
          "type": "boolean",
          "description": "Indicates whether to automatically bill the outstanding amount in the next billing cycle.",
          "default": true
        },
        "setup_fee": {
          "description": "The initial set-up fee for the service.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "setup_fee_failure_action": {
          "type": "string",
          "description": "The action to take on the subscription if the initial payment for the setup fails.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "CANCEL",
          "x-enum": [
            {
              "value": "CONTINUE",
              "description": "Continues the subscription if the initial payment for the setup fails."
            },
            {
              "value": "CANCEL",
              "description": "Cancels the subscription if the initial payment for the setup fails."
            }
          ]
        },
        "payment_failure_threshold": {
          "type": "integer",
          "description": "The maximum number of payment failures before a subscription is suspended. For example, if `payment_failure_threshold` is `2`, the subscription automatically updates to the `SUSPEND` state if two consecutive payments fail.",
          "minimum": 0,
          "maximum": 999,
          "default": 0
        }
      },
      "x-publicDocsSchemaName": "payment_preferences"
    },
    "taxes.json": {
      "title": "Taxes",
      "description": "The tax details.",
      "type": "object",
      "properties": {
        "percentage": {
          "description": "The tax percentage on the billing amount.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-percentage.json"
        },
        "inclusive": {
          "type": "boolean",
          "description": "Indicates whether the tax was already included in the billing amount.",
          "default": true
        }
      },
      "required": [
        "percentage"
      ],
      "x-publicDocsSchemaName": "taxes"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-percentage.json": {
      "type": "string",
      "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
      "format": "ppaas_common_percentage_v2",
      "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee_base.json": {
      "type": "object",
      "title": "Merchant Base",
      "description": "The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "properties": {
        "email_address": {
          "description": "The email address of merchant.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "merchant_id": {
          "description": "The encrypted PayPal account ID of the merchant.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        },
        "client_id": {
          "type": "string",
          "description": "The public ID for the payee- or merchant-created app. Introduced to support use cases, such as BrainTree integration with PayPal, where payee `email_address` or `merchant_id` is not available.",
          "maxLength": 80,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "payee_base"
    },
    "merchant.CommonComponentsSpecification-v1-schema-email.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "merchant_common_email_address_v2",
      "maxLength": 254,
      "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
      "x-publicDocsSchemaName": "email",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json": {
      "type": "string",
      "title": "PayPal Account Identifier",
      "description": "The account identifier for a PayPal account.",
      "format": "ppaas_payer_id_v3",
      "minLength": 13,
      "maxLength": 13,
      "pattern": "^[2-9A-HJ-NP-Z]{13}$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json": {
      "type": "object",
      "title": "Displayable Merchant Information",
      "description": "The merchant information. The merchant is also known as the payee. Appears to the customer in checkout, transactions, email receipts, and transaction history.",
      "properties": {
        "business_email": {
          "description": "The email address of the merchant. Appears to the customer in checkout, transactions, email receipts, and transaction history.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "business_phone": {
          "description": "The phone number of the merchant. Appears to the customer in checkout, payment transactions, email receipts, and transaction history.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json"
        },
        "brand_name": {
          "type": "string",
          "description": "The name of the merchant. Appears to the customer in checkout, payment transactions, email receipts, and transaction history.",
          "maxLength": 127
        }
      },
      "x-publicDocsSchemaName": "payee_displayable"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "country_code": {
          "type": "string",
          "x-publicDocsSchemaName": "country_calling_code",
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 3,
          "pattern": "^[0-9]{1,3}?$"
        },
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        },
        "extension_number": {
          "type": "string",
          "description": "The extension number.",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[0-9]{1,15}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json": {
      "type": "object",
      "title": "Link Description",
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "required": [
        "href",
        "rel"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "rel": {
          "type": "string",
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "method": {
          "type": "string",
          "description": "The HTTP method required to make the related call.",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "HEAD",
            "CONNECT",
            "OPTIONS",
            "PATCH"
          ],
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "title": {
          "type": "string",
          "description": "The link title.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "mediaType": {
          "type": "string",
          "description": "The media type, as defined by [RFC 2046](https://www.ietf.org/rfc/rfc2046.txt). Describes the link target.",
          "x-publicDocsSchemaName": "media_type",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "encType": {
          "type": "string",
          "description": "The media type in which to submit the request data.",
          "x-publicDocsSchemaName": "enc_type",
          "default": "application/json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "schema": {
          "description": "The schema that describes the request data.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "targetSchema": {
          "description": "The schema that describes the link target.",
          "x-publicDocsSchemaName": "target_schema",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json": {
      "type": "object",
      "title": "Link Schema",
      "description": "The request data or link target.",
      "additionalProperties": true,
      "properties": {
        "additionalItems": {
          "type": "object",
          "title": "Additional Items",
          "additionalProperties": true,
          "description": "Any additional items.",
          "x-publicDocsSchemaName": "additional_items"
        },
        "dependencies": {
          "type": "object",
          "title": "Dependencies",
          "additionalProperties": true
        },
        "items": {
          "type": "object",
          "title": "Items",
          "additionalProperties": true,
          "description": "An item."
        },
        "definitions": {
          "type": "object",
          "title": "Definitions",
          "additionalProperties": true
        },
        "patternProperties": {
          "type": "object",
          "title": "Pattern Properties",
          "additionalProperties": true,
          "description": "The pattern properties.",
          "x-publicDocsSchemaName": "pattern_properties"
        },
        "properties": {
          "type": "object",
          "title": "Properties",
          "additionalProperties": true
        },
        "allOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against all sub-schemas.",
          "x-publicDocsSchemaName": "all_of",
          "items": {
            "type": "object",
            "title": "All Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "all_of_item"
          }
        },
        "anyOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one or more sub-schemas.",
          "x-publicDocsSchemaName": "any_of",
          "items": {
            "type": "object",
            "title": "Any Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "any_of_item"
          }
        },
        "oneOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one sub-schema.",
          "x-publicDocsSchemaName": "one_of",
          "items": {
            "type": "object",
            "title": "One Of Item",
            "description": "A sub-schema against which the data must validate.",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "one_of_item"
          }
        },
        "not": {
          "type": "object",
          "title": "Not",
          "additionalProperties": true
        },
        "links": {
          "type": "array",
          "description": "An array of links.",
          "readOnly": true,
          "items": {
            "type": "object",
            "title": "Link",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "link",
            "description": "A link.",
            "readOnly": true
          }
        },
        "fragmentResolution": {
          "type": "string",
          "description": "The fragment resolution.",
          "x-publicDocsSchemaName": "fragment_resolution"
        },
        "media": {
          "type": "object",
          "title": "Media",
          "description": "The media type and context-encoding scheme.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The media type. See [Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types](https://tools.ietf.org/html/rfc2046)."
            },
            "binaryEncoding": {
              "type": "string",
              "description": "The content-encoding scheme. See [Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](https://tools.ietf.org/html/rfc2045).",
              "x-publicDocsSchemaName": "binary_encoding"
            }
          }
        },
        "pathStart": {
          "type": "string",
          "format": "uri",
          "description": "To apply this schema to the instances' URIs, start the URIs with this value.",
          "x-publicDocsSchemaName": "path_start"
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json": {
      "type": "object",
      "title": "Error",
      "description": "The error details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The human-readable, unique name of the error."
        },
        "message": {
          "type": "string",
          "description": "The message that describes the error."
        },
        "debug_id": {
          "type": "string",
          "description": "The PayPal internal ID. Used for correlation purposes."
        },
        "information_link": {
          "type": "string",
          "description": "The information link, or URI, that shows detailed information about this error for the developer.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of additional details about the error.",
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error_details.json",
            "x-publicDocsSchemaName": "error_details"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          }
        }
      },
      "required": [
        "name",
        "message",
        "debug_id"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error_details.json": {
      "title": "Error Details",
      "type": "object",
      "description": "The error details. Required for client-side `4XX` errors.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
        },
        "value": {
          "type": "string",
          "description": "The value of the field that caused the error."
        },
        "location": {
          "type": "string",
          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
          "default": "body"
        },
        "issue": {
          "type": "string",
          "description": "The unique, fine-grained application-level error code."
        },
        "description": {
          "type": "string",
          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
        }
      },
      "required": [
        "issue"
      ]
    },
    "plan_request_POST.json": {
      "title": "Create Plan Request",
      "description": "The create plan request details.",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string",
          "description": "The ID of the product.",
          "minLength": 6,
          "maxLength": 50
        },
        "name": {
          "type": "string",
          "description": "The plan name.",
          "minLength": 1,
          "maxLength": 127
        },
        "status": {
          "type": "string",
          "description": "The initial state of the plan. Allowed input values are CREATED and ACTIVE.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "ACTIVE",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The plan was created. You cannot create subscriptions for a plan in this state."
            },
            {
              "value": "INACTIVE",
              "description": "The plan is inactive."
            },
            {
              "value": "ACTIVE",
              "description": "The plan is active. You can only create subscriptions for a plan in this state."
            }
          ]
        },
        "description": {
          "type": "string",
          "description": "The detailed description of the plan.",
          "minLength": 1,
          "maxLength": 127
        },
        "usage_type": {
          "type": "string",
          "description": "The plan type, which indicates the billing pattern.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "LICENSED",
          "x-enum": [
            {
              "value": "LICENSED",
              "description": "A licensed plan. Has a fixed billing amount."
            },
            {
              "value": "METERED",
              "description": "A metered plan. Billed based on service consumption."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "billing_cycles": {
          "type": "array",
          "description": "An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/billing_cycle.json",
            "x-publicDocsSchemaName": "billing_cycle"
          }
        },
        "payment_preferences": {
          "$ref": "#/definitions/payment_preferences.json",
          "x-publicDocsSchemaName": "payment_preferences"
        },
        "taxes": {
          "$ref": "#/definitions/taxes.json",
          "x-publicDocsSchemaName": "taxes"
        },
        "quantity_supported": {
          "type": "boolean",
          "description": "Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.",
          "default": false
        }
      },
      "required": [
        "name",
        "billing_cycles",
        "payment_preferences",
        "product_id"
      ],
      "x-publicDocsSchemaName": "plan_request"
    },
    "plan_collection.json": {
      "title": "Plan Collection",
      "description": "The list of plans with details.",
      "type": "object",
      "properties": {
        "plans": {
          "type": "array",
          "minItems": 0,
          "maxItems": 32767,
          "description": "An array of plans.",
          "items": {
            "$ref": "#/definitions/plan.json",
            "x-publicDocsSchemaName": "plan"
          }
        },
        "total_items": {
          "type": "integer",
          "description": "The total number of items.",
          "minimum": 0,
          "maximum": 500000000
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages.",
          "minimum": 0,
          "maximum": 100000000
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page}",
          "rel": "first",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page+1}",
          "rel": "next",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page-1}",
          "rel": "prev",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={last}",
          "rel": "last",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "plan_collection"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json": {
      "type": "array",
      "title": "Patch Request",
      "description": "An array of JSON patch objects to apply partial updates to resources.",
      "items": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch.json",
        "x-publicDocsSchemaName": "patch"
      },
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch.json": {
      "type": "object",
      "title": "Patch",
      "description": "The JSON patch object to apply partial updates to resources.",
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation.",
          "x-enum": [
            {
              "value": "add",
              "description": "Depending on the target location reference, completes one of these functions:<ul><li><strong>The target location is an array index</strong>. Inserts a new value into the array at the specified index.</li><li><strong>The target location is an object parameter that does not already exist</strong>. Adds a new parameter to the object.</li><li><strong>The target location is an object parameter that does exist</strong>. Replaces that parameter's value.</li></ul>The <code>value</code> parameter defines the value to add. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.1\">4.1. add</a>."
            },
            {
              "value": "remove",
              "description": "Removes the value at the target location. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.2\">4.2. remove</a>."
            },
            {
              "value": "replace",
              "description": "Replaces the value at the target location with a new value. The operation object must contain a <code>value</code> parameter that defines the replacement value. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.3\">4.3. replace</a>."
            },
            {
              "value": "move",
              "description": "Removes the value at a specified location and adds it to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to move the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.4\">4.4. move</a>."
            },
            {
              "value": "copy",
              "description": "Copies the value at a specified location to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to copy the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.5\">4.5. copy</a>."
            },
            {
              "value": "test",
              "description": "Tests that a value at the target location is equal to a specified value. The operation object must contain a <code>value</code> parameter that defines the value to compare to the target location's value. For the operation to succeed, the target location must be equal to the <code>value</code> value. For test, <code>equal</code> indicates that the value at the target location and the value that <code>value</code> defines are of the same JSON type. The data type of the value determines how equality is defined:<table><thead align=\"left\"><tr><th>Type</th><th>Considered equal if both values</th></tr></thead><tbody align=\"left\"><tr><td><strong>strings</strong></td><td>Contain the same number of Unicode characters and their code points are byte-by-byte equal.</td></tr><tr><td><strong>numbers</strong></td><td>Are numerically equal.</td></tr><tr><td><strong>arrays</strong></td><td>Contain the same number of values, and each value is equal to the value at the corresponding position in the other array, by using these type-specific rules.</td></tr><tr><td><strong>objects</strong></td><td>Contain the same number of parameters, and each parameter is equal to a parameter in the other object, by comparing their keys (as strings) and their values (by using these type-specific rules).</td></tr><tr><td><strong>literals (<code>false</code>, <code>true</code>, and <code>null</code>)</strong></td><td>Are the same. The comparison is a logical comparison. For example, whitespace between the parameter values of an array is not significant. Also, ordering of the serialization of object parameters is not significant.</td></tr></tbody></table>For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.6\">4.6. test</a>."
            }
          ]
        },
        "path": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location at which to complete the operation."
        },
        "value": {
          "type": [
            "number",
            "integer",
            "string",
            "boolean",
            "null",
            "array",
            "object"
          ],
          "title": "Patch Value",
          "description": "The value to apply. The <code>remove</code> operation does not require a value."
        },
        "from": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation."
        }
      },
      "required": [
        "op"
      ]
    },
    "update_pricing_schemes_list_request.json": {
      "title": "Update Pricing Scheme Request",
      "description": "The update pricing scheme request details.",
      "type": "object",
      "properties": {
        "pricing_schemes": {
          "type": "array",
          "description": "An array of pricing schemes.",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/update_pricing_scheme_request.json",
            "x-publicDocsSchemaName": "update_pricing_scheme_request"
          }
        }
      },
      "required": [
        "pricing_schemes"
      ],
      "x-publicDocsSchemaName": "update_pricing_schemes_list_request"
    },
    "update_pricing_scheme_request.json": {
      "title": "Update Pricing Scheme",
      "description": "The update pricing scheme request details.",
      "type": "object",
      "properties": {
        "billing_cycle_sequence": {
          "type": "integer",
          "description": "The billing cycle sequence.",
          "minimum": 1,
          "maximum": 99
        },
        "pricing_scheme": {
          "$ref": "#/definitions/pricing_scheme.json"
        }
      },
      "required": [
        "billing_cycle_sequence",
        "pricing_scheme"
      ],
      "x-publicDocsSchemaName": "update_pricing_scheme_request"
    },
    "subscription.json": {
      "title": "Subscription",
      "description": "The subscription details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/subscription_status.json"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "The PayPal-generated ID for the subscription.",
              "minLength": 3,
              "maxLength": 50,
              "readOnly": true
            },
            "plan_id": {
              "type": "string",
              "description": "The ID of the plan.",
              "minLength": 3,
              "maxLength": 50
            },
            "start_time": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
            },
            "quantity": {
              "type": "string",
              "description": "The quantity of the product in the subscription.",
              "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
              "minLength": 1,
              "maxLength": 32
            },
            "shipping_amount": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
            },
            "payee": {
              "readOnly": true,
              "$ref": "#/definitions/customized_x_unsupported_8146_merchant.CommonComponentsSpecification-v1-schema-payee.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            "subscriber": {
              "$ref": "#/definitions/subscriber.json"
            },
            "billing_info": {
              "readOnly": true,
              "$ref": "#/definitions/subscription_billing_info.json"
            },
            "auto_renewal": {
              "type": "boolean",
              "description": "DEPRECATED. Indicates whether the subscription auto-renews after the billing cycles complete.",
              "default": false,
              "x-deprecated": {
                "see": "billing_cycle.json#/total_cycles",
                "since_version": "1.1"
              },
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            "create_time": {
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
            },
            "update_time": {
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
            },
            "preferred_currency_conversion": {
              "x-publicDocsSchemaName": "preferred_currency_conversion",
              "description": "The payer's preferred currency conversion option. Value is `PAYPAL` or `VENDOR`.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-currency_conversion_provider.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            "preferred_funding_source": {
              "description": "The preferred funding source details",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-funding_instrument_response.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            "links": {
              "type": "array",
              "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "readOnly": true,
              "items": {
                "x-publicDocsSchemaName": "link_description",
                "readOnly": true,
                "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
              }
            }
          }
        }
      ],
      "x-links": [
        {
          "href": "https://www.paypal.com/webapps/billing/subscriptions?ba_token={ba_token}",
          "rel": "approve",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription_id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription_id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription_id}/suspend",
          "rel": "suspend",
          "method": "POST"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription_id}/cancel",
          "rel": "cancel",
          "method": "POST"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription_id}/activate",
          "rel": "activate",
          "method": "POST"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription_id}/capture",
          "rel": "capture",
          "method": "POST"
        }
      ],
      "x-publicDocsSchemaName": "subscription",
      "properties": {}
    },
    "subscription_status.json": {
      "title": "Subscription Status",
      "description": "The subscription status details.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the subscription.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "APPROVAL_PENDING",
              "description": "The subscription is created but not yet approved by the buyer."
            },
            {
              "value": "APPROVED",
              "description": "The buyer has approved the subscription."
            },
            {
              "value": "ACTIVE",
              "description": "The subscription is active."
            },
            {
              "value": "SUSPENDED",
              "description": "The subscription is suspended."
            },
            {
              "value": "CANCELLED",
              "description": "The subscription is cancelled."
            },
            {
              "value": "EXPIRED",
              "description": "The subscription is expired."
            }
          ]
        },
        "status_change_note": {
          "type": "string",
          "description": "The reason or notes for the status of the subscription.",
          "minLength": 1,
          "maxLength": 128
        },
        "status_update_time": {
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "status_changed_by": {
          "type": "string",
          "description": "The last actor that updated the subscription.",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "SYSTEM",
              "description": "The subscription status bas been updated by the system."
            },
            {
              "value": "BUYER",
              "description": "The subscription status bas been updated by the buyer."
            },
            {
              "value": "MERCHANT",
              "description": "The subscription status bas been updated by the merchant."
            },
            {
              "value": "FACILITATOR",
              "description": "The subscription status bas been updated by the facilitator. Facilitators ca be a third party or channel partner that integrates with PayPal."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "subscription_status"
    },
    "subscriber.json": {
      "title": "Subscriber Response Information",
      "description": "The subscriber response information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_1379_merchant.CommonComponentsSpecification-v1-schema-payer.json"
        },
        {
          "properties": {
            "shipping_address": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json"
            },
            "payment_source": {
              "$ref": "#/definitions/payment_source_response.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "subscriber",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "properties": {
        "name": {
          "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
          "$ref": "#/definitions/customized_x_unsupported_8227_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "email_address": {
          "description": "The email address of the payer.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "payer_id": {
          "description": "The PayPal-assigned ID for the payer.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        },
        "phone": {
          "description": "The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href=\"https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments\">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-phone_with_type.json"
        },
        "birth_date": {
          "description": "The birth date of the payer in `YYYY-MM-DD` format.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json"
        },
        "tax_info": {
          "description": "The tax information of the payer. Required only for Brazilian payer's. Both `tax_id` and `tax_id_type` are required.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-tax_info.json"
        },
        "address": {
          "description": "The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.",
          "$ref": "#/definitions/customized_x_unsupported_6402_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "x-publicDocsSchemaName": "payer"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "prefix": {
          "type": "string",
          "description": "The prefix, or title, to the party's name.",
          "maxLength": 140
        },
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        },
        "middle_name": {
          "type": "string",
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "maxLength": 140
        },
        "suffix": {
          "type": "string",
          "description": "The suffix for the party's name.",
          "maxLength": 140
        },
        "alternate_full_name": {
          "type": "string",
          "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
          "maxLength": 300
        },
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json": {
      "oneOf": [
        {
          "country_code": "AD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "AN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "CO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "EG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ER",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ES",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ET",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0342-\\u0345\\u037A-\\u037D\\u037F\\u0384-\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03D7\\u03F3\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE]"
        },
        {
          "country_code": "GT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "HN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ID",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F]"
        },
        {
          "country_code": "IM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u3005\\uFF07\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FF\\u31F0-\\u31FF\\uFF65-\\uFF9F\\uFF0D\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "KH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\uAC00-\\uD7A3\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ME",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "ML",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "OM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "QA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "SH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ST",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0E01-\\u0E3A\\u0E40-\\u0E4F]"
        },
        {
          "country_code": "TJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "TZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "UG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "US",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "XK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "C2",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-phone_with_type.json": {
      "type": "object",
      "title": "Phone With Type",
      "description": "The phone information.",
      "properties": {
        "phone_type": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone_type.json"
        },
        "phone_number": {
          "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.",
          "$ref": "#/definitions/customized_x_unsupported_7167_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json"
        }
      },
      "required": [
        "phone_number"
      ],
      "x-publicDocsSchemaName": "phone_with_type"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone_type.json": {
      "type": "string",
      "title": "Phone Type",
      "description": "The phone type.",
      "enum": [
        "FAX",
        "HOME",
        "MOBILE",
        "OTHER",
        "PAGER"
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json": {
      "type": "string",
      "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
      "format": "ppaas_date_notime_v2",
      "minLength": 10,
      "maxLength": 10,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-tax_info.json": {
      "type": "object",
      "description": "The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.",
      "title": "Tax Information",
      "properties": {
        "tax_id": {
          "type": "string",
          "description": "The customer's tax ID. Supported for the PayPal payment method only. Typically, the tax ID is 11 characters long for individuals and 14 characters long for businesses.",
          "maxLength": 14
        },
        "tax_id_type": {
          "type": "string",
          "description": "The customer's tax ID type. Supported for the PayPal payment method only.",
          "x-enum": [
            {
              "value": "BR_CPF",
              "description": "The individual tax ID type."
            },
            {
              "value": "BR_CNPJ",
              "description": "The business tax ID type."
            }
          ]
        }
      },
      "required": [
        "tax_id",
        "tax_id_type"
      ],
      "x-publicDocsSchemaName": "tax_info"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "maxLength": 100
        },
        "admin_area_4": {
          "type": "string",
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
          "maxLength": 100
        },
        "admin_area_3": {
          "type": "string",
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
          "maxLength": 100
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "address_details": {
          "type": "object",
          "title": "Address Details",
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "properties": {
            "street_number": {
              "type": "string",
              "description": "The street number.",
              "maxLength": 100
            },
            "street_name": {
              "type": "string",
              "description": "The street name. Just `Drury` in `Drury Lane`.",
              "maxLength": 100
            },
            "street_type": {
              "type": "string",
              "description": "The street type. For example, avenue, boulevard, road, or expressway.",
              "maxLength": 100
            },
            "delivery_service": {
              "type": "string",
              "description": "The delivery service. Post office box, bag number, or post office name.",
              "maxLength": 100
            },
            "building_name": {
              "type": "string",
              "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.",
              "maxLength": 100
            },
            "sub_building": {
              "type": "string",
              "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
              "maxLength": 100
            }
          }
        }
      },
      "required": [
        "country_code"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json": {
      "oneOf": [
        {
          "country_code": "AL",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AR",
          "validation_regex": "([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?"
        },
        {
          "country_code": "AT",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BE",
          "validation_regex": "[1-9]\\d{3}"
        },
        {
          "country_code": "BG",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Z]{2}[ ]?\\d{4}"
        },
        {
          "country_code": "BR",
          "validation_regex": "\\d{5}[\\-]?\\d{3}"
        },
        {
          "country_code": "BT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "BY",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CA",
          "validation_regex": "[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ ]?\\d[ABCEGHJ-NPRSTV-Z]\\d"
        },
        {
          "country_code": "CH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CL",
          "validation_regex": "\\d{7}"
        },
        {
          "country_code": "CN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CR",
          "validation_regex": "\\d{4,5}|\\d{3}-\\d{4}"
        },
        {
          "country_code": "CY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CZ",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "DE",
          "validation_regex": "(0[1-9]|[1-9]\\d)\\d{3}"
        },
        {
          "country_code": "DK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "DO",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "EC",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "EE",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "ES",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FI",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FM",
          "validation_regex": "(9694[1-4])(?:[ \\-]?(\\d{4}))?"
        },
        {
          "country_code": "FO",
          "validation_regex": "(FO[ \\-]?)?\\d{3}"
        },
        {
          "country_code": "FR",
          "validation_regex": "\\d{2}[ ]?\\d{3}"
        },
        {
          "country_code": "GB",
          "validation_regex": "GIR[ ]?0AA|(?:(?:AB|AL|B|BA|BB|BD|BF|BH|BL|BN|BR|BS|BT|BX|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(?:\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}))|BFPO[ ]?\\d{1,4}"
        },
        {
          "country_code": "GF",
          "validation_regex": "9[78]3\\d{2}"
        },
        {
          "country_code": "GL",
          "validation_regex": "(DK-?)?39\\d{2}"
        },
        {
          "country_code": "GP",
          "validation_regex": "9[78][01]\\d{2}"
        },
        {
          "country_code": "GR",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "HR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "HU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ID",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z0-9 \\-]{1,10}"
        },
        {
          "country_code": "IL",
          "validation_regex": "\\d{5}(\\d{2})?"
        },
        {
          "country_code": "IN",
          "validation_regex": "\\d{3}[ ]?\\d{3}"
        },
        {
          "country_code": "IS",
          "validation_regex": "\\d{3}"
        },
        {
          "country_code": "IT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "JP",
          "validation_regex": "\\d{3}-?\\d{4}"
        },
        {
          "country_code": "KG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "KH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KW",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KZ",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "LA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LK",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "LV",
          "validation_regex": "LV-\\d{4}"
        },
        {
          "country_code": "MA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MC",
          "validation_regex": "980\\d{2}"
        },
        {
          "country_code": "MD",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ME",
          "validation_regex": "8\\d{4}"
        },
        {
          "country_code": "MK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "MN",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MQ",
          "validation_regex": "9[78]2\\d{2}"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Z]{3}[ ]?\\d{2,4}"
        },
        {
          "country_code": "MU",
          "validation_regex": "\\d{3}(?:\\d{2}|[A-Z]{2}\\d{3})"
        },
        {
          "country_code": "MV",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MX",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MY",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "NL",
          "validation_regex": "\\d{4}[ ]?[A-Z]{2}"
        },
        {
          "country_code": "NO",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "NP",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NZ",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "OM",
          "validation_regex": "(?:PC )?\\d{3}"
        },
        {
          "country_code": "PE",
          "validation_regex": "(?:LIMA[ ]?\\d{1,2}|CALLAO[ ]?0?\\d)|[0-2]?\\d{1,4}"
        },
        {
          "country_code": "PH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "PL",
          "validation_regex": "\\d{2}-\\d{3}"
        },
        {
          "country_code": "PT",
          "validation_regex": "\\d{4}([\\-]?\\d{3})?"
        },
        {
          "country_code": "PY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "RE",
          "validation_regex": "9[78]4\\d{2}"
        },
        {
          "country_code": "RO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "RS",
          "validation_regex": "\\d{5,6}"
        },
        {
          "country_code": "RU",
          "validation_regex": "[1-9]\\d{5}"
        },
        {
          "country_code": "SA",
          "validation_regex": "\\d{5}([\\-]?\\d{4})?"
        },
        {
          "country_code": "SE",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "SI",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "SK",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SM",
          "validation_regex": "4789\\d"
        },
        {
          "country_code": "SV",
          "validation_regex": "(?:CP[ ]?)?[1-3][1-7][0-2]\\d"
        },
        {
          "country_code": "TH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TW",
          "validation_regex": "\\d{3}(\\d{2})?"
        },
        {
          "country_code": "UA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "US",
          "validation_regex": "\\d{5}([ \\-]?\\d{4})?"
        },
        {
          "country_code": "UY",
          "validation_regex": "[1-9]\\d{4}"
        },
        {
          "country_code": "VA",
          "validation_regex": "00120"
        },
        {
          "country_code": "VE",
          "validation_regex": "[1-8]\\d{3}([\\-]?[A-Z])?"
        },
        {
          "country_code": "VN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "YT",
          "validation_regex": "976\\d{2}"
        },
        {
          "country_code": "ZA",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "C2",
          "validation_regex": "\\d{6}"
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json": {
      "type": "string",
      "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
      "format": "ppaas_common_country_code_v2",
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^([A-Z]{2}|C2)$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json": {
      "type": "object",
      "description": "The shipping details.",
      "title": "Shipping Details",
      "properties": {
        "name": {
          "description": "The name of the person to whom to ship the items. Supports only the `full_name` property.",
          "$ref": "#/definitions/customized_x_unsupported_3731_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "options": {
          "type": "array",
          "description": "An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.",
          "maxItems": 10,
          "items": {
            "description": "The option that the payee or merchant offers to the payer to ship or pick up their items.",
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_option.json",
            "x-publicDocsSchemaName": "shipping_option"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "address": {
          "description": "The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_7826_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "x-publicDocsSchemaName": "shipping_detail"
    },
    "merchant.CommonComponentsSpecification-v1-schema-shipping_option.json": {
      "type": "object",
      "title": "Shipping Option",
      "description": "The options that the payee or merchant offers to the payer to ship or pick up their items.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID that identifies a payer-selected shipping option.",
          "maxLength": 127
        },
        "label": {
          "type": "string",
          "description": "A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.",
          "maxLength": 127
        },
        "type": {
          "description": "The method by which the payer wants to get their items.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_type.json"
        },
        "amount": {
          "description": "The shipping cost for the selected option.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "selected": {
          "type": "boolean",
          "description": "If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`."
        }
      },
      "required": [
        "id",
        "label",
        "selected"
      ],
      "x-publicDocsSchemaName": "shipping_option"
    },
    "merchant.CommonComponentsSpecification-v1-schema-shipping_type.json": {
      "type": "string",
      "title": "Shipping Type",
      "description": "The method by which the payer wants to get their items.",
      "x-enum": [
        {
          "value": "SHIPPING",
          "description": "The payer intends to receive the items at a specified address.",
          "default": true
        },
        {
          "value": "PICKUP",
          "description": "The payer intends to pick up the items at a specified address. For example, a store address."
        }
      ],
      "x-publicDocsSchemaName": "shipping_type",
      "properties": {}
    },
    "payment_source_response.json": {
      "type": "object",
      "title": "Payment Source Response",
      "description": "The payment source used to fund the payment.",
      "properties": {
        "card": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response_with_billing_address.json"
        }
      },
      "x-publicDocsSchemaName": "payment_source_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_response_with_billing_address.json": {
      "type": "object",
      "title": "Card Response with billing address and name",
      "description": "The payment card used to fund the payment. Card can be a credit or debit card.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response.json"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The card holder's name as it appears on the card.",
              "minLength": 2,
              "maxLength": 300
            },
            "billing_address": {
              "$ref": "#/definitions/customized_x_unsupported_7001_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json",
              "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties."
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "card_response_with_billing_address",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_response.json": {
      "type": "object",
      "title": "Card Response",
      "description": "The payment card to use to fund a payment. Card can be a credit or debit card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the card.",
          "readOnly": true,
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be deprecated"
          }
        },
        "last_n_chars": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "minLength": 2,
          "pattern": "[0-9]{2,}",
          "readOnly": true,
          "x-deprecated": {
            "see": "last_digits"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be deprecated"
          }
        },
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "brand": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "type": {
          "type": "string",
          "description": "The payment card type.",
          "readOnly": true,
          "x-enum": [
            {
              "value": "CREDIT",
              "description": "A credit card."
            },
            {
              "value": "DEBIT",
              "description": "A debit card."
            },
            {
              "value": "PREPAID",
              "description": "A Prepaid card."
            },
            {
              "value": "UNKNOWN",
              "description": "Card type cannot be determined."
            }
          ]
        },
        "issuer": {
          "type": "string",
          "description": "The issuer of the card instrument.",
          "readOnly": true,
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be depreciated"
          },
          "x-enum": [
            {
              "value": "PAYPAL",
              "description": "A PayPal credit card."
            }
          ]
        },
        "bin": {
          "type": "string",
          "description": "An acronym for Bank Identification Number (BIN), also known as IIN (Issuer Identification Number). It Is a standardized global numbering scheme (6 to 8 digits) used to identify a bank / institution that issued the card.",
          "pattern": "^[0-9]{6,8}$",
          "maxLength": 8,
          "minLength": 6,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        }
      },
      "x-publicDocsSchemaName": "card_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_brand.json": {
      "type": "string",
      "title": "Card Brand",
      "description": "The card network or brand. Applies to credit, debit, gift, and payment cards.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "VISA",
          "description": "Visa card."
        },
        {
          "value": "MASTERCARD",
          "description": "Mastecard card."
        },
        {
          "value": "DISCOVER",
          "description": "Discover card."
        },
        {
          "value": "AMEX",
          "description": "American Express card."
        },
        {
          "value": "SOLO",
          "description": "Solo debit card."
        },
        {
          "value": "JCB",
          "description": "Japan Credit Bureau card."
        },
        {
          "value": "STAR",
          "description": "Military Star card."
        },
        {
          "value": "DELTA",
          "description": "Delta Airlines card."
        },
        {
          "value": "SWITCH",
          "description": "Switch credit card."
        },
        {
          "value": "MAESTRO",
          "description": "Maestro credit card."
        },
        {
          "value": "CB_NATIONALE",
          "description": "Carte Bancaire (CB) credit card."
        },
        {
          "value": "CONFIGOGA",
          "description": "Configoga credit card."
        },
        {
          "value": "CONFIDIS",
          "description": "Confidis credit card."
        },
        {
          "value": "ELECTRON",
          "description": "Visa Electron credit card."
        },
        {
          "value": "CETELEM",
          "description": "Cetelem credit card."
        },
        {
          "value": "CHINA_UNION_PAY",
          "description": "China union pay credit card."
        }
      ],
      "x-publicDocsSchemaName": "card_brand",
      "properties": {}
    },
    "subscription_billing_info.json": {
      "title": "Subscription Billing Information",
      "description": "The billing details for the subscription. If the subscription was or is active, these fields are populated.",
      "type": "object",
      "properties": {
        "outstanding_balance": {
          "description": "The total pending bill amount, to be paid by the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "cycle_executions": {
          "type": "array",
          "description": "The trial and regular billing executions.",
          "minItems": 0,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/cycle_execution.json"
          },
          "readOnly": true
        },
        "last_payment": {
          "readOnly": true,
          "$ref": "#/definitions/last_payment_details.json"
        },
        "next_billing_time": {
          "description": "The next date and time for billing this subscription, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "next_payment": {
          "description": "The next payment amount that the subscriber would be charged.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "final_payment_time": {
          "description": "The date and time when the final billing cycle occurs, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "failed_payments_count": {
          "type": "integer",
          "description": "The number of consecutive payment failures. Resets to `0` after a successful payment. If this reaches the `payment_failure_threshold` value, the subscription updates to the `SUSPENDED` state.",
          "minimum": 0,
          "maximum": 999,
          "readOnly": true
        },
        "last_failed_payment": {
          "description": "The details for the last failed payment of the subscription.",
          "readOnly": true,
          "$ref": "#/definitions/failed_payment_details.json"
        },
        "total_paid_amount": {
          "description": "The amount already paid by the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true
        }
      },
      "required": [
        "outstanding_balance",
        "failed_payments_count"
      ],
      "x-publicDocsSchemaName": "subscription_billing_info"
    },
    "cycle_execution.json": {
      "title": "Billing Cycle Execution Details",
      "description": "The regular and trial execution details for a billing cycle.",
      "type": "object",
      "properties": {
        "tenure_type": {
          "type": "string",
          "description": "The type of the billing cycle.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "REGULAR",
              "description": "A regular billing cycle."
            },
            {
              "value": "TRIAL",
              "description": "A trial billing cycle."
            }
          ],
          "readOnly": true
        },
        "sequence": {
          "type": "integer",
          "description": "The order in which to run this cycle among other billing cycles.",
          "minimum": 0,
          "maximum": 99
        },
        "cycles_completed": {
          "type": "integer",
          "description": "The number of billing cycles that have completed.",
          "minimum": 0,
          "maximum": 9999,
          "readOnly": true
        },
        "cycles_remaining": {
          "type": "integer",
          "description": "For a finite billing cycle, cycles_remaining is the number of remaining cycles. For an infinite billing cycle, cycles_remaining is set as 0.",
          "minimum": 0,
          "maximum": 9999,
          "readOnly": true
        },
        "current_pricing_scheme_version": {
          "type": "integer",
          "description": "The active pricing scheme version for the billing cycle.",
          "minimum": 1,
          "maximum": 99,
          "readOnly": true
        },
        "amount_payable_per_cycle": {
          "description": "The amount to be paid per cycle.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "total_cycles": {
          "type": "integer",
          "description": "The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).",
          "minimum": 0,
          "maximum": 999,
          "readOnly": true
        }
      },
      "required": [
        "tenure_type",
        "sequence",
        "cycles_completed"
      ],
      "x-publicDocsSchemaName": "cycle_execution"
    },
    "last_payment_details.json": {
      "title": "Last Payment Details",
      "description": "The details for the last payment of the subscription.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The last payment amount.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "time": {
          "description": "The date and time when the last payment was made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "required": [
        "amount",
        "time"
      ],
      "x-publicDocsSchemaName": "last_payment_details"
    },
    "failed_payment_details.json": {
      "title": "Failed Payment Details",
      "description": "The details for the failed payment of the subscription.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The failed payment amount.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "time": {
          "description": "The date and time when the failed payment was made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "reason_code": {
          "type": "string",
          "description": "The reason code for the payment failure.",
          "minLength": 1,
          "maxLength": 120,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "PAYMENT_DENIED",
              "description": "PayPal declined the payment due to one or more customer issues."
            },
            {
              "value": "INTERNAL_SERVER_ERROR",
              "description": "An internal server error has occurred."
            },
            {
              "value": "PAYEE_ACCOUNT_RESTRICTED",
              "description": "The payee account is not in good standing and cannot receive payments."
            },
            {
              "value": "PAYER_ACCOUNT_RESTRICTED",
              "description": "The payer account is not in good standing and cannot make payments."
            },
            {
              "value": "PAYER_CANNOT_PAY",
              "description": "Payer cannot pay for this transaction."
            },
            {
              "value": "SENDING_LIMIT_EXCEEDED",
              "description": "The transaction exceeds the payer's sending limit."
            },
            {
              "value": "TRANSACTION_RECEIVING_LIMIT_EXCEEDED",
              "description": "The transaction exceeds the receiver's receiving limit."
            },
            {
              "value": "CURRENCY_MISMATCH",
              "description": "The transaction is declined due to a currency mismatch."
            }
          ],
          "readOnly": true
        },
        "next_payment_retry_time": {
          "description": "The time when the retry attempt for the failed payment occurs, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "required": [
        "amount",
        "time"
      ],
      "x-publicDocsSchemaName": "failed_payment_details"
    },
    "merchant.CommonComponentsSpecification-v1-schema-currency_conversion_provider.json": {
      "type": "string",
      "description": "The list of currency conversion providers.",
      "title": "Currency Conversion Provider",
      "x-enum": [
        {
          "value": "PAYPAL",
          "description": "PayPal currency conversion."
        },
        {
          "value": "VENDOR",
          "description": "Vendor currency conversion."
        }
      ],
      "x-publicDocsSchemaName": "currency_conversion_provider",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-funding_instrument_response.json": {
      "type": "object",
      "title": "Funding Instrument Response",
      "description": "The customer's funding instrument. Returned as a funding option to external entities.",
      "properties": {
        "card": {
          "description": "The payment card response information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response.json"
        },
        "bank_account": {
          "description": "The bank account response information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-bank_account_response.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "detail": "Available for trusted partners like eBay to pass a bank account for the payment."
          }
        },
        "credit": {
          "description": "The PayPal Credit instrument information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-paypal_credit.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "funding_instrument_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-bank_account_response.json": {
      "type": "object",
      "title": "Bank Account Response",
      "description": "The details for a bank account that can be used to fund a payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the bank account.",
          "readOnly": true
        },
        "last_n_chars": {
          "type": "string",
          "description": "The last four digits of the bank account number.",
          "pattern": "[0-9]{4}",
          "readOnly": true
        },
        "bank_name": {
          "type": "string",
          "maxLength": 64,
          "description": "The name of the bank to which the account is linked."
        },
        "account_type": {
          "type": "string",
          "description": "The type of bank account.",
          "x-enum": [
            {
              "value": "SAVINGS",
              "description": "A savings account."
            },
            {
              "value": "CHECKING",
              "description": "A checking account."
            }
          ]
        },
        "country_code": {
          "description": "The [two-character IS0-3166-1 country code](/docs/integration/direct/rest/country-codes/) of the bank.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "backup_funding_instrument": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-backup_funding_instrument.json"
        }
      },
      "required": [
        "id",
        "last_n_chars",
        "bank_name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "bank_account_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-backup_funding_instrument.json": {
      "type": "object",
      "title": "Backup Funding Instrument",
      "description": "The backup funding instrument to use for payment when the primary instrument fails.",
      "properties": {
        "card": {
          "description": "The backup card response information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response.json"
        }
      },
      "required": [
        "card"
      ],
      "x-publicDocsSchemaName": "backup_funding_instrument"
    },
    "merchant.CommonComponentsSpecification-v1-schema-paypal_credit.json": {
      "type": "object",
      "title": "Credit Account Response",
      "description": "The Buyer credit option used to fund the payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the credit instrument.",
          "minLength": 4,
          "maxLength": 25,
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The credit sub-types.",
          "minLength": 1,
          "maxLength": 50,
          "readOnly": true,
          "x-enum": [
            {
              "value": "BILL_ME_LATER",
              "description": "Bill Me Later."
            },
            {
              "value": "PAYPAL_SMART_CONNECT",
              "description": "PayPal Smart Connect."
            },
            {
              "value": "EBAY_MASTERCARD",
              "description": "EBAY MasterCard."
            },
            {
              "value": "PAYPAL_EXTRAS_MASTERCARD",
              "description": "PayPal Extras MasterCard."
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "x-publicDocsSchemaName": "paypal_credit"
    },
    "subscription_request_post.json": {
      "title": "Create Subscription Request",
      "description": "The create subscription request details.",
      "type": "object",
      "properties": {
        "plan_id": {
          "type": "string",
          "description": "The ID of the plan.",
          "minLength": 3,
          "maxLength": 50
        },
        "start_time": {
          "description": "The date and time when the subscription started, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "default": "Current time",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product in the subscription.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32
        },
        "shipping_amount": {
          "description": "The shipping charges.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "subscriber": {
          "$ref": "#/definitions/subscriber_request.json"
        },
        "auto_renewal": {
          "type": "boolean",
          "description": "DEPRECATED. Indicates whether the subscription auto-renews after the billing cycles complete.",
          "default": false,
          "x-deprecated": {
            "see": "billing_cycle.json#/total_cycles",
            "since_version": "1.1"
          }
        },
        "application_context": {
          "$ref": "#/definitions/application_context.json",
          "x-publicDocsSchemaName": "application_context"
        }
      },
      "required": [
        "plan_id"
      ],
      "x-publicDocsSchemaName": "subscription_request"
    },
    "subscriber_request.json": {
      "title": "Subscriber Request Information",
      "description": "The subscriber request information .",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_860_merchant.CommonComponentsSpecification-v1-schema-payer.json"
        },
        {
          "properties": {
            "shipping_address": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json"
            },
            "payment_source": {
              "$ref": "#/definitions/payment_source.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "subscriber_request",
      "properties": {}
    },
    "payment_source.json": {
      "type": "object",
      "title": "Payment Source",
      "description": "The payment source definition. To be eligible to create subscription using debit or credit card, you will need to sign up here (https://www.paypal.com/bizsignup/entry/product/ppcp). Please note, its available only for non-3DS cards and for merchants in US and AU regions.",
      "properties": {
        "card": {
          "$ref": "#/definitions/customized_x_unsupported_1218_merchant.CommonComponentsSpecification-v1-schema-card.json"
        }
      },
      "x-publicDocsSchemaName": "payment_source"
    },
    "merchant.CommonComponentsSpecification-v1-schema-card.json": {
      "type": "object",
      "title": "Card",
      "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the card.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The card holder's name as it appears on the card.",
          "maxLength": 300
        },
        "number": {
          "type": "string",
          "description": "The primary account number (PAN) for the payment card.",
          "minLength": 13,
          "maxLength": 19
        },
        "expiry": {
          "description": "The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json"
        },
        "security_code": {
          "type": "string",
          "description": "The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID.",
          "pattern": "[0-9]{3,4}"
        },
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "card_type": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "billing_address": {
          "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_7242_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        },
        "authentication_results": {
          "type": "array",
          "description": "A list of authentication results.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-3ds_result.json"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        }
      },
      "required": [
        "number",
        "expiry"
      ],
      "x-publicDocsSchemaName": "card"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json": {
      "type": "string",
      "description": "The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
      "minLength": 7,
      "maxLength": 7,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-3ds_result.json": {
      "type": "object",
      "title": "The 3D Secure Authentication Result",
      "description": "Additional 3D Secure authentication data.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-authentication_result_type.json"
        },
        {
          "properties": {
            "eci_flag": {
              "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-eci_flag.json"
            },
            "ucaf_indicator": {
              "description": "Universal Cardholder Authentication Field (UCAF) Indicator value provided by the issuer.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-ucaf_indicator.json"
            },
            "card_brand": {
              "description": "Card brand that the transaction was processed for authentication.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-3ds_card_brand.json"
            },
            "cavv": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "description": "This is the cardholder authentication value. The CAVV is unique to the cardholder and to the transaction that was authenticated."
            },
            "xid": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "description": "Transaction identifier resulting from authentication processing."
            },
            "enrolled": {
              "description": "Status of Authentication eligibility.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-enrolled.json"
            },
            "pares_status": {
              "description": "Transactions status result identifier. The outcome of the issuer's authentication.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-pares_status.json"
            },
            "merchant_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "description": "The merchant name that was sent in the authentication request."
            },
            "three_ds_version": {
              "type": "string",
              "minLength": 1,
              "maxLength": 10,
              "description": "The 3DS version that was used to process the transaction."
            },
            "directory_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction."
            },
            "authentication_type": {
              "description": "Indicates the type of authentication that will be used to challenge the card holder.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-authentication_type.json"
            },
            "access_control_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the Access Control Server (ACS) to identify a single transaction."
            },
            "signature_verification_status": {
              "description": "Transaction Signature status identifier.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-signature_verification_status.json"
            },
            "paypal_acquiring_mid": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^[0-9A-Z]+$",
              "description": "The PayPal acquiring MID to be used for authorization."
            },
            "paypal_acquiring_bin": {
              "type": "string",
              "minLength": 1,
              "maxLength": 6,
              "pattern": "^[0-9]+$",
              "description": "The PayPal acquiring BIN to be used for authorization."
            },
            "cavv_algorithm": {
              "description": "Indicates the algorithm used to generate the CAVV value.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-cavv_algorithm.json"
            },
            "three_ds_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the 3DS Server to identify a single transaction."
            }
          }
        }
      ],
      "required": [
        "type"
      ],
      "x-publicDocsSchemaName": "3ds_result",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-authentication_result_type.json": {
      "type": "object",
      "title": "Authentication Result Type",
      "description": "Indicates the form of authentication used on the financial instrument.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of authentication used on the financial instrument.",
          "x-enum": [
            {
              "value": "THREE_DS_AUTHENTICATION",
              "description": "The card was authenticated using 3D Secure (3DS) authentication scheme."
            }
          ]
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-eci_flag.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.",
      "x-enum": [
        {
          "value": "MASTERCARD_NON_3D_SECURE_TRANSACTION",
          "description": "Mastercard non-3-D Secure transaction."
        },
        {
          "value": "MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION",
          "description": "Mastercard attempted authentication transaction."
        },
        {
          "value": "MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION",
          "description": "Mastercard fully authenticated transaction."
        },
        {
          "value": "FULLY_AUTHENTICATED_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB fully authenticated transaction."
        },
        {
          "value": "ATTEMPTED_AUTHENTICATION_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB attempted authentication transaction."
        },
        {
          "value": "NON_3D_SECURE_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB non-3-D Secure transaction."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-ucaf_indicator.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Universal Cardholder Authentication Field (UCAF) Indicator value provided by the issuer.",
      "x-enum": [
        {
          "value": "NON_SECURECODE_TRANSACTION",
          "description": "Non-SecureCode transaction, bypassed by the merchant."
        },
        {
          "value": "MERCHANT_ONLY_SECURECODE_TRANSACTION",
          "description": "Merchant-Only SecureCode transaction."
        },
        {
          "value": "FULLY_AUTHENTICATED_SECURECODE",
          "description": "Fully authenticated SecureCode."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-3ds_card_brand.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Card brand that the transaction was processed for authentication.",
      "x-enum": [
        {
          "value": "AMERICAN_EXPRESS",
          "description": "Card Brand Amex."
        },
        {
          "value": "DISCOVER",
          "description": "Card Brand DISCOVER."
        },
        {
          "value": "JCB",
          "description": "Card Brand JCB."
        },
        {
          "value": "MAESTRO",
          "description": "Card Brand MAESTRO."
        },
        {
          "value": "MASTERCARD",
          "description": "Card Brand MASTERCARD."
        },
        {
          "value": "SOLO",
          "description": "Card Brand SOLO."
        },
        {
          "value": "VISA",
          "description": "Card Brand VISA."
        },
        {
          "value": "ELECTRON",
          "description": "Card Brand ELECTRON."
        },
        {
          "value": "ELO",
          "description": "Card Brand ELO."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-enrolled.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Status of Authentication eligibility.",
      "x-enum": [
        {
          "value": "Y",
          "description": "Yes. The bank is participating in 3-D Secure protocol and will return the ACSUrl."
        },
        {
          "value": "N",
          "description": "No. The bank is not participating in 3-D Secure protocol."
        },
        {
          "value": "U",
          "description": "Unavailable. The DS or ACS is not available for authentication at the time of the request."
        },
        {
          "value": "B",
          "description": "Bypass. The merchant authentication rule is triggered to bypass authentication."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-pares_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Transactions status result identifier. The outcome of the issuer's authentication.",
      "x-enum": [
        {
          "value": "Y",
          "description": "Successful authentication."
        },
        {
          "value": "N",
          "description": "Failed authentication / account not verified / transaction denied."
        },
        {
          "value": "U",
          "description": "Unable to complete authentication."
        },
        {
          "value": "A",
          "description": "Successful attempts transaction."
        },
        {
          "value": "C",
          "description": "Challenge required for authentication."
        },
        {
          "value": "R",
          "description": "Authentication rejected (merchant must not submit for authorization)."
        },
        {
          "value": "D",
          "description": "Challenge required; decoupled authentication confirmed."
        },
        {
          "value": "I",
          "description": "Informational anly; 3DS requestor challenge preference acknowledged."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-authentication_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Indicates the type of authentication that was used to challenge the card holder.",
      "x-enum": [
        {
          "value": "STATIC",
          "description": "Indicates fixed password."
        },
        {
          "value": "DYNAMIC",
          "description": "Indicates one-time password. Could be single-step or multi-step."
        },
        {
          "value": "OUT_OF_BAND",
          "description": "Indicates biometric over the phone."
        },
        {
          "value": "DECOUPLED",
          "description": "Indicates decoupled authentication."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-signature_verification_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[A-Z]+$",
      "description": "Transaction signature status identifier.",
      "x-enum": [
        {
          "value": "YES",
          "description": "Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted."
        },
        {
          "value": "NO",
          "description": "Indicates that the PARes could not be validated."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-cavv_algorithm.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "description": "Indicates the algorithm used to generate the CAVV/AAV value.",
      "x-enum": [
        {
          "value": "CVV_WITH_ATN",
          "description": "Refers to the Visa CAVV generation specification that includes a unique identifier built into the value."
        },
        {
          "value": "MASTERCARD_SPA_ALGORITHM",
          "description": "Refers to Secure Payment Algorithm used to generate Mastercard's Accountholder Authentication Value (AAV)."
        }
      ],
      "properties": {}
    },
    "application_context.json": {
      "title": "Application Context",
      "description": "The application context, which customizes the payer experience during the subscription approval process with PayPal.",
      "type": "object",
      "properties": {
        "brand_name": {
          "type": "string",
          "description": "The label that overrides the business name in the PayPal account on the PayPal site.",
          "minLength": 1,
          "maxLength": 127
        },
        "locale": {
          "description": "The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json"
        },
        "shipping_preference": {
          "type": "string",
          "description": "The location from which the shipping address is derived.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "GET_FROM_FILE",
          "x-enum": [
            {
              "value": "GET_FROM_FILE",
              "description": "Get the customer-provided shipping address on the PayPal site.",
              "default": true
            },
            {
              "value": "NO_SHIPPING",
              "description": "Redacts the shipping address from the PayPal site. Recommended for digital goods."
            },
            {
              "value": "SET_PROVIDED_ADDRESS",
              "description": "Get the merchant-provided address. The customer cannot change this address on the PayPal site. If merchant does not pass an address, customer can choose the address on PayPal pages."
            }
          ]
        },
        "user_action": {
          "type": "string",
          "description": "Configures the label name to `Continue` or `Subscribe Now` for subscription consent experience.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "SUBSCRIBE_NOW",
          "x-enum": [
            {
              "value": "CONTINUE",
              "description": "After you redirect the customer to the PayPal subscription consent page, a <strong>Continue</strong> button appears. Use this option when you want to control the activation of the subscription and do not want PayPal to activate the subscription.",
              "default": true
            },
            {
              "value": "SUBSCRIBE_NOW",
              "description": "After you redirect the customer to the PayPal subscription consent page, a <strong>Subscribe Now</strong> button appears. Use this option when you want PayPal to activate the subscription."
            }
          ]
        },
        "payment_method": {
          "description": "The customer and merchant payment preferences. Currently only PAYPAL payment method is supported.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payment_method.json"
        },
        "return_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer approves the payment.",
          "minLength": 10,
          "maxLength": 4000
        },
        "cancel_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer cancels the payment.",
          "minLength": 10,
          "maxLength": 4000
        }
      },
      "required": [
        "return_url",
        "cancel_url"
      ],
      "x-publicDocsSchemaName": "application_context"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json": {
      "type": "string",
      "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/).",
      "format": "ppaas_common_language_v3",
      "maxLength": 10,
      "minLength": 2,
      "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payment_method.json": {
      "type": "object",
      "description": "The customer and merchant payment preferences.",
      "title": "Payment Method",
      "properties": {
        "payer_selected": {
          "type": "string",
          "description": "The customer-selected payment method on the merchant site.",
          "minLength": 1,
          "pattern": "^[0-9A-Z_]+$",
          "default": "PAYPAL",
          "x-enum": [
            {
              "value": "PAYPAL_CREDIT",
              "description": "PayPal Credit.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYPAL",
              "description": "PayPal.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ]
        },
        "payee_preferred": {
          "type": "string",
          "description": "The merchant-preferred payment sources.",
          "minLength": 1,
          "pattern": "^[0-9A-Z_]+$",
          "default": "UNRESTRICTED",
          "x-enum": [
            {
              "value": "UNRESTRICTED",
              "description": "Accepts any type of payment from the customer.",
              "default": true
            },
            {
              "value": "IMMEDIATE_PAYMENT_REQUIRED",
              "description": "Accepts only immediate payment from the customer. For example, credit card, PayPal balance, or instant ACH. Ensures that at the time of capture, the payment does not have the `pending` status."
            }
          ]
        },
        "category": {
          "type": "string",
          "description": "Provides context (e.g. frequency of payment (Single, Recurring) along with whether (Customer is Present, Not Present) for the payment being processed. For Card and PayPal Vaulted/Billing Agreement transactions, this helps specify the appropriate indicators to the networks (e.g. Mastercard, Visa) which ensures compliance as well as ensure a better auth-rate. For bank processing, indicates to clearing house whether the transaction is recurring or not depending on the option chosen.",
          "default": "CUSTOMER_PRESENT_SINGLE_PURCHASE",
          "minLength": 3,
          "maxLength": 255,
          "x-enum": [
            {
              "value": "CUSTOMER_PRESENT_SINGLE_PURCHASE",
              "description": "If the payments is an e-commerce payment initiated by the customer. Customer typically enters payment information (e.g. card number, approves payment within the PayPal Checkout flow) and such information that has not been previously stored on file."
            },
            {
              "value": "CUSTOMER_NOT_PRESENT_RECURRING",
              "description": "Subsequent recurring payments (e.g. subscriptions with a fixed amount on a predefined schedule when customer is not present."
            },
            {
              "value": "CUSTOMER_PRESENT_RECURRING_FIRST",
              "description": "The first payment initiated by the customer which is expected to be followed by a series of subsequent recurring payments transactions (e.g. subscriptions with a fixed amount on a predefined schedule when customer is not present. This is typically used for scenarios where customer stores credentials and makes a purchase on a given date and also set’s up a subscription."
            },
            {
              "value": "CUSTOMER_PRESENT_UNSCHEDULED",
              "description": "Also known as (card-on-file) transactions. Payment details are stored to enable checkout with one-click, or simply to streamline the checkout process. For card transaction customers typically do not enter a CVC number as part of the Checkout process."
            },
            {
              "value": "CUSTOMER_NOT_PRESENT_UNSCHEDULED",
              "description": "Unscheduled payments that are not recurring on a predefined schedule (e.g. balance top-up)."
            },
            {
              "value": "MAIL_ORDER_TELEPHONE_ORDER",
              "description": "Payments that are initiated by the customer via the merchant by mail or telephone."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "payment_method"
    },
    "subscription_collection.json": {
      "title": "Subscription Collection",
      "description": "The list of subscriptions.",
      "type": "object",
      "properties": {
        "subscriptions": {
          "type": "array",
          "description": "An array of subscriptions.",
          "minItems": 0,
          "maxItems": 32767,
          "items": {
            "$ref": "#/definitions/subscription.json",
            "x-publicDocsSchemaName": "subscription"
          }
        },
        "total_items": {
          "type": "integer",
          "description": "The total number of items.",
          "minimum": 0,
          "maximum": 500000000
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages.",
          "minimum": 0,
          "maximum": 100000000
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "first",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "next",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "prev",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "last",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "subscription_collection"
    },
    "subscription_revise_response.json": {
      "title": "Update Product Quantity in Subscription Response",
      "description": "The response to a request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_5875_subscription_revise_request.json"
        },
        {
          "properties": {
            "links": {
              "type": "array",
              "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "readOnly": true,
              "items": {
                "readOnly": true,
                "x-publicDocsSchemaName": "link_description",
                "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "subscription_revise_request",
      "properties": {}
    },
    "subscription_revise_request.json": {
      "title": "Subscription Modify Plan Request",
      "description": "The request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "type": "object",
      "properties": {
        "plan_id": {
          "type": "string",
          "description": "The unique PayPal-generated ID for the plan.",
          "minLength": 3,
          "maxLength": 50
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product or service in the subscription.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32
        },
        "effective_time": {
          "description": "The date and time when this change is effective, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Defaults to the current time.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "shipping_amount": {
          "description": "The shipping charges.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "shipping_address": {
          "description": "The shipping address of the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json"
        },
        "application_context": {
          "$ref": "#/definitions/customized_x_unsupported_9894_application_context.json"
        }
      },
      "x-publicDocsSchemaName": "subscription_revise_request"
    },
    "subscription_save_request.json": {
      "title": "Save Subscription",
      "description": "The save subscription request details.",
      "type": "object",
      "properties": {
        "token_id": {
          "type": "string",
          "description": "The identifier of session for which subscription needs to be saved.",
          "minLength": 3,
          "maxLength": 50
        }
      },
      "required": [
        "token_id"
      ],
      "x-publicDocsSchemaName": "subscription_save_request"
    },
    "subscription_suspend_request.json": {
      "title": "Suspend Subscription",
      "description": "The suspend subscription request details.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for suspenson of the subscription.",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "required": [
        "reason"
      ],
      "x-publicDocsSchemaName": "subscription_suspend_request"
    },
    "subscription_cancel_request.json": {
      "title": "Cancel Subscription Request",
      "description": "The cancel subscription request details.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation of a subscription.",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "required": [
        "reason"
      ],
      "x-publicDocsSchemaName": "subscription_cancel_request"
    },
    "subscription_activate_request.json": {
      "title": "Activate Subscription Request",
      "description": "The activate subscription request details.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for activation of a subscription. Required to reactivate the subscription.",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "x-publicDocsSchemaName": "subscription_activate_request"
    },
    "transaction.json": {
      "title": "Transaction Details",
      "description": "The transaction details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_3053_merchant.CommonComponentsSpecification-v1-schema-capture_status.json",
          "x-publicDocsSchemaName": "capture_status"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "The PayPal-generated transaction ID.",
              "minLength": 3,
              "maxLength": 50,
              "readOnly": true
            },
            "amount_with_breakdown": {
              "$ref": "#/definitions/amount_with_breakdown.json"
            },
            "payer_name": {
              "description": "The name of the customer.",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
            },
            "payer_email": {
              "description": "The email ID of the customer.",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
            },
            "time": {
              "description": "The date and time when the transaction was processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
            }
          }
        }
      ],
      "required": [
        "id",
        "amount_with_breakdown",
        "time"
      ],
      "x-publicDocsSchemaName": "transaction",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-capture_status.json": {
      "type": "object",
      "title": "Capture Status",
      "description": "The status of a captured payment.",
      "properties": {
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>."
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            }
          ],
          "readOnly": true
        },
        "status_details": {
          "description": "The details of the captured payment status.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-capture_status_details.json"
        }
      },
      "x-publicDocsSchemaName": "capture_status"
    },
    "merchant.CommonComponentsSpecification-v1-schema-capture_status_details.json": {
      "title": "Capture Status Details",
      "description": "The details of the captured payment status.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the captured payment status is `PENDING` or `DENIED`.",
          "type": "string",
          "x-enum": [
            {
              "value": "BUYER_COMPLAINT",
              "description": "The payer initiated a dispute for this captured payment with PayPal."
            },
            {
              "value": "CHARGEBACK",
              "description": "The captured funds were reversed in response to the payer disputing this captured payment with the issuer of the financial instrument used to pay for this captured payment."
            },
            {
              "value": "ECHECK",
              "description": "The payer paid by an eCheck that has not yet cleared."
            },
            {
              "value": "INTERNATIONAL_WITHDRAWAL",
              "description": "Visit your online account. In your **Account Overview**, accept and deny this payment."
            },
            {
              "value": "OTHER",
              "description": "No additional specific reason can be provided. For more information about this captured payment, visit your account online or contact PayPal."
            },
            {
              "value": "PENDING_REVIEW",
              "description": "The captured payment is pending manual review."
            },
            {
              "value": "RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION",
              "description": "The payee has not yet set up appropriate receiving preferences for their account. For more information about how to accept or deny this payment, visit your account online. This reason is typically offered in scenarios such as when the currency of the captured payment is different from the primary holding currency of the payee."
            },
            {
              "value": "REFUNDED",
              "description": "The captured funds were refunded."
            },
            {
              "value": "TRANSACTION_APPROVED_AWAITING_FUNDING",
              "description": "The payer must send the funds for this captured payment. This code generally appears for manual EFTs."
            },
            {
              "value": "UNILATERAL",
              "description": "The payee does not have a PayPal account."
            },
            {
              "value": "VERIFICATION_REQUIRED",
              "description": "The payee's PayPal account is not verified."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "capture_status_details"
    },
    "amount_with_breakdown.json": {
      "type": "object",
      "title": "Amount with Breakdown",
      "description": "The breakdown details for the amount. Includes the gross, tax, fee, and shipping amounts.",
      "properties": {
        "gross_amount": {
          "description": "The amount for this transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "fee_amount": {
          "description": "The fee details for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "shipping_amount": {
          "description": "The shipping amount for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "tax_amount": {
          "description": "The tax amount for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "net_amount": {
          "description": "The net amount that the payee receives for this transaction in their PayPal account. The net amount is computed as <code>gross_amount</code> minus the <code>paypal_fee</code>.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        }
      },
      "required": [
        "gross_amount",
        "net_amount"
      ],
      "x-publicDocsSchemaName": "amount_with_breakdown"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "ppaas_common_email_address_v2",
      "minLength": 3,
      "maxLength": 254,
      "pattern": "^.+@[^\"\\-].+$",
      "properties": {}
    },
    "subscription_capture_request.json": {
      "title": "Charge Amount from Subscriber",
      "description": "The charge amount from the subscriber.",
      "type": "object",
      "properties": {
        "note": {
          "type": "string",
          "description": "The reason or note for the subscription charge.",
          "minLength": 1,
          "maxLength": 128
        },
        "capture_type": {
          "type": "string",
          "description": "The type of capture.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "OUTSTANDING_BALANCE",
              "description": "The outstanding balance that the subscriber must clear."
            }
          ]
        },
        "amount": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount of the outstanding balance. This value cannot be greater than the current outstanding balance amount."
        }
      },
      "required": [
        "note",
        "capture_type",
        "amount"
      ],
      "x-publicDocsSchemaName": "subscription_capture_request"
    },
    "transactions_list.json": {
      "title": "List Transactions",
      "description": "The list transactions for a subscription request details.",
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "description": "An array of transactions.",
          "minItems": 0,
          "maxItems": 32767,
          "items": {
            "$ref": "#/definitions/transaction.json",
            "x-publicDocsSchemaName": "transaction"
          }
        },
        "total_items": {
          "type": "integer",
          "description": "The total number of items.",
          "minimum": 0,
          "maximum": 500000000
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages.",
          "minimum": 0,
          "maximum": 100000000
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api.paypal.com/v1/billing/subscriptions/{subscription-id}/transactions?start_time={start_time}&end_time={end_time}",
          "rel": "self",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "transactions_list"
    },
    "customized_x_unsupported_6272_merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "customized_x_unsupported_8146_merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "customized_x_unsupported_1379_merchant.CommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "properties": {
        "name": {
          "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json",
          "x-unsupportedFields": [
            "prefix",
            "middle_name",
            "suffix",
            "alternate_full_name",
            "full_name"
          ]
        },
        "email_address": {
          "description": "The email address of the payer.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "payer_id": {
          "description": "The PayPal-assigned ID for the payer.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        }
      },
      "x-publicDocsSchemaName": "payer"
    },
    "customized_x_unsupported_8227_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        }
      }
    },
    "customized_x_unsupported_6402_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_7167_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "customized_x_unsupported_3731_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "customized_x_unsupported_7826_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_7001_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_860_merchant.CommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "properties": {
        "name": {
          "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
          "$ref": "#/definitions/customized_x_unsupported_8227_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "email_address": {
          "description": "The email address of the payer.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "payer_id": {
          "description": "The PayPal-assigned ID for the payer.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        }
      },
      "x-publicDocsSchemaName": "payer"
    },
    "customized_x_unsupported_1218_merchant.CommonComponentsSpecification-v1-schema-card.json": {
      "type": "object",
      "title": "Card",
      "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The card holder's name as it appears on the card.",
          "maxLength": 300
        },
        "number": {
          "type": "string",
          "description": "The primary account number (PAN) for the payment card.",
          "minLength": 13,
          "maxLength": 19
        },
        "expiry": {
          "description": "The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json"
        },
        "security_code": {
          "type": "string",
          "description": "The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID.",
          "pattern": "[0-9]{3,4}"
        },
        "billing_address": {
          "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "x-unsupportedFields": [
            "address_line_3",
            "admin_area_3",
            "admin_area_4",
            "address_details"
          ],
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "required": [
        "number",
        "expiry"
      ],
      "x-publicDocsSchemaName": "card"
    },
    "customized_x_unsupported_7242_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_5875_subscription_revise_request.json": {
      "title": "Subscription Modify Plan Request",
      "description": "The request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "type": "object",
      "properties": {
        "plan_id": {
          "type": "string",
          "description": "The unique PayPal-generated ID for the plan.",
          "minLength": 3,
          "maxLength": 50
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product or service in the subscription.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32
        },
        "effective_time": {
          "description": "The date and time when this change is effective, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Defaults to the current time.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "shipping_amount": {
          "description": "The shipping charges.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "shipping_address": {
          "description": "The shipping address of the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json"
        }
      },
      "x-publicDocsSchemaName": "subscription_revise_request"
    },
    "customized_x_unsupported_9894_application_context.json": {
      "title": "Application Context",
      "description": "The application context, which customizes the payer experience during the subscription approval process with PayPal.",
      "type": "object",
      "properties": {
        "brand_name": {
          "type": "string",
          "description": "The label that overrides the business name in the PayPal account on the PayPal site.",
          "minLength": 1,
          "maxLength": 127
        },
        "locale": {
          "description": "The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json"
        },
        "shipping_preference": {
          "type": "string",
          "description": "The location from which the shipping address is derived.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "GET_FROM_FILE",
          "x-enum": [
            {
              "value": "GET_FROM_FILE",
              "description": "Get the customer-provided shipping address on the PayPal site.",
              "default": true
            },
            {
              "value": "NO_SHIPPING",
              "description": "Redacts the shipping address from the PayPal site. Recommended for digital goods."
            },
            {
              "value": "SET_PROVIDED_ADDRESS",
              "description": "Get the merchant-provided address. The customer cannot change this address on the PayPal site. If merchant does not pass an address, customer can choose the address on PayPal pages."
            }
          ]
        },
        "payment_method": {
          "description": "The customer and merchant payment preferences. Currently only PAYPAL payment method is supported.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payment_method.json"
        },
        "return_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer approves the payment.",
          "minLength": 10,
          "maxLength": 4000
        },
        "cancel_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer cancels the payment.",
          "minLength": 10,
          "maxLength": 4000
        }
      },
      "required": [
        "return_url",
        "cancel_url"
      ],
      "x-publicDocsSchemaName": "application_context"
    },
    "customized_x_unsupported_3053_merchant.CommonComponentsSpecification-v1-schema-capture_status.json": {
      "type": "object",
      "title": "Capture Status",
      "description": "The status of a captured payment.",
      "properties": {
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>."
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            }
          ],
          "readOnly": true
        }
      },
      "x-publicDocsSchemaName": "capture_status"
    }
  }
}