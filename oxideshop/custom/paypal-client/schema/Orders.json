{
  "swagger": "2.0",
  "info": {
    "title": "Orders",
    "x-serviceName": "checkoutsellerplatserv",
    "x-publicDocsPath": "orders",
    "description": "An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.",
    "version": "2.4"
  },
  "host": "api.paypal.com",
  "basePath": "/v2/checkout",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flow": "application",
      "scopes": {
        "https://uri.paypal.com/services/payments/payment": "Manage payments and checkout workflow.",
        "https://uri.paypal.com/services/payments/payment/reference-transaction": "Permission to initiate reference transaction"
      },
      "tokenUrl": "https://api.paypal.com/v1/oauth2/token"
    }
  },
  "paths": {
    "/orders": {
      "post": {
        "summary": "Create order",
        "description": "Creates an order. Supports orders with only one purchase unit.",
        "operationId": "orders.create",
        "responses": {
          "200": {
            "description": "A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows order details.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that includes by default a minimal response with the ID, status, and HATEOAS links. If you require the complete order resource representation, you must pass the <a href=\"/docs/api/orders/v2/#orders-create-header-parameters\"><code>Prefer: return=representation</code> request header</a>. This header value is not the default.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/order_request.json",
              "example": {
                "intent": "CAPTURE",
                "purchase_units": [
                  {
                    "amount": {
                      "currency_code": "USD",
                      "value": "100.00"
                    }
                  }
                ]
              }
            },
            "required": true
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 3 hours.",
            "required": false
          },
          {
            "name": "PayPal-Partner-Attribution-Id",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in this header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id:secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Show order details",
        "description": "Shows details for an order, by ID.",
        "operationId": "orders.get",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows order details.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order for which to show details.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in this header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id:secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 600,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      },
      "patch": {
        "summary": "Update order",
        "description": "Updates an order with the `CREATED` or `APPROVED` status.<br/>You cannot update an order with the `COMPLETED` status.<br/>To make an update, you must provide a `reference_id`.<br/>If you omit a `reference_id` for an order with one purchase unit, PayPal defaults to a `reference_id` of `default`, which enables you to use a path:<pre>\"path\": \"/purchase_units/@reference_id=='default'/{attribute-or-object}\"</pre>.<br/>You can patch these attributes and objects to complete these operations:<ul><li><code>intent</code> &mdash; replace.</li><li><code>purchase_units</code> &mdash; replace, add.</li><li><code>purchase_units[].custom_id</code> &mdash; replace, add, remove.</li><li><code>purchase_units[].description</code> &mdash; replace, add, remove.</li><li><code>purchase_units[].payee.email</code> &mdash; replace.</li><li><code>purchase_units[].shipping.name</code> &mdash; replace, add.</li><li><code>purchase_units[].shipping.address</code> &mdash; replace, add.</li><li><code>purchase_units[].soft_descriptor</code> &mdash; replace, remove.</li><li><code>purchase_units[].amount</code> &mdash; replace.</li><li><code>purchase_units[].invoice_id</code> &mdash; replace, add, remove.</li><li><code>purchase_units[].payment_instruction</code> &mdash; replace.</li><li><code>purchase_units[].payment_instruction.disbursement_mode</code> &mdash; replace.<blockquote><strong>Note:</strong> By default, <code>disbursement_mode</code> is <code>INSTANT</code>.</blockquote></li><li><code>purchase_units[].payment_instruction.platform_fees</code> &mdash; replace, add, remove.</li></ul>",
        "operationId": "orders.patch",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with an empty object in the JSON response body."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "replace",
                  "path": "/purchase_units/@reference_id=='PUHF'/shipping/address",
                  "value": {
                    "address_line_1": "123 Townsend St",
                    "address_line_2": "Floor 6",
                    "admin_area_2": "San Francisco",
                    "admin_area_1": "CA",
                    "postal_code": "94107",
                    "country_code": "US"
                  }
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in this header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id:secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/orders/{id}/validate-payment-method": {
      "post": {
        "summary": "Validate payment method",
        "description": "Validates a payment method and checks it for contingencies.",
        "operationId": "orders.validate",
        "responses": {
          "200": {
            "description": "A successful request indicates that no contingencies were detected. A successful request returns the HTTP `200 OK` status code with a JSON response body that shows order details.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "One or more contingencies were detected for the payment method.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order for which to validate the payment method.",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_validate_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/order_validate_request.json",
              "example": {
                "payment_source": {
                  "card": {
                    "number": "4111111111111111",
                    "expiry": "2020-02"
                  }
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in this header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id:secret>`.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "x-serviceName": "checkoutbuyerplatserv"
      }
    },
    "/orders/{id}/authorize": {
      "post": {
        "summary": "Authorize payment for order",
        "description": "Authorizes payment for an order. To successfully authorize payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.",
        "operationId": "orders.authorize",
        "responses": {
          "200": {
            "description": "A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows authorized payment details.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "201": {
            "description": "A successful response to a non-idempotent request returns the HTTP `201 Created` status code with a JSON response body that shows authorized payment details. If a duplicate response is retried, returns the HTTP `200 OK` status code. By default, the response is minimal. If you need the complete resource representation, you must pass the <a href=\"/docs/api/orders/v2/#orders-authorize-header-parameters\"><code>Prefer: return=representation</code> request header</a>.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "The authorized payment failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 45 days.",
            "required": false
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order for which to authorize.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorize_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/order_authorize_request.json"
            },
            "required": false,
            "x-visibility": {
              "extent": "EXTERNAL"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in this header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id:secret>`.",
            "required": true
          },
          {
            "name": "PayPal-Auth-Assertion",
            "in": "header",
            "type": "string",
            "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href=\"/docs/api/reference/api-requests/#paypal-auth-assertion\">PayPal-Auth-Assertion</a>.",
            "required": false
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/orders/{id}/capture": {
      "post": {
        "summary": "Capture payment for order",
        "description": "Captures payment for an order. To successfully capture payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.",
        "operationId": "orders.capture",
        "responses": {
          "200": {
            "description": "A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows captured payment details.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "201": {
            "description": "A successful response to a non-idempotent request returns the HTTP `201 Created` status code with a JSON response body that shows captured payment details. If a duplicate response is retried, returns the HTTP `200 OK` status code. By default, the response is minimal. If you need the complete resource representation, pass the <a href=\"/docs/api/orders/v2/#orders-authorize-header-parameters\"><code>Prefer: return=representation</code> request header</a>.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "The authorized payment failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 45 days.",
            "required": false
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order for which to capture a payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_capture_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/order_capture_request.json"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in this header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id:secret>`.",
            "required": true
          },
          {
            "name": "PayPal-Auth-Assertion",
            "in": "header",
            "type": "string",
            "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href=\"/docs/api/reference/api-requests/#paypal-auth-assertion\">PayPal-Auth-Assertion</a>.",
            "required": false
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/orders/{id}/save": {
      "post": {
        "summary": "Save order",
        "description": "Saves an order. Supports multiple authorize and capture.",
        "operationId": "orders.save",
        "responses": {
          "200": {
            "description": "A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows order details.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "201": {
            "description": "A successful response to a non-idempotent request returns the HTTP `201 Created` status code with a JSON response body that shows order details. If a duplicate response is retried, returns the HTTP `200 OK` status code. By default, the response is minimal. If you need the complete resource representation, pass the <a href=\"/docs/api/orders/v2/#orders-authorize-header-parameters\"><code>Prefer: return=representation</code> request header</a>.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "The save failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 45 days.",
            "required": false
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order to save.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/orders/{id}/void": {
      "post": {
        "summary": "Void order",
        "description": "Voids an order, by ID.",
        "operationId": "orders.void",
        "responses": {
          "200": {
            "description": "A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows order details. The header `return` value is `representation`.",
            "schema": {
              "$ref": "#/definitions/order.json"
            }
          },
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with an empty object in the JSON response body. The header `return` value is `minimal`. By default, the response is minimal."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "The void failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 45 days.",
            "required": false
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal"
          },
          {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order which to void.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/payment-context": {
      "get": {
        "summary": "Get Payment context for an order",
        "description": "Get the payment context data required for processing payments for an order.",
        "operationId": "payment-context.get",
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The order id for which payment context data is requested.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code with a JSON response body that shows payment data for an order.",
            "schema": {
              "$ref": "#/definitions/model-payment_context_data.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 800,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        }
      }
    },
    "/orders/{id}/update-payment-details": {
      "post": {
        "summary": "Update payment details for the order",
        "description": "Update the details of payment(s) processed for an order.",
        "operationId": "orders.update-payment-details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order for which to update payment details.",
            "required": true,
            "type": "string"
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys forever.",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where `format` is `json`.",
            "required": true
          },
          {
            "name": "payment-details",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/model-payment_details_request.json",
              "example": {
                "payment_source": {
                  "card": {
                    "id": "CC-8FC5LHXVNTXEA",
                    "number": "4111111111111111",
                    "expiry": "2020-02",
                    "name": "John Doe",
                    "billing_address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "17.3.160",
                      "admin_area_1": "CA",
                      "admin_area_2": "San Jose",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  }
                },
                "purchase_units": [
                  {
                    "reference_id": "REFID-000-1001",
                    "payments": {
                      "captures": [
                        {
                          "id": "23T08591T19412437",
                          "status": "PENDING",
                          "status_details": {
                            "reason": "PENDING_REVIEW"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with an empty object in the JSON response body."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "x-slo": {
          "response_time_95th_percentile": 800,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        }
      }
    }
  },
  "tags": [
    {
      "name": "orders",
      "description": "Use the `/orders` resource to create, update, retrieve, authorize, and capture orders."
    }
  ],
  "externalDocs": {
    "url": "../doc/USERGUIDE.md"
  },
  "definitions": {
    "order.json": {
      "type": "object",
      "title": "Order",
      "description": "The order details.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-activity_timestamps.json",
          "x-publicDocsSchemaName": "activity_timestamps"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the order.",
              "readOnly": true
            },
            "payment_source": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_source_response.json"
            },
            "intent": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-checkout_payment_intent.json"
            },
            "payer": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payer.json"
            },
            "expiration_time": {
              "description": "The date and time when the order expires, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "readOnly": true,
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            "purchase_units": {
              "type": "array",
              "description": "An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.",
              "minItems": 1,
              "maxItems": 10,
              "items": {
                "x-publicDocsSchemaName": "purchase_unit",
                "$ref": "#/definitions/purchase_unit.json",
                "description": "A purchase unit. Establishes a contract between a customer and merchant."
              }
            },
            "status": {
              "$ref": "#/definitions/order_status.json",
              "readOnly": true
            },
            "links": {
              "type": "array",
              "description": "An array of request-related HATEOAS links. To complete payer approval, use the `approve` link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 72 hours for the payer to approve the order and either authorize or capture the order. If you are not using PayPal's Payment SDK (JS) (e.g. https://developer.paypal.com/docs/checkout/integrate/#4-set-up-the-transaction) to initiate the PayPal Checkout Experience (in context) ensure that you include application_context.return_url is specified or you will get \"We're sorry, Things don't appear to be working at the moment\" after the payer approves the payment.",
              "readOnly": true,
              "items": {
                "x-publicDocsSchemaName": "link_description",
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
                "description": "A request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links). To complete payer approval, use the `approve` link with the `GET` method."
              }
            },
            "credit_financing_offer": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-credit_financing_offer.json",
              "description": "The details of the payer-selected PayPal credit financing offer.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          }
        }
      ],
      "x-links": [
        {
          "href": "https://api.paypal.com/v2/checkout/orders/{id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api.paypal.com/v2/checkout/orders/{id}/refund",
          "rel": "refund",
          "method": "POST"
        },
        {
          "href": "https://www.paypal.com/checkoutnow?token={id}",
          "rel": "approve",
          "method": "POST"
        },
        {
          "href": "https://www.paypal.com/webapps/helios?action=resolve&flow=3ds&cart_id={id}",
          "rel": "3ds-contingency-resolution",
          "method": "GET"
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-activity_timestamps.json": {
      "type": "object",
      "description": "The date and time stamps that are common to authorized payment, captured payment, and refund transactions.",
      "title": "Transaction Date and Time Stamps",
      "properties": {
        "create_time": {
          "description": "The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "update_time": {
          "description": "The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "x-publicDocsSchemaName": "activity_timestamps"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json": {
      "type": "string",
      "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
      "format": "ppaas_date_time_v3",
      "minLength": 20,
      "maxLength": 64,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payment_source_response.json": {
      "type": "object",
      "title": "Payment Source",
      "description": "The payment source used to fund the payment",
      "properties": {
        "card": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_response.json"
        },
        "paypal": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet_response.json"
        },
        "wallet": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-wallets_response.json"
        },
        "bank": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bank_response.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "alipay": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-alipay.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "bancontact": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bancontact.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "blik": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-blik.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "eps": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-eps.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "giropay": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-giropay.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "ideal": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-ideal.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "multibanco": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-multibanco.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "mybank": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-mybank.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "payu": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payu.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "p24": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-p24.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "poli": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-poli.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "sofort": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-sofort.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "trustly": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-trustly.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "trustpay": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-trustpay.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "verkkopankki": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-verkkopankki.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "wechatpay": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-wechatpay.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        }
      },
      "x-publicDocsSchemaName": "payment_source_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-card_response.json": {
      "type": "object",
      "title": "Card Response",
      "description": "The payment card to use to fund a payment. Card can be a credit or debit card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the card.",
          "readOnly": true,
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be deprecated"
          }
        },
        "last_n_chars": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "minLength": 2,
          "pattern": "[0-9]{2,}",
          "readOnly": true,
          "x-deprecated": {
            "see": "last_digits"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be deprecated"
          }
        },
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "brand": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "type": {
          "type": "string",
          "description": "The payment card type.",
          "readOnly": true,
          "x-enum": [
            {
              "value": "CREDIT",
              "description": "A credit card."
            },
            {
              "value": "DEBIT",
              "description": "A debit card."
            },
            {
              "value": "PREPAID",
              "description": "A Prepaid card."
            },
            {
              "value": "UNKNOWN",
              "description": "Card type cannot be determined."
            }
          ]
        },
        "issuer": {
          "type": "string",
          "description": "The issuer of the card instrument.",
          "readOnly": true,
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be depreciated"
          },
          "x-enum": [
            {
              "value": "PAYPAL",
              "description": "A PayPal credit card."
            }
          ]
        },
        "bin": {
          "type": "string",
          "description": "An acronym for Bank Identification Number (BIN), also known as IIN (Issuer Identification Number). It Is a standardized global numbering scheme (6 to 8 digits) used to identify a bank / institution that issued the card.",
          "pattern": "^[0-9]{6,8}$",
          "maxLength": 8,
          "minLength": 6,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "authentication_result": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authentication_response.json"
        },
        "attributes": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_attributes_response.json"
        }
      },
      "x-publicDocsSchemaName": "card_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-card_brand.json": {
      "type": "string",
      "title": "Card Brand",
      "description": "The card network or brand. Applies to credit, debit, gift, and payment cards.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "VISA",
          "description": "Visa card."
        },
        {
          "value": "MASTERCARD",
          "description": "Mastecard card."
        },
        {
          "value": "DISCOVER",
          "description": "Discover card."
        },
        {
          "value": "AMEX",
          "description": "American Express card."
        },
        {
          "value": "SOLO",
          "description": "Solo debit card."
        },
        {
          "value": "JCB",
          "description": "Japan Credit Bureau card."
        },
        {
          "value": "STAR",
          "description": "Military Star card."
        },
        {
          "value": "DELTA",
          "description": "Delta Airlines card."
        },
        {
          "value": "SWITCH",
          "description": "Switch credit card."
        },
        {
          "value": "MAESTRO",
          "description": "Maestro credit card."
        },
        {
          "value": "CB_NATIONALE",
          "description": "Carte Bancaire (CB) credit card."
        },
        {
          "value": "CONFIGOGA",
          "description": "Configoga credit card."
        },
        {
          "value": "CONFIDIS",
          "description": "Confidis credit card."
        },
        {
          "value": "ELECTRON",
          "description": "Visa Electron credit card."
        },
        {
          "value": "CETELEM",
          "description": "Cetelem credit card."
        },
        {
          "value": "CHINA_UNION_PAY",
          "description": "China union pay credit card."
        }
      ],
      "x-publicDocsSchemaName": "card_brand",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authentication_response.json": {
      "type": "object",
      "title": "Authentication Response",
      "description": "Results of Authentication such as 3D Secure.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "liability_shift": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-liability_shift.json"
        },
        "three_d_secure": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-three_d_secure_authentication_response.json"
        }
      },
      "x-publicDocsSchemaName": "authentication_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-liability_shift.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Liability shift indicator. The outcome of the issuer's authentication.",
      "x-enum": [
        {
          "value": "YES",
          "description": "Liability has shifted to the card issuer. Available only after order is authorized or captured."
        },
        {
          "value": "NO",
          "description": "Liability is with the merchant."
        },
        {
          "value": "POSSIBLE",
          "description": "Liability may shift to the card issuer. Available only before order is authorized or captured."
        },
        {
          "value": "UNKNOWN",
          "description": "The authentication system is not available."
        }
      ],
      "x-publicDocsSchemaName": "liability_shift",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-three_d_secure_authentication_response.json": {
      "type": "object",
      "title": "The 3D Secure Authentication Response",
      "description": "Results of 3D Secure Authentication.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "authentication_status": {
          "description": "The outcome of the issuer's authentication.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-pares_status.json"
        },
        "enrollment_status": {
          "description": "Status of authentication eligibility.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-enrolled.json"
        }
      },
      "x-publicDocsSchemaName": "three_d_secure_authentication_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-pares_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Transactions status result identifier. The outcome of the issuer's authentication.",
      "x-enum": [
        {
          "value": "Y",
          "description": "Successful authentication."
        },
        {
          "value": "N",
          "description": "Failed authentication / account not verified / transaction denied."
        },
        {
          "value": "U",
          "description": "Unable to complete authentication."
        },
        {
          "value": "A",
          "description": "Successful attempts transaction."
        },
        {
          "value": "C",
          "description": "Challenge required for authentication."
        },
        {
          "value": "R",
          "description": "Authentication rejected (merchant must not submit for authorization)."
        },
        {
          "value": "D",
          "description": "Challenge required; decoupled authentication confirmed."
        },
        {
          "value": "I",
          "description": "Informational only; 3DS requestor challenge preference acknowledged."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-enrolled.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Status of Authentication eligibility.",
      "x-enum": [
        {
          "value": "Y",
          "description": "Yes. The bank is participating in 3-D Secure protocol and will return the ACSUrl."
        },
        {
          "value": "N",
          "description": "No. The bank is not participating in 3-D Secure protocol."
        },
        {
          "value": "U",
          "description": "Unavailable. The DS or ACS is not available for authentication at the time of the request."
        },
        {
          "value": "B",
          "description": "Bypass. The merchant authentication rule is triggered to bypass authentication."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-card_attributes_response.json": {
      "type": "object",
      "title": "Card Attributes Response",
      "description": "Additional attributes associated with the use of this card.",
      "properties": {
        "vault": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-vault_response.json"
        }
      },
      "x-publicDocsSchemaName": "card_attributes_response",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-vault_response.json": {
      "type": "object",
      "title": "Saved Payment Source Response",
      "description": "The details about a saved payment source.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the saved payment source.",
          "minLength": 1,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "description": "The vault status.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The payment source has been saved in your customer's vault."
            },
            {
              "value": "APPROVED",
              "description": "Customer has approved the action of saving the specified payment_source into their vault. Use v2/vault/approval-tokens/id/confirm-payment-token to save the payment_source in the vault."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "vault_response",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet_response.json": {
      "type": "object",
      "title": "Paypal Wallet Response",
      "description": "The Paypal Wallet response.",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet_attributes_response.json"
        }
      },
      "x-publicDocsSchemaName": "paypal_wallet_response",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet_attributes_response.json": {
      "type": "object",
      "title": "Paypal Wallet Attributes Response",
      "description": "Additional attributes associated with the use of a PayPal Wallet.",
      "properties": {
        "vault": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-vault_response.json"
        }
      },
      "x-publicDocsSchemaName": "paypal_wallet_attributes_response",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-wallets_response.json": {
      "type": "object",
      "title": "Wallets Response",
      "description": "The customer's wallet used to fund the transaction.",
      "properties": {
        "apple_pay": {
          "description": "Apple Pay Wallet response information.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-apple_pay_wallet_response.json"
        }
      },
      "x-publicDocsSchemaName": "wallets_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-apple_pay_wallet_response.json": {
      "type": "object",
      "title": "Apple Pay Wallet Response",
      "description": "The Apple Pay Wallet used to fund a payment.",
      "properties": {
        "card": {
          "description": "The payment card information used to fund the payment.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-apple_pay_card_response.json"
        }
      },
      "x-publicDocsSchemaName": "apple_pay_wallet_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-apple_pay_card_response.json": {
      "type": "object",
      "title": "Apple Pay Card Response",
      "description": "The Card from Apple Pay Wallet used to fund the payment",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_2856_MerchantsCommonComponentsSpecification-v1-schema-card_response.json"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The card holder's name as it appears on the card.",
              "maxLength": 300
            },
            "billing_address": {
              "$ref": "#/definitions/customized_x_unsupported_2991_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json",
              "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties."
            },
            "country_code": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json",
              "description": "The country where the card is issued."
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "apple_pay_card_response",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "maxLength": 100
        },
        "admin_area_4": {
          "type": "string",
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
          "maxLength": 100
        },
        "admin_area_3": {
          "type": "string",
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
          "maxLength": 100
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "address_details": {
          "type": "object",
          "title": "Address Details",
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "properties": {
            "street_number": {
              "type": "string",
              "description": "The street number.",
              "maxLength": 100
            },
            "street_name": {
              "type": "string",
              "description": "The street name. Just `Drury` in `Drury Lane`.",
              "maxLength": 100
            },
            "street_type": {
              "type": "string",
              "description": "The street type. For example, avenue, boulevard, road, or expressway.",
              "maxLength": 100
            },
            "delivery_service": {
              "type": "string",
              "description": "The delivery service. Post office box, bag number, or post office name.",
              "maxLength": 100
            },
            "building_name": {
              "type": "string",
              "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.",
              "maxLength": 100
            },
            "sub_building": {
              "type": "string",
              "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
              "maxLength": 100
            }
          }
        }
      },
      "required": [
        "country_code"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json": {
      "oneOf": [
        {
          "country_code": "AL",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AR",
          "validation_regex": "([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?"
        },
        {
          "country_code": "AT",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BE",
          "validation_regex": "[1-9]\\d{3}"
        },
        {
          "country_code": "BG",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Z]{2}[ ]?\\d{4}"
        },
        {
          "country_code": "BR",
          "validation_regex": "\\d{5}[\\-]?\\d{3}"
        },
        {
          "country_code": "BT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "BY",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CA",
          "validation_regex": "[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ ]?\\d[ABCEGHJ-NPRSTV-Z]\\d"
        },
        {
          "country_code": "CH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CL",
          "validation_regex": "\\d{7}"
        },
        {
          "country_code": "CN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CR",
          "validation_regex": "\\d{4,5}|\\d{3}-\\d{4}"
        },
        {
          "country_code": "CY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CZ",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "DE",
          "validation_regex": "(0[1-9]|[1-9]\\d)\\d{3}"
        },
        {
          "country_code": "DK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "DO",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "EC",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "EE",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "ES",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FI",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FM",
          "validation_regex": "(9694[1-4])(?:[ \\-]?(\\d{4}))?"
        },
        {
          "country_code": "FO",
          "validation_regex": "(FO[ \\-]?)?\\d{3}"
        },
        {
          "country_code": "FR",
          "validation_regex": "\\d{2}[ ]?\\d{3}"
        },
        {
          "country_code": "GB",
          "validation_regex": "GIR[ ]?0AA|(?:(?:AB|AL|B|BA|BB|BD|BF|BH|BL|BN|BR|BS|BT|BX|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(?:\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}))|BFPO[ ]?\\d{1,4}"
        },
        {
          "country_code": "GF",
          "validation_regex": "9[78]3\\d{2}"
        },
        {
          "country_code": "GL",
          "validation_regex": "(DK-?)?39\\d{2}"
        },
        {
          "country_code": "GP",
          "validation_regex": "9[78][01]\\d{2}"
        },
        {
          "country_code": "GR",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "HR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "HU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ID",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z0-9 \\-]{1,10}"
        },
        {
          "country_code": "IL",
          "validation_regex": "\\d{5}(\\d{2})?"
        },
        {
          "country_code": "IN",
          "validation_regex": "\\d{3}[ ]?\\d{3}"
        },
        {
          "country_code": "IS",
          "validation_regex": "\\d{3}"
        },
        {
          "country_code": "IT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "JP",
          "validation_regex": "\\d{3}-?\\d{4}"
        },
        {
          "country_code": "KG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "KH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KW",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KZ",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "LA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LK",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "LV",
          "validation_regex": "LV-\\d{4}"
        },
        {
          "country_code": "MA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MC",
          "validation_regex": "980\\d{2}"
        },
        {
          "country_code": "MD",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ME",
          "validation_regex": "8\\d{4}"
        },
        {
          "country_code": "MK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "MN",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MQ",
          "validation_regex": "9[78]2\\d{2}"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Z]{3}[ ]?\\d{2,4}"
        },
        {
          "country_code": "MU",
          "validation_regex": "\\d{3}(?:\\d{2}|[A-Z]{2}\\d{3})"
        },
        {
          "country_code": "MV",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MX",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MY",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "NL",
          "validation_regex": "\\d{4}[ ]?[A-Z]{2}"
        },
        {
          "country_code": "NO",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "NP",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NZ",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "OM",
          "validation_regex": "(?:PC )?\\d{3}"
        },
        {
          "country_code": "PE",
          "validation_regex": "(?:LIMA[ ]?\\d{1,2}|CALLAO[ ]?0?\\d)|[0-2]?\\d{1,4}"
        },
        {
          "country_code": "PH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "PL",
          "validation_regex": "\\d{2}-\\d{3}"
        },
        {
          "country_code": "PT",
          "validation_regex": "\\d{4}([\\-]?\\d{3})?"
        },
        {
          "country_code": "PY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "RE",
          "validation_regex": "9[78]4\\d{2}"
        },
        {
          "country_code": "RO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "RS",
          "validation_regex": "\\d{5,6}"
        },
        {
          "country_code": "RU",
          "validation_regex": "[1-9]\\d{5}"
        },
        {
          "country_code": "SA",
          "validation_regex": "\\d{5}([\\-]?\\d{4})?"
        },
        {
          "country_code": "SE",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "SI",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "SK",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SM",
          "validation_regex": "4789\\d"
        },
        {
          "country_code": "SV",
          "validation_regex": "(?:CP[ ]?)?[1-3][1-7][0-2]\\d"
        },
        {
          "country_code": "TH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TW",
          "validation_regex": "\\d{3}(\\d{2})?"
        },
        {
          "country_code": "UA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "US",
          "validation_regex": "\\d{5}([ \\-]?\\d{4})?"
        },
        {
          "country_code": "UY",
          "validation_regex": "[1-9]\\d{4}"
        },
        {
          "country_code": "VA",
          "validation_regex": "00120"
        },
        {
          "country_code": "VE",
          "validation_regex": "[1-8]\\d{3}([\\-]?[A-Z])?"
        },
        {
          "country_code": "VN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "YT",
          "validation_regex": "976\\d{2}"
        },
        {
          "country_code": "ZA",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "C2",
          "validation_regex": "\\d{6}"
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json": {
      "type": "string",
      "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
      "format": "ppaas_common_country_code_v2",
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^([A-Z]{2}|C2)$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-bank_response.json": {
      "type": "object",
      "title": "Bank Source response object",
      "description": "The bank source used to fund the payment",
      "properties": {
        "ach_debit": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-ach_debit_response.json"
        }
      },
      "x-publicDocsSchemaName": "bank"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-ach_debit_response.json": {
      "type": "object",
      "title": "ACH bank payment response object",
      "description": "ACH bank details response object",
      "properties": {
        "last_digits": {
          "type": "string",
          "description": "The last 4 digits of the bank account number.",
          "pattern": "[0-9]{4}",
          "minLength": 4,
          "maxLength": 4,
          "readOnly": true
        },
        "routing_number": {
          "type": "string",
          "description": "The 9-digit ABA routing transit number for the bank at which the account is held.",
          "pattern": "[0-9]{9}",
          "minLength": 9,
          "maxLength": 9,
          "readOnly": true
        },
        "account_holder_name": {
          "type": "string",
          "description": "Name of the person or business that owns the bank account.",
          "minLength": 1,
          "maxLength": 300,
          "readOnly": true
        }
      },
      "x-publicDocsSchemaName": "ach_debit_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-alipay.json": {
      "type": "object",
      "title": "Alipay payment object",
      "description": "Information used to pay using Alipay.",
      "properties": {
        "name": {
          "description": "Name on the wallet.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "alipay"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-full_name.json": {
      "type": "string",
      "description": "The full name representation like Mr J Smith",
      "minLength": 3,
      "maxLength": 300,
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-name_validation.json"
      },
      "x-publicDocsSchemaName": "name",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-name_validation.json": {
      "oneOf": [
        {
          "country_code": "AD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "AN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "CO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "EG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ER",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ES",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ET",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0342-\\u0345\\u037A-\\u037D\\u037F\\u0384-\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03D7\\u03F3\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE]"
        },
        {
          "country_code": "GT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "HN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ID",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F]"
        },
        {
          "country_code": "IM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u3005\\uFF07\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FF\\u31F0-\\u31FF\\uFF65-\\uFF9F\\uFF0D\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "KH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\uAC00-\\uD7A3\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ME",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "ML",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "OM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "QA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "SH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ST",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0E01-\\u0E3A\\u0E40-\\u0E4F]"
        },
        {
          "country_code": "TJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "TZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "UG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "US",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "XK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "C2",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-bancontact.json": {
      "type": "object",
      "title": "Bancontact payment object",
      "description": "Information used to pay Bancontact.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        },
        "iban_last_chars": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-iban_last_chars.json"
        },
        "card_last_digits": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "[0-9]{4}",
          "description": "The last digits of the card used to fund the Bancontact payment."
        }
      },
      "x-publicDocsSchemaName": "bancontact"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-bic.json": {
      "type": "string",
      "title": "BIC",
      "description": "The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank",
      "minLength": 8,
      "maxLength": 11,
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-iban_last_chars.json": {
      "type": "string",
      "description": "The last characters of the IBAN used to pay.",
      "minLength": 4,
      "maxLength": 34,
      "pattern": "[a-zA-Z0-9]{4}",
      "x-publicDocsSchemaName": "iban_last_chars",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-blik.json": {
      "type": "object",
      "title": "BLIK payment object",
      "description": "Information used to pay using BLIK",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        }
      },
      "x-publicDocsSchemaName": "blik"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "ppaas_common_email_address_v2",
      "minLength": 3,
      "maxLength": 254,
      "pattern": "^.+@[^\"\\-].+$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-eps.json": {
      "type": "object",
      "title": "An eps payment object",
      "description": "Information used to pay using eps.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        }
      },
      "x-publicDocsSchemaName": "eps"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-giropay.json": {
      "type": "object",
      "title": "A giropay payment object",
      "description": "Information needed to pay using giropay.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        }
      },
      "x-publicDocsSchemaName": "giropay"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-ideal.json": {
      "type": "object",
      "title": "iDEAL payment object",
      "description": "Information used to pay using iDEAL.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        },
        "iban_last_chars": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-iban_last_chars.json"
        }
      },
      "x-publicDocsSchemaName": "ideal"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-multibanco.json": {
      "type": "object",
      "title": "Multibanco payment object",
      "description": "Information used to pay using Multibanco.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "multibanco"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-mybank.json": {
      "type": "object",
      "title": "MyBank payment object",
      "description": "Information used to pay using MyBank.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        },
        "iban_last_chars": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-iban_last_chars.json"
        }
      },
      "x-publicDocsSchemaName": "mybank"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payu.json": {
      "type": "object",
      "title": "PayU payment object",
      "description": "Information needed to pay using PayU.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "payu"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-p24.json": {
      "type": "object",
      "title": "P24 payment object",
      "description": "Information used to pay using P24(Przelewy24)",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json",
          "x-publicDocsSchemaName": "name"
        },
        "payment_descriptor": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "P24 generated payment description."
        },
        "method_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 300,
          "description": "Numeric identifier of the payment scheme or bank used for the payment."
        },
        "method_description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "Friendly name of the payment scheme or bank used for the payment"
        }
      },
      "x-publicDocsSchemaName": "p24"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-poli.json": {
      "type": "object",
      "title": "POLi payment object",
      "description": "Information used to pay using POLi.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "poli"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-sofort.json": {
      "type": "object",
      "title": "Sofort payment object",
      "description": "Information used to pay using Sofort.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        },
        "iban_last_chars": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-iban_last_chars.json"
        }
      },
      "x-publicDocsSchemaName": "sofort"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-trustly.json": {
      "type": "object",
      "title": "Trustly payment object",
      "description": "Information needed to pay using Trustly.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        },
        "iban_last_chars": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-iban_last_chars.json"
        }
      },
      "x-publicDocsSchemaName": "trustly"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-trustpay.json": {
      "type": "object",
      "title": "TrustPay payment object",
      "description": "Information used to pay using TrustPay.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "trustpay"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-verkkopankki.json": {
      "type": "object",
      "title": "Verkkopankki (Finnish Online Banking) payment object",
      "description": "Information used to pay using Verkkopankki (Finnish Online Banking).",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bank_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 300,
          "description": "The name of the bank used to fund this payment. Valid bank names at the moment are Aktia, Danske Bank, Handelsbanken, Nordea, Oma Säästöpankki, Osuuspankki, POP Pankki, S-Pankki, Säästöpankki, Ålandsbanken."
        }
      },
      "x-publicDocsSchemaName": "verkkopankki"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-wechatpay.json": {
      "type": "object",
      "title": "WeChat Pay payment object",
      "description": "Information needed to pay using WeChat Pay.",
      "properties": {
        "name": {
          "description": "Name on the Wallet.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "wechatpay"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-checkout_payment_intent.json": {
      "type": "string",
      "title": "Checkout Payment Intent",
      "description": "The intent to either capture payment immediately or authorize a payment for an order after order creation.",
      "x-enum": [
        {
          "value": "CAPTURE",
          "description": "The merchant intends to capture payment immediately after the customer makes a payment."
        },
        {
          "value": "AUTHORIZE",
          "description": "The merchant intends to authorize a payment and place funds on hold after the customer makes a payment. Authorized payments are guaranteed for up to three days but are available to capture for up to 29 days. After the three-day honor period, the original authorized payment expires and you must re-authorize the payment. You must make a separate request to capture payments on demand. This intent is not supported when you have more than one `purchase_unit` within your order."
        }
      ],
      "x-publicDocsSchemaName": "checkout_payment_intent",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "properties": {
        "name": {
          "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
          "$ref": "#/definitions/customized_x_unsupported_4520_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "email_address": {
          "description": "The email address of the payer.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-email.json"
        },
        "payer_id": {
          "description": "The PayPal-assigned ID for the payer.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        },
        "phone": {
          "description": "The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href=\"https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments\">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-phone_with_type.json"
        },
        "birth_date": {
          "description": "The birth date of the payer in `YYYY-MM-DD` format.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json"
        },
        "tax_info": {
          "description": "The tax information of the payer. Required only for Brazilian payer's. Both `tax_id` and `tax_id_type` are required.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-tax_info.json"
        },
        "address": {
          "description": "The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.",
          "$ref": "#/definitions/customized_x_unsupported_5675_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "x-publicDocsSchemaName": "payer"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "prefix": {
          "type": "string",
          "description": "The prefix, or title, to the party's name.",
          "maxLength": 140
        },
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        },
        "middle_name": {
          "type": "string",
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "maxLength": 140
        },
        "suffix": {
          "type": "string",
          "description": "The suffix for the party's name.",
          "maxLength": 140
        },
        "alternate_full_name": {
          "type": "string",
          "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
          "maxLength": 300
        },
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json": {
      "oneOf": [
        {
          "country_code": "AD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "AN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "CO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "EG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ER",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ES",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ET",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0342-\\u0345\\u037A-\\u037D\\u037F\\u0384-\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03D7\\u03F3\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE]"
        },
        {
          "country_code": "GT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "HN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ID",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F]"
        },
        {
          "country_code": "IM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u3005\\uFF07\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FF\\u31F0-\\u31FF\\uFF65-\\uFF9F\\uFF0D\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "KH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\uAC00-\\uD7A3\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ME",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "ML",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "OM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "QA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "SH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ST",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0E01-\\u0E3A\\u0E40-\\u0E4F]"
        },
        {
          "country_code": "TJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "TZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "UG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "US",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "XK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "C2",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-email.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "merchant_common_email_address_v2",
      "maxLength": 254,
      "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
      "x-publicDocsSchemaName": "email",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json": {
      "type": "string",
      "title": "PayPal Account Identifier",
      "description": "The account identifier for a PayPal account.",
      "format": "ppaas_payer_id_v3",
      "minLength": 13,
      "maxLength": 13,
      "pattern": "^[2-9A-HJ-NP-Z]{13}$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-phone_with_type.json": {
      "type": "object",
      "title": "Phone With Type",
      "description": "The phone information.",
      "properties": {
        "phone_type": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone_type.json"
        },
        "phone_number": {
          "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.",
          "$ref": "#/definitions/customized_x_unsupported_4120_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json"
        }
      },
      "required": [
        "phone_number"
      ],
      "x-publicDocsSchemaName": "phone_with_type"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone_type.json": {
      "type": "string",
      "title": "Phone Type",
      "description": "The phone type.",
      "enum": [
        "FAX",
        "HOME",
        "MOBILE",
        "OTHER",
        "PAGER"
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "country_code": {
          "type": "string",
          "x-publicDocsSchemaName": "country_calling_code",
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 3,
          "pattern": "^[0-9]{1,3}?$"
        },
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        },
        "extension_number": {
          "type": "string",
          "description": "The extension number.",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[0-9]{1,15}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json": {
      "type": "string",
      "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
      "format": "ppaas_date_notime_v2",
      "minLength": 10,
      "maxLength": 10,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-tax_info.json": {
      "type": "object",
      "description": "The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.",
      "title": "Tax Information",
      "properties": {
        "tax_id": {
          "type": "string",
          "description": "The customer's tax ID. Supported for the PayPal payment method only. Typically, the tax ID is 11 characters long for individuals and 14 characters long for businesses.",
          "maxLength": 14
        },
        "tax_id_type": {
          "type": "string",
          "description": "The customer's tax ID type. Supported for the PayPal payment method only.",
          "x-enum": [
            {
              "value": "BR_CPF",
              "description": "The individual tax ID type."
            },
            {
              "value": "BR_CNPJ",
              "description": "The business tax ID type."
            }
          ]
        }
      },
      "required": [
        "tax_id",
        "tax_id_type"
      ],
      "x-publicDocsSchemaName": "tax_info"
    },
    "purchase_unit.json": {
      "type": "object",
      "title": "Purchase Unit",
      "description": "The purchase unit details. Used to capture required information for the payment contract.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`. <blockquote><strong>Note:</strong> If there are multiple purchase units, <code>reference_id</code> is required for each purchase unit.</blockquote>",
          "maxLength": 256
        },
        "amount": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-amount_with_breakdown.json",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "payee": {
          "description": "The merchant who receives payment for this transaction.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee.json"
        },
        "payment_instruction": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_instruction.json"
        },
        "description": {
          "type": "string",
          "description": "The purchase description.",
          "maxLength": 127
        },
        "custom_id": {
          "type": "string",
          "description": "The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.",
          "maxLength": 127
        },
        "invoice_id": {
          "type": "string",
          "description": "The API caller-provided external invoice ID for this order.",
          "maxLength": 127
        },
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the purchase unit. This ID appears in both the payer's transaction history and the emails that the payer receives. In addition, this ID is available in transaction and settlement reports that merchants and API callers can use to reconcile transactions. This ID is only available when an order is saved by calling <code>v2/checkout/orders/id/save</code>.",
          "maxLength": 19,
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "soft_descriptor": {
          "type": "string",
          "description": "The payment descriptor on account transactions on the customer's credit card statement, that PayPal sends to processors. The maximum length of the soft descriptor information that you can pass in the API field is 22 characters, in the following format:<pre>22 - len(PAYPAL * (8)) - len(<var>Descriptor in Payment Receiving Preferences of Merchant account</var> + 1)</pre>The PAYPAL prefix uses 8 characters.<br/><br/>The soft descriptor supports the following ASCII characters:<ul><li>Alphanumeric characters</li><li>Dashes</li><li>Asterisks</li><li>Periods (.)</li><li>Spaces</li></ul>For Wallet payments marketplace integrations:<ul><li>The merchant descriptor in the Payment Receiving Preferences must be the marketplace name.</li><li>You can't use the remaining space to show the customer service number.</li><li>The remaining spaces can be a combination of seller name and country.</li></ul><br/>For unbranded payments (Direct Card) marketplace integrations, use a combination of the seller name and phone number.",
          "maxLength": 22
        },
        "items": {
          "type": "array",
          "description": "An array of items that the customer purchases from the merchant.",
          "items": {
            "x-publicDocsSchemaName": "item",
            "description": "An item.",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-item.json"
          }
        },
        "shipping": {
          "description": "The shipping address and method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-shipping_detail.json"
        },
        "supplementary_data": {
          "description": "Contains Supplementary Data.",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-supplementary_data.json"
        },
        "payments": {
          "description": "The comprehensive history of payments for the purchase unit.",
          "readOnly": true,
          "$ref": "#/definitions/payment_collection.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-amount_with_breakdown.json": {
      "type": "object",
      "title": "Amount with Breakdown",
      "description": "The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.<br/>If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.<br/>The amount must be a positive number. For listed of supported currencies and decimal precision, see the PayPal REST APIs <a href=\"/docs/integration/direct/rest/currency-codes/\">Currency Codes</a>.",
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        {
          "properties": {
            "breakdown": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-amount_breakdown.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "amount_with_breakdown",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json": {
      "type": "object",
      "title": "Money",
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "properties": {
        "currency_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json"
        },
        "value": {
          "type": "string",
          "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).",
          "maxLength": 32,
          "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
        }
      },
      "required": [
        "currency_code",
        "value"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json": {
      "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
      "type": "string",
      "format": "ppaas_common_currency_code_v2",
      "minLength": 3,
      "maxLength": 3,
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-amount_breakdown.json": {
      "type": "object",
      "description": "The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.",
      "title": "Amount Breakdown",
      "properties": {
        "item_total": {
          "description": "The subtotal for all items. Required if the request includes `purchase_units[].items[].unit_amount`. Must equal the sum of `(items[].unit_amount * items[].quantity)` for all items. <code>item_total.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "shipping": {
          "description": "The shipping fee for all items within a given `purchase_unit`. <code>shipping.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "handling": {
          "description": "The handling fee for all items within a given `purchase_unit`. <code>handling.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "tax_total": {
          "description": "The total tax for all items. Required if the request includes `purchase_units.items.tax`. Must equal the sum of `(items[].tax * items[].quantity)` for all items. <code>tax_total.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "insurance": {
          "description": "The insurance fee for all items within a given `purchase_unit`. <code>insurance.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "shipping_discount": {
          "description": "The shipping discount for all items within a given `purchase_unit`. <code>shipping_discount.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "discount": {
          "description": "The discount for all items within a given `purchase_unit`. <code>discount.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        }
      },
      "x-publicDocsSchemaName": "amount_breakdown"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payee_base.json": {
      "type": "object",
      "title": "Merchant Base",
      "description": "The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "properties": {
        "email_address": {
          "description": "The email address of merchant.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-email.json"
        },
        "merchant_id": {
          "description": "The encrypted PayPal account ID of the merchant.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        },
        "client_id": {
          "type": "string",
          "description": "The public ID for the payee- or merchant-created app. Introduced to support use cases, such as BrainTree integration with PayPal, where payee `email_address` or `merchant_id` is not available.",
          "maxLength": 80,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "payee_base"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payee_displayable.json": {
      "type": "object",
      "title": "Displayable Merchant Information",
      "description": "The merchant information. The merchant is also known as the payee. Appears to the customer in checkout, transactions, email receipts, and transaction history.",
      "properties": {
        "business_email": {
          "description": "The email address of the merchant. Appears to the customer in checkout, transactions, email receipts, and transaction history.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-email.json"
        },
        "business_phone": {
          "description": "The phone number of the merchant. Appears to the customer in checkout, payment transactions, email receipts, and transaction history.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json"
        },
        "brand_name": {
          "type": "string",
          "description": "The name of the merchant. Appears to the customer in checkout, payment transactions, email receipts, and transaction history.",
          "maxLength": 127
        }
      },
      "x-publicDocsSchemaName": "payee_displayable"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payment_instruction.json": {
      "type": "object",
      "title": "Payment Instruction",
      "description": "Any additional payment instructions for PayPal Commerce Platform customers. Enables features for the PayPal Commerce Platform, such as delayed disbursement and collection of a platform fee. Applies during order creation for captured payments or during capture of authorized payments.",
      "properties": {
        "platform_fees": {
          "type": "array",
          "description": "An array of various fees, commissions, tips, or donations.",
          "minItems": 0,
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-platform_fee.json",
            "x-publicDocsSchemaName": "platform_fee"
          }
        },
        "disbursement_mode": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-disbursement_mode.json"
        }
      },
      "x-publicDocsSchemaName": "payment_instruction"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-platform_fee.json": {
      "type": "object",
      "title": "Platform Fee",
      "description": "The platform or partner fee, commission, or brokerage fee that is associated with the transaction. Not a separate or isolated transaction leg from the external perspective. The platform fee is limited in scope and is always associated with the original payment for the purchase unit.",
      "properties": {
        "amount": {
          "description": "The fee for this transaction.",
          "x-publicDocsSchemaName": "amount",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "payee": {
          "description": "The recipient of the fee for this transaction. If you omit this value, the default is the API caller.",
          "x-publicDocsSchemaName": "payee",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee_base.json"
        }
      },
      "required": [
        "amount"
      ],
      "x-publicDocsSchemaName": "platform_fee"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-disbursement_mode.json": {
      "type": "string",
      "title": "Disbursement Mode",
      "description": "The funds that are held on behalf of the merchant.",
      "default": "INSTANT",
      "x-enum": [
        {
          "value": "INSTANT",
          "description": "The funds are released to the merchant immediately.",
          "default": "INSTANT"
        },
        {
          "value": "DELAYED",
          "description": "The funds are held for a finite number of days. The actual duration depends on the region and type of integration. You can release the funds through a referenced payout. Otherwise, the funds disbursed automatically after the specified duration."
        }
      ],
      "x-publicDocsSchemaName": "disbursement_mode",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-item.json": {
      "type": "object",
      "title": "Item",
      "description": "The details for the items to be purchased.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The item name or title.",
          "minLength": 1,
          "maxLength": 127
        },
        "unit_amount": {
          "description": "The item price or rate per unit. If you specify <code>unit_amount</code>, <code>purchase_units[].amount.breakdown.item_total</code> is required. Must equal <code>unit_amount * quantity</code> for all items. <code>unit_amount.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "tax": {
          "description": "The item tax for each unit. If <code>tax</code> is specified, <code>purchase_units[].amount.breakdown.tax_total</code> is required. Must equal <code>tax * quantity</code> for all items. <code>tax.value</code> can not be a negative number.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "quantity": {
          "type": "string",
          "description": "The item quantity. Must be a whole number.",
          "maxLength": 10,
          "pattern": "^[1-9][0-9]{0,9}$"
        },
        "description": {
          "type": "string",
          "description": "The detailed item description.",
          "maxLength": 127
        },
        "sku": {
          "type": "string",
          "description": "The stock keeping unit (SKU) for the item.",
          "maxLength": 127
        },
        "category": {
          "type": "string",
          "description": "The item category type.",
          "x-enum": [
            {
              "value": "DIGITAL_GOODS",
              "description": "Goods that are stored, delivered, and used in their electronic format. This value is not currently supported for API callers that leverage the [PayPal for Commerce Platform](https://www.paypal.com/us/webapps/mpp/commerce-platform) product."
            },
            {
              "value": "PHYSICAL_GOODS",
              "description": "A tangible item that can be shipped with proof of delivery."
            },
            {
              "value": "DONATION",
              "description": "A contribution or gift for which no good or service is exchanged, usually to a not for profit organization. This category is restricted to approved API Callers and Payee. Please speak to your account manager if you want to process this type of items.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ],
          "minLength": 1,
          "maxLength": 20
        }
      },
      "required": [
        "name",
        "unit_amount",
        "quantity"
      ],
      "x-publicDocsSchemaName": "item"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-shipping_detail.json": {
      "type": "object",
      "description": "The shipping details.",
      "title": "Shipping Details",
      "properties": {
        "name": {
          "description": "The name of the person to whom to ship the items. Supports only the `full_name` property.",
          "$ref": "#/definitions/customized_x_unsupported_1125_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "options": {
          "type": "array",
          "description": "An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.",
          "maxItems": 10,
          "items": {
            "description": "The option that the payee or merchant offers to the payer to ship or pick up their items.",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-shipping_option.json",
            "x-publicDocsSchemaName": "shipping_option"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "address": {
          "description": "The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_6439_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "x-publicDocsSchemaName": "shipping_detail"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-shipping_option.json": {
      "type": "object",
      "title": "Shipping Option",
      "description": "The options that the payee or merchant offers to the payer to ship or pick up their items.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID that identifies a payer-selected shipping option.",
          "maxLength": 127
        },
        "label": {
          "type": "string",
          "description": "A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.",
          "maxLength": 127
        },
        "type": {
          "description": "The method by which the payer wants to get their items.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-shipping_type.json"
        },
        "amount": {
          "description": "The shipping cost for the selected option.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "selected": {
          "type": "boolean",
          "description": "If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`."
        }
      },
      "required": [
        "id",
        "label",
        "selected"
      ],
      "x-publicDocsSchemaName": "shipping_option"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-shipping_type.json": {
      "type": "string",
      "title": "Shipping Type",
      "description": "The method by which the payer wants to get their items.",
      "x-enum": [
        {
          "value": "SHIPPING",
          "description": "The payer intends to receive the items at a specified address.",
          "default": true
        },
        {
          "value": "PICKUP",
          "description": "The payer intends to pick up the items at a specified address. For example, a store address."
        }
      ],
      "x-publicDocsSchemaName": "shipping_type",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-supplementary_data.json": {
      "title": "Supplementary Data",
      "type": "object",
      "description": "The supplementary data.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "airline": {
          "type": "array",
          "description": "An array of airline itineraries' data, including ticket, passenger, and airline details.",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-airline_itinerary.json",
            "x-publicDocsSchemaName": "airline_itinerary"
          }
        },
        "point_of_sale": {
          "description": "The API caller-provided information about the store.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-point_of_sale.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "supplementary_data"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-airline_itinerary.json": {
      "title": "Airline Itinerary",
      "description": "The airline itinerary details.",
      "type": "object",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "ticket": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-airline_ticket.json"
        },
        "passenger": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-airline_passenger.json"
        },
        "flight_leg_details": {
          "type": "array",
          "description": "An array of the airline itinerary legs.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-flight_leg.json",
            "x-publicDocsSchemaName": "flight_leg"
          }
        },
        "clearing_sequence": {
          "type": "integer",
          "description": "For direct airline integration, numeric code to identify each clearing record message in those cases where multiple clearing messages are allowed per authorized transaction. Applicable to multiple captures against an authorization. In the case of single capture against an authorization, the value should be 1. Also, this value must be less than or equal to the clearing count.",
          "minimum": 0,
          "maximum": 99,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "clearing_count": {
          "type": "integer",
          "description": "For direct airline integration, numeric code to identify the total number of multiple sequence clearing record messages associated with a single authorization request. Applicable to multiple captures against an authorization. In the case of single capture against an authorization the value should be 1.",
          "minimum": 0,
          "maximum": 99,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "airline_itinerary"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-airline_ticket.json": {
      "title": "Airline Ticket Detail",
      "description": "The details for the airline ticket.",
      "type": "object",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "number": {
          "type": "string",
          "description": "The airline-issued ticket number or ID.",
          "minLength": 1,
          "maxLength": 16
        },
        "issue_date": {
          "description": "The date when the airline ticket was issued.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json"
        },
        "issuing_carrier_code": {
          "type": "string",
          "description": "The carrier code of the ticket issuer.",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "^[A-Z0-9]{2}$"
        },
        "travel_agency_name": {
          "type": "string",
          "description": "The name of the travel agency that issued the ticket.",
          "minLength": 1,
          "maxLength": 25
        },
        "travel_agency_code": {
          "type": "string",
          "description": "The IATA number, also ARC number or ARC/IATA number. The unique code or number for the travel agency that issued this ticket.",
          "minLength": 1,
          "maxLength": 8,
          "pattern": "^[A-Za-z0-9]+$"
        },
        "restricted_ticket": {
          "type": "boolean",
          "description": "Indicates whether the ticket is restricted.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "fare": {
          "description": "The total fare of the entire itinerary, including the legs.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "tax": {
          "description": "The total tax of the entire itinerary, including the legs.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "fee": {
          "description": "Any other fee, if included.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "airline_ticket"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-airline_passenger.json": {
      "title": "Airline Passenger Detail",
      "description": "The airline passenger details.",
      "type": "object",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "name": {
          "description": "The name of the passenger. Supports only the `full_name` property.",
          "$ref": "#/definitions/customized_x_unsupported_5492_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "date_of_birth": {
          "description": "The date of birth of the passenger.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json"
        },
        "country_code": {
          "description": "The passenger's country of residence.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "customer_code": {
          "type": "string",
          "description": "The card holder-supplied code to the merchant. Can be used for passing in the frequent flyer number of the customer.",
          "minLength": 1,
          "maxLength": 17,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "airline_passenger"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-flight_leg.json": {
      "title": "Flight Leg",
      "description": "The details of the flight leg.",
      "type": "object",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "flight_code": {
          "type": "string",
          "description": "The flight number of the current leg.",
          "minLength": 1,
          "maxLength": 5,
          "x-deprecated": {
            "since_version": "2.0",
            "see": "flight_number"
          }
        },
        "flight_number": {
          "type": "integer",
          "description": "The flight number of the current leg.",
          "minimum": 1,
          "maximum": 9999
        },
        "carrier_code": {
          "type": "string",
          "description": "The IATA two-letter accounting code that identifies the carrier.",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "^[A-Z0-9]{2}$"
        },
        "service_class": {
          "type": "string",
          "description": "The service class to which the airline ticket applies.",
          "minLength": 1,
          "maxLength": 1,
          "pattern": "^[A-Z]{1}$"
        },
        "departure_date": {
          "description": "The date of departure.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json"
        },
        "departure_time": {
          "description": "The local time when the flight departs from the airport.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-time_hourmin.json"
        },
        "departure_airport": {
          "type": "string",
          "description": "The airport code, as defined by [IATA](https://www.iata.org/publications/Pages/code-search.aspx).",
          "minLength": 3,
          "maxLength": 4,
          "pattern": "^[A-Z]{3,4}$"
        },
        "arrival_airport": {
          "type": "string",
          "description": "The airport code, as defined by [IATA](https://www.iata.org/publications/Pages/code-search.aspx).",
          "minLength": 3,
          "maxLength": 4,
          "pattern": "^[A-Z]{3,4}$"
        },
        "stopover_code": {
          "type": "string",
          "description": "The one-letter code that indicates whether the passenger is entitled to make a stopover.",
          "x-enum": [
            {
              "value": "O",
              "description": "Stopover allowed."
            },
            {
              "value": "X",
              "description": "Stopover not allowed."
            }
          ]
        },
        "fare_basis_code": {
          "type": "string",
          "description": "The code used by airline to identify a fare type and enable airline staff and travel agents to find the rules for this ticket.",
          "minLength": 1,
          "maxLength": 15
        },
        "arrival_time": {
          "description": "Local time at which flight arrives at the destination.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-time_hourmin.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "conjunction_ticket_number": {
          "type": "string",
          "description": "A ticket in conjunction  with  another ticket, which together make up a single contract of carriage.",
          "minLength": 1,
          "maxLength": 16,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "fare": {
          "description": "Fare details in the current leg.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "tax": {
          "description": "Tax for the current leg.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "fee": {
          "description": "Fees for this leg of the trip.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "additional_notations": {
          "type": "string",
          "description": "An endorsement or restriction on the ticket. An endorsement can be an agency-added notation or a mandatory government required notation, such as a value-added tax. A restriction is a limitation based on the type of fare, such as a ticket with a three-day minimum stay.",
          "minLength": 1,
          "maxLength": 20,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "flight_leg"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-time_hourmin.json": {
      "type": "string",
      "description": "The time, in the hh:mm 24 Hr format.",
      "format": "ppaas_time_hourmin_v3",
      "minLength": 5,
      "maxLength": 5,
      "pattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-point_of_sale.json": {
      "title": "Point of sale",
      "type": "object",
      "description": "The API caller-provided information about the store.",
      "properties": {
        "store_id": {
          "description": "The API caller-provided external store identification number.",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "terminal_id": {
          "description": "The API caller-provided external terminal identification number.",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        }
      }
    },
    "payment_collection.json": {
      "type": "object",
      "title": "Payment Collection",
      "description": "The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "authorizations": {
          "type": "array",
          "description": "An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.",
          "items": {
            "description": "The authorized payment for a purchase unit.",
            "x-publicDocsSchemaName": "authorizations",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authorization_with_additional_data.json"
          }
        },
        "captures": {
          "type": "array",
          "description": "An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.",
          "items": {
            "description": "The captured payment for a purchase unit.",
            "x-publicDocsSchemaName": "capture",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-capture.json"
          }
        },
        "refunds": {
          "type": "array",
          "description": "An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.",
          "items": {
            "description": "A refund for a purchase unit.",
            "x-publicDocsSchemaName": "refund",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-refund.json"
          }
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authorization_with_additional_data.json": {
      "type": "object",
      "title": "Authorization with Additional Data",
      "description": "The authorization with additional payment details, such as risk assessment and processor response. These details are populated only for certain payment methods.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authorization.json"
        },
        {
          "properties": {
            "risk_assessment": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-risk_assessments.json",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              },
              "readOnly": true
            },
            "processor_response": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-processor_response.json",
              "description": "The processor response for card transactions.",
              "readOnly": true,
              "x-visibility": {
                "extent": "EXTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "authorization_with_additional_data",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authorization.json": {
      "type": "object",
      "title": "Authorization",
      "description": "The authorized payment transaction.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authorization_status.json"
        },
        {
          "properties": {
            "id": {
              "description": "The PayPal-generated ID for the authorized payment.",
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "description": "The amount for this authorized payment.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
              "readOnly": true
            },
            "invoice_id": {
              "description": "The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.",
              "type": "string",
              "readOnly": true
            },
            "custom_id": {
              "type": "string",
              "description": "The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.",
              "maxLength": 127
            },
            "alternate_id": {
              "description": "The PayPal-generated alternate ID for the authorized payment. For example, used for UATP airline integration.",
              "type": "string",
              "readOnly": true,
              "minLength": 1,
              "maxLength": 22,
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            "seller_protection": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-seller_protection.json",
              "readOnly": true
            },
            "expiration_time": {
              "description": "The date and time when the authorized payment expires, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "readOnly": true
            },
            "links": {
              "description": "An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
                "x-publicDocsSchemaName": "link_description"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-activity_timestamps.json"
        }
      ],
      "x-publicDocsSchemaName": "authorization",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authorization_status.json": {
      "type": "object",
      "title": "Authorization Status",
      "description": "The status fields for an authorized payment.",
      "properties": {
        "status": {
          "description": "The status for the authorized payment.",
          "type": "string",
          "readOnly": true,
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The authorized payment is created. No captured payments have been made for this authorized payment."
            },
            {
              "value": "CAPTURED",
              "description": "The authorized payment has one or more captures against it. The sum of these captured payments is greater than the amount of the original authorized payment."
            },
            {
              "value": "DENIED",
              "description": "PayPal cannot authorize funds for this authorized payment."
            },
            {
              "value": "EXPIRED",
              "description": "The authorized payment has expired."
            },
            {
              "value": "PARTIALLY_CAPTURED",
              "description": "A captured payment was made for the authorized payment for an amount that is less than the amount of the original authorized payment."
            },
            {
              "value": "PARTIALLY_CREATED",
              "description": "The payment which was authorized for an amount that is less than the originally requested amount."
            },
            {
              "value": "VOIDED",
              "description": "The authorized payment was voided. No more captured payments can be made against this authorized payment."
            },
            {
              "value": "PENDING",
              "description": "The created authorization is in pending state. For more information, see <code>status.details</code>."
            }
          ]
        },
        "status_details": {
          "description": "The details of the authorized order pending status.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authorization_status_details.json"
        }
      },
      "x-publicDocsSchemaName": "authorization_status"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authorization_status_details.json": {
      "title": "Auhorization Status Details",
      "description": "The details of the authorized payment status.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the authorized status is `PENDING`.",
          "type": "string",
          "x-enum": [
            {
              "value": "PENDING_REVIEW",
              "description": "Authorization is pending manual review."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "authorization_status_details"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-seller_protection.json": {
      "type": "object",
      "description": "The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).",
      "title": "Seller Protection",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether the transaction is eligible for seller protection. For information, see [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).",
          "x-enum": [
            {
              "value": "ELIGIBLE",
              "description": "Your PayPal balance remains intact if the customer claims that they did not receive an item or the account holder claims that they did not authorize the payment."
            },
            {
              "value": "PARTIALLY_ELIGIBLE",
              "description": "Your PayPal balance remains intact if the customer claims that they did not receive an item."
            },
            {
              "value": "NOT_ELIGIBLE",
              "description": "This transaction is not eligible for seller protection."
            }
          ],
          "readOnly": true
        },
        "dispute_categories": {
          "type": "array",
          "description": "An array of conditions that are covered for the transaction.",
          "items": {
            "type": "string",
            "description": "The condition that is covered for the transaction.",
            "x-publicDocsSchemaName": "dispute_category",
            "x-enum": [
              {
                "value": "ITEM_NOT_RECEIVED",
                "description": "The payer paid for an item that they did not receive."
              },
              {
                "value": "UNAUTHORIZED_TRANSACTION",
                "description": "The payer did not authorize the payment."
              }
            ]
          },
          "readOnly": true
        }
      },
      "x-publicDocsSchemaName": "seller_protection"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json": {
      "type": "object",
      "title": "Link Description",
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "required": [
        "href",
        "rel"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "rel": {
          "type": "string",
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "method": {
          "type": "string",
          "description": "The HTTP method required to make the related call.",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "HEAD",
            "CONNECT",
            "OPTIONS",
            "PATCH"
          ],
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "title": {
          "type": "string",
          "description": "The link title.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "mediaType": {
          "type": "string",
          "description": "The media type, as defined by [RFC 2046](https://www.ietf.org/rfc/rfc2046.txt). Describes the link target.",
          "x-publicDocsSchemaName": "media_type",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "encType": {
          "type": "string",
          "description": "The media type in which to submit the request data.",
          "x-publicDocsSchemaName": "enc_type",
          "default": "application/json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "schema": {
          "description": "The schema that describes the request data.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "targetSchema": {
          "description": "The schema that describes the link target.",
          "x-publicDocsSchemaName": "target_schema",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json": {
      "type": "object",
      "title": "Link Schema",
      "description": "The request data or link target.",
      "additionalProperties": true,
      "properties": {
        "additionalItems": {
          "type": "object",
          "title": "Additional Items",
          "additionalProperties": true,
          "description": "Any additional items.",
          "x-publicDocsSchemaName": "additional_items"
        },
        "dependencies": {
          "type": "object",
          "title": "Dependencies",
          "additionalProperties": true
        },
        "items": {
          "type": "object",
          "title": "Items",
          "additionalProperties": true,
          "description": "An item."
        },
        "definitions": {
          "type": "object",
          "title": "Definitions",
          "additionalProperties": true
        },
        "patternProperties": {
          "type": "object",
          "title": "Pattern Properties",
          "additionalProperties": true,
          "description": "The pattern properties.",
          "x-publicDocsSchemaName": "pattern_properties"
        },
        "properties": {
          "type": "object",
          "title": "Properties",
          "additionalProperties": true
        },
        "allOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against all sub-schemas.",
          "x-publicDocsSchemaName": "all_of",
          "items": {
            "type": "object",
            "title": "All Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "all_of_item"
          }
        },
        "anyOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one or more sub-schemas.",
          "x-publicDocsSchemaName": "any_of",
          "items": {
            "type": "object",
            "title": "Any Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "any_of_item"
          }
        },
        "oneOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one sub-schema.",
          "x-publicDocsSchemaName": "one_of",
          "items": {
            "type": "object",
            "title": "One Of Item",
            "description": "A sub-schema against which the data must validate.",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "one_of_item"
          }
        },
        "not": {
          "type": "object",
          "title": "Not",
          "additionalProperties": true
        },
        "links": {
          "type": "array",
          "description": "An array of links.",
          "readOnly": true,
          "items": {
            "type": "object",
            "title": "Link",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "link",
            "description": "A link.",
            "readOnly": true
          }
        },
        "fragmentResolution": {
          "type": "string",
          "description": "The fragment resolution.",
          "x-publicDocsSchemaName": "fragment_resolution"
        },
        "media": {
          "type": "object",
          "title": "Media",
          "description": "The media type and context-encoding scheme.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The media type. See [Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types](https://tools.ietf.org/html/rfc2046)."
            },
            "binaryEncoding": {
              "type": "string",
              "description": "The content-encoding scheme. See [Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](https://tools.ietf.org/html/rfc2045).",
              "x-publicDocsSchemaName": "binary_encoding"
            }
          }
        },
        "pathStart": {
          "type": "string",
          "format": "uri",
          "description": "To apply this schema to the instances' URIs, start the URIs with this value.",
          "x-publicDocsSchemaName": "path_start"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-risk_assessments.json": {
      "type": "object",
      "title": "Risk Assessments",
      "description": "The risk assessment for a customer account, merchant account, or transaction.",
      "properties": {
        "payer": {
          "description": "The risk assessment for the customer. The customer is also known as the payer.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-risk_assessment.json"
        },
        "payee": {
          "description": "The risk assessment for the merchant. The merchant is also known as the payee.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-risk_assessment.json"
        }
      },
      "x-publicDocsSchemaName": "risk_assessments"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-risk_assessment.json": {
      "type": "object",
      "description": "The risk assessment for a customer or merchant account or transaction.",
      "title": "Risk Assessment",
      "properties": {
        "score": {
          "type": "integer",
          "readOnly": true,
          "minimum": 0,
          "maximum": 999,
          "description": "The fine-grained numeric evaluation. Value is from `0` to `999`."
        },
        "reasons": {
          "type": "array",
          "readOnly": true,
          "description": "An array of risk assessment reasons.",
          "minItems": 0,
          "maxItems": 9,
          "items": {
            "type": "string",
            "maxLength": 256,
            "x-publicDocsSchemaName": "reason",
            "description": "The reason for the risk assessment score.",
            "x-enum": [
              {
                "value": "UNUSUAL_ENTITY",
                "description": "The account and transaction is associated with possibly unusual entities."
              },
              {
                "value": "UNUSUAL_ENTITY_DEVICE_RISK",
                "description": "The account and transaction is associated with stronger correlation to bad devices."
              },
              {
                "value": "HIGH_VELOCITY",
                "description": "The account or device is associated with a high transaction frequency."
              },
              {
                "value": "HIGH_RISK_CONNECTION",
                "description": "This transaction is initiated from risky network, such as VPN or proxy."
              },
              {
                "value": "NEGATIVE_HISTORY",
                "description": "This account and device are associated with a high rate of possibly fraudulent transactions."
              },
              {
                "value": "HIGH_RISK_LINKING",
                "description": "This account and transaction indicate stronger correlation to a possibly fraudulent network."
              },
              {
                "value": "HIGH_RISK_GENERIC",
                "description": "The transaction has stronger indicators of fraudulent activity due to multiple reasons."
              },
              {
                "value": "LOW_UNAUTHORIZED_RISK",
                "description": "This transaction is unlikely to be fraudulent."
              },
              {
                "value": "HIGH_MERCHANDISE_RISK",
                "description": "This merchant has a history of a stronger correlation to fraud."
              },
              {
                "value": "UNUSUAL_MERCHANT_IDENTITY",
                "description": "PayPal cannot confirm this merchant’s identity."
              },
              {
                "value": "RISKY_BUSINESS_PROFILE",
                "description": "The industry or vertical for this merchant is risky."
              },
              {
                "value": "UNUSUAL_ACCOUNT_ENTITIES",
                "description": "This merchant account is associated with risky entities, such as a possibly stolen or risky credit card, or a device linked to possible fraud."
              },
              {
                "value": "SUBSTANDARD_SELLER",
                "description": "This merchant has unusually high rates of reversals."
              },
              {
                "value": "UNUSUAL_SELLING_BEHAVIOR",
                "description": "A change occurred in business models from historical selling for this merchant."
              },
              {
                "value": "INCREASED_RISK_EXPOSURE",
                "description": "This merchant account is at increased risk due to a change in selling velocity or other changes."
              },
              {
                "value": "INSUFFICIENT_INFORMATION",
                "description": "The merchant has a limited transaction history."
              },
              {
                "value": "POTENTIAL_COLLUSION",
                "description": "The merchant shows stronger potential for collusion with the consumer."
              },
              {
                "value": "LOW_MERCHANDISE_RISK",
                "description": "The merchant is unlikely to be fraudulent."
              },
              {
                "value": "LINKED_PAYPAL_SELLER",
                "description": "This merchant has an account with PayPal."
              }
            ]
          }
        }
      },
      "x-publicDocsSchemaName": "risk_assessment"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-processor_response.json": {
      "type": "object",
      "title": "Processor Response",
      "description": "The processor information. Might be required for payment requests, such as direct credit card transactions.",
      "properties": {
        "avs_code": {
          "description": "The address verification code for Visa, Discover, Mastercard, or American Express transactions.",
          "type": "string",
          "readOnly": true,
          "x-enum": [
            {
              "value": "A",
              "description": "For Visa, Mastercard, or Discover transactions, the address matches but the zip code does not match. For American Express transactions, the card holder address is correct."
            },
            {
              "value": "B",
              "description": "For Visa, Mastercard, or Discover transactions, the address matches. International A."
            },
            {
              "value": "C",
              "description": "For Visa, Mastercard, or Discover transactions, no values match. International N."
            },
            {
              "value": "D",
              "description": "For Visa, Mastercard, or Discover transactions, the address and postal code match. International X."
            },
            {
              "value": "E",
              "description": "For Visa, Mastercard, or Discover transactions, not allowed for Internet or phone transactions. For American Express card holder, the name is incorrect but the address and postal code match."
            },
            {
              "value": "F",
              "description": "For Visa, Mastercard, or Discover transactions, the address and postal code match. UK-specific X. For American Express card holder, the name is incorrect but the address matches."
            },
            {
              "value": "G",
              "description": "For Visa, Mastercard, or Discover transactions, global is unavailable. Nothing matches."
            },
            {
              "value": "I",
              "description": "For Visa, Mastercard, or Discover transactions, international is unavailable. Not applicable."
            },
            {
              "value": "M",
              "description": "For Visa, Mastercard, or Discover transactions, the address and postal code match. For American Express card holder, the name, address, and postal code match."
            },
            {
              "value": "N",
              "description": "For Visa, Mastercard, or Discover transactions, nothing matches. For American Express card holder, the address and postal code are both incorrect."
            },
            {
              "value": "P",
              "description": "For Visa, Mastercard, or Discover transactions, postal international Z. Postal code only."
            },
            {
              "value": "R",
              "description": "For Visa, Mastercard, or Discover transactions, re-try the request. For American Express, the system is unavailable."
            },
            {
              "value": "S",
              "description": "For Visa, Mastercard, Discover, or American Express, the service is not supported."
            },
            {
              "value": "U",
              "description": "For Visa, Mastercard, or Discover transactions, the service is unavailable. For American Express, information is not available. For Maestro, the address is not checked or the acquirer had no response. The service is not available."
            },
            {
              "value": "W",
              "description": "For Visa, Mastercard, or Discover transactions, whole ZIP code. For American Express, the card holder name, address, and postal code are all incorrect."
            },
            {
              "value": "X",
              "description": "For Visa, Mastercard, or Discover transactions, exact match of the address and the nine-digit ZIP code. For American Express, the card holder name, address, and postal code are all incorrect."
            },
            {
              "value": "Y",
              "description": "For Visa, Mastercard, or Discover transactions, the address and five-digit ZIP code match. For American Express, the card holder address and postal code are both correct."
            },
            {
              "value": "Z",
              "description": "For Visa, Mastercard, or Discover transactions, the five-digit ZIP code matches but no address. For American Express, only the card holder postal code is correct."
            },
            {
              "value": "Null",
              "description": "For Maestro, no AVS response was obtained."
            },
            {
              "value": "0",
              "description": "For Maestro, all address information matches."
            },
            {
              "value": "1",
              "description": "For Maestro, none of the address information matches."
            },
            {
              "value": "2",
              "description": "For Maestro, part of the address information matches."
            },
            {
              "value": "3",
              "description": "For Maestro, the merchant did not provide AVS information. It was not processed."
            },
            {
              "value": "4",
              "description": "For Maestro, the address was not checked or the acquirer had no response. The service is not available."
            }
          ]
        },
        "cvv_code": {
          "description": "The card verification value code for for Visa, Discover, Mastercard, or American Express.",
          "type": "string",
          "readOnly": true,
          "x-enum": [
            {
              "value": "E",
              "description": "For Visa, Mastercard, Discover, or American Express, error - unrecognized or unknown response."
            },
            {
              "value": "I",
              "description": "For Visa, Mastercard, Discover, or American Express, invalid or null."
            },
            {
              "value": "M",
              "description": "For Visa, Mastercard, Discover, or American Express, the CVV2/CSC matches."
            },
            {
              "value": "N",
              "description": "For Visa, Mastercard, Discover, or American Express, the CVV2/CSC does not match."
            },
            {
              "value": "P",
              "description": "For Visa, Mastercard, Discover, or American Express, it was not processed."
            },
            {
              "value": "S",
              "description": "For Visa, Mastercard, Discover, or American Express, the service is not supported."
            },
            {
              "value": "U",
              "description": "For Visa, Mastercard, Discover, or American Express, unknown - the issuer is not certified."
            },
            {
              "value": "X",
              "description": "For Visa, Mastercard, Discover, or American Express, no response. For Maestro, the service is not available."
            },
            {
              "value": "All others",
              "description": "For Visa, Mastercard, Discover, or American Express, error."
            },
            {
              "value": "0",
              "description": "For Maestro, the CVV2 matched."
            },
            {
              "value": "1",
              "description": "For Maestro, the CVV2 did not match."
            },
            {
              "value": "2",
              "description": "For Maestro, the merchant has not implemented CVV2 code handling."
            },
            {
              "value": "3",
              "description": "For Maestro, the merchant has indicated that CVV2 is not present on card."
            },
            {
              "value": "4",
              "description": "For Maestro, the service is not available."
            }
          ]
        },
        "response_code": {
          "description": "Processor response code for the non-PayPal payment processor errors.",
          "type": "string",
          "readOnly": true,
          "x-enum": [
            {
              "value": "0000",
              "description": "APPROVED."
            },
            {
              "value": "0100",
              "description": "REFERRAL."
            },
            {
              "value": "0800",
              "description": "BAD_RESPONSE_REVERSAL_REQUIRED."
            },
            {
              "value": "1000",
              "description": "PARTIAL_AUTHORIZATION."
            },
            {
              "value": "1300",
              "description": "INVALID_DATA_FORMAT."
            },
            {
              "value": "1310",
              "description": "INVALID_AMOUNT."
            },
            {
              "value": "1312",
              "description": "INVALID_TRANSACTION_CARD_ISSUER_ACQUIRER."
            },
            {
              "value": "1317",
              "description": "INVALID_CAPTURE_DATE."
            },
            {
              "value": "1320",
              "description": "INVALID_CURRENCY_CODE."
            },
            {
              "value": "1330",
              "description": "INVALID_ACCOUNT."
            },
            {
              "value": "1335",
              "description": "INVALID_ACCOUNT_RECURRING."
            },
            {
              "value": "1340",
              "description": "INVALID_TERMINAL."
            },
            {
              "value": "1350",
              "description": "INVALID_MERCHANT."
            },
            {
              "value": "1360",
              "description": "BAD_PROCESSING_CODE."
            },
            {
              "value": "1370",
              "description": "INVALID_MCC."
            },
            {
              "value": "1380",
              "description": "INVALID_EXPIRATION."
            },
            {
              "value": "1382",
              "description": "INVALID_CARD_VERIFICATION_VALUE."
            },
            {
              "value": "1384",
              "description": "INVALID_LIFE_CYCLE_OF_TRANSACTION."
            },
            {
              "value": "1390",
              "description": "INVALID_ORDER."
            },
            {
              "value": "1393",
              "description": "TRANSACTION_CANNOT_BE_COMPLETED."
            },
            {
              "value": "0500",
              "description": "DO_NOT_HONOR."
            },
            {
              "value": "5100",
              "description": "GENERIC_DECLINE."
            },
            {
              "value": "5110",
              "description": "CVV2_FAILURE."
            },
            {
              "value": "5120",
              "description": "INSUFFICIENT_FUNDS."
            },
            {
              "value": "5130",
              "description": "INVALID_PIN."
            },
            {
              "value": "5140",
              "description": "CARD_CLOSED."
            },
            {
              "value": "5150",
              "description": "PICKUP_CARD_SPECIAL_CONDITIONS. Try using another card. Do not retry the same card."
            },
            {
              "value": "5160",
              "description": "UNAUTHORIZED_USER."
            },
            {
              "value": "5170",
              "description": "AVS_FAILURE."
            },
            {
              "value": "5180",
              "description": "INVALID_OR_RESTRICTED_CARD. Try using another card. Do not retry the same card."
            },
            {
              "value": "5190",
              "description": "SOFT_AVS."
            },
            {
              "value": "5200",
              "description": "DUPLICATE_TRANSACTION."
            },
            {
              "value": "5210",
              "description": "INVALID_TRANSACTION."
            },
            {
              "value": "5400",
              "description": "EXPIRED_CARD."
            },
            {
              "value": "5500",
              "description": "INCORRECT_PIN_REENTER."
            },
            {
              "value": "5800",
              "description": "REVERSAL_REJECTED."
            },
            {
              "value": "5900",
              "description": "INVALID_ISSUE."
            },
            {
              "value": "5910",
              "description": "ISSUER_NOT_AVAILABLE_NOT_RETRIABLE."
            },
            {
              "value": "5920",
              "description": "ISSUER_NOT_AVAILABLE_RETRIABLE."
            },
            {
              "value": "6300",
              "description": "ACCOUNT_NOT_ON_FILE."
            },
            {
              "value": "7600",
              "description": "APPROVED_NON_CAPTURE."
            },
            {
              "value": "7700",
              "description": "ERROR_3DS."
            },
            {
              "value": "7710",
              "description": "AUTHENTICATION_FAILED."
            },
            {
              "value": "7800",
              "description": "BIN_ERROR."
            },
            {
              "value": "7900",
              "description": "PIN_ERROR."
            },
            {
              "value": "8000",
              "description": "PROCESSOR_SYSTEM_ERROR."
            },
            {
              "value": "8010",
              "description": "HOST_KEY_ERROR."
            },
            {
              "value": "8020",
              "description": "CONFIGURATION_ERROR."
            },
            {
              "value": "8030",
              "description": "UNSUPPORTED_OPERATION."
            },
            {
              "value": "8100",
              "description": "FATAL_COMMUNICATION_ERROR."
            },
            {
              "value": "8110",
              "description": "RETRIABLE_COMMUNICATION_ERROR."
            },
            {
              "value": "8220",
              "description": "SYSTEM_UNAVAILABLE."
            },
            {
              "value": "9100",
              "description": "DECLINED_PLEASE_RETRY. Retry."
            },
            {
              "value": "9500",
              "description": "SUSPECTED_FRAUD. Try using another card. Do not retry the same card."
            },
            {
              "value": "9510",
              "description": "SECURITY_VIOLATION."
            },
            {
              "value": "9520",
              "description": "LOST_OR_STOLEN. Try using another card. Do not retry the same card."
            },
            {
              "value": "9530",
              "description": "HOLD_CALL_CENTER. The merchant must call the number on the back of the card. POS scenario."
            },
            {
              "value": "9540",
              "description": "REFUSED_CARD."
            },
            {
              "value": "9600",
              "description": "UNRECOGNIZED_RESPONSE_CODE."
            },
            {
              "value": "5930",
              "description": "CARD_NOT_ACTIVATED."
            },
            {
              "value": "PPMD",
              "description": "PPMD."
            },
            {
              "value": "PPCE",
              "description": "CE_REGISTRATION_INCOMPLETE."
            },
            {
              "value": "PPNT",
              "description": "NETWORK_ERROR."
            },
            {
              "value": "PPCT",
              "description": "CARD_TYPE_UNSUPPORTED."
            },
            {
              "value": "PPTT",
              "description": "TRANSACTION_TYPE_UNSUPPORTED."
            },
            {
              "value": "PPCU",
              "description": "CURRENCY_USED_INVALID."
            },
            {
              "value": "PPQC",
              "description": "QUASI_CASH_UNSUPPORTED."
            },
            {
              "value": "PPVE",
              "description": "VALIDATION_ERROR."
            },
            {
              "value": "PPVT",
              "description": "VIRTUAL_TERMINAL_UNSUPPORTED."
            },
            {
              "value": "PPDC",
              "description": "DCC_UNSUPPORTED."
            },
            {
              "value": "PPER",
              "description": "INTERNAL_SYSTEM_ERROR."
            },
            {
              "value": "PPIM",
              "description": "ID_MISMATCH."
            },
            {
              "value": "PPH1",
              "description": "H1_ERROR."
            },
            {
              "value": "PPSD",
              "description": "STATUS_DESCRIPTION."
            },
            {
              "value": "PPAG",
              "description": "ADULT_GAMING_UNSUPPORTED."
            },
            {
              "value": "PPLS",
              "description": "LARGE_STATUS_CODE."
            },
            {
              "value": "PPCO",
              "description": "COUNTRY."
            },
            {
              "value": "PPAD",
              "description": "BILLING_ADDRESS."
            },
            {
              "value": "PPAU",
              "description": "MCC_CODE."
            },
            {
              "value": "PPUC",
              "description": "CURRENCY_CODE_UNSUPPORTED."
            },
            {
              "value": "PPUR",
              "description": "UNSUPPORTED_REVERSAL."
            },
            {
              "value": "PPVC",
              "description": "VALIDATE_CURRENCY."
            },
            {
              "value": "PPS0",
              "description": "BANKAUTH_ROW_MISMATCH."
            },
            {
              "value": "PPS1",
              "description": "BANKAUTH_ROW_SETTLED."
            },
            {
              "value": "PPS2",
              "description": "BANKAUTH_ROW_VOIDED."
            },
            {
              "value": "PPS3",
              "description": "BANKAUTH_EXPIRED."
            },
            {
              "value": "PPS4",
              "description": "CURRENCY_MISMATCH."
            },
            {
              "value": "PPS5",
              "description": "CREDITCARD_MISMATCH."
            },
            {
              "value": "PPS6",
              "description": "AMOUNT_MISMATCH."
            },
            {
              "value": "PPRF",
              "description": "INVALID_PARENT_TRANSACTION_STATUS."
            },
            {
              "value": "PPEX",
              "description": "EXPIRY_DATE."
            },
            {
              "value": "PPAX",
              "description": "AMOUNT_EXCEEDED."
            },
            {
              "value": "PPDV",
              "description": "AUTH_MESSAGE."
            },
            {
              "value": "PPDI",
              "description": "DINERS_REJECT."
            },
            {
              "value": "PPAR",
              "description": "AUTH_RESULT."
            },
            {
              "value": "PPBG",
              "description": "BAD_GAMING."
            },
            {
              "value": "PPGR",
              "description": "GAMING_REFUND_ERROR."
            },
            {
              "value": "PPCR",
              "description": "CREDIT_ERROR."
            },
            {
              "value": "PPAI",
              "description": "AMOUNT_INCOMPATIBLE."
            },
            {
              "value": "PPIF",
              "description": "IDEMPOTENCY_FAILURE."
            },
            {
              "value": "PPMC",
              "description": "BLOCKED_Mastercard."
            },
            {
              "value": "PPAE",
              "description": "AMEX_DISABLED."
            },
            {
              "value": "PPFV",
              "description": "FIELD_VALIDATION_FAILED."
            },
            {
              "value": "PPII",
              "description": "INVALID_INPUT_FAILURE."
            },
            {
              "value": "PPPM",
              "description": "INVALID_PAYMENT_METHOD."
            },
            {
              "value": "PPUA",
              "description": "USER_NOT_AUTHORIZED."
            },
            {
              "value": "PPFI",
              "description": "INVALID_FUNDING_INSTRUMENT."
            },
            {
              "value": "PPEF",
              "description": "EXPIRED_FUNDING_INSTRUMENT."
            },
            {
              "value": "PPFR",
              "description": "RESTRICTED_FUNDING_INSTRUMENT."
            },
            {
              "value": "PPEL",
              "description": "EXCEEDS_FREQUENCY_LIMIT."
            },
            {
              "value": "PCVV",
              "description": "CVV_FAILURE."
            },
            {
              "value": "PPTV",
              "description": "INVALID_VERIFICATION_TOKEN."
            },
            {
              "value": "PPTE",
              "description": "VERIFICATION_TOKEN_EXPIRED."
            },
            {
              "value": "PPPI",
              "description": "INVALID_PRODUCT."
            },
            {
              "value": "PPIT",
              "description": "INVALID_TRACE_ID."
            },
            {
              "value": "PPTF",
              "description": "INVALID_TRACE_REFERENCE."
            },
            {
              "value": "PPFE",
              "description": "FUNDING_SOURCE_ALREADY_EXISTS."
            },
            {
              "value": "PPTR",
              "description": "VERIFICATION_TOKEN_REVOKED."
            },
            {
              "value": "PPTI",
              "description": "INVALID_TRANSACTION_ID."
            },
            {
              "value": "PPD3",
              "description": "SECURE_ERROR_3DS."
            },
            {
              "value": "PPPH",
              "description": "NO_PHONE_FOR_DCC_TRANSACTION."
            },
            {
              "value": "PPAV",
              "description": "ARC_AVS."
            },
            {
              "value": "PPC2",
              "description": "ARC_CVV."
            },
            {
              "value": "PPLR",
              "description": "LATE_REVERSAL."
            },
            {
              "value": "PPNC",
              "description": "NOT_SUPPORTED_NRC."
            },
            {
              "value": "PPRR",
              "description": "MERCHANT_NOT_REGISTERED."
            },
            {
              "value": "PPSC",
              "description": "ARC_SCORE."
            },
            {
              "value": "PPSE",
              "description": "AMEX_DENIED."
            },
            {
              "value": "PPUE",
              "description": "UNSUPPORT_ENTITY."
            },
            {
              "value": "PPUI",
              "description": "UNSUPPORT_INSTALLMENT."
            },
            {
              "value": "PPUP",
              "description": "UNSUPPORT_POS_FLAG."
            },
            {
              "value": "PPRE",
              "description": "UNSUPPORT_REFUND_ON_PENDING_BC."
            }
          ]
        },
        "payment_advice_code": {
          "description": "The declined payment transactions might have payment advice codes. The card networks, like Visa and Mastercard, return payment advice codes.",
          "type": "string",
          "readOnly": true,
          "x-enum": [
            {
              "value": "01",
              "description": "For Mastercard, expired card account upgrade or portfolio sale conversion. Obtain new account information before next billing cycle."
            },
            {
              "value": "02",
              "description": "For Mastercard, over credit limit or insufficient funds. Retry the transaction 72 hours later. For Visa, the card holder wants to stop only one specific payment in the recurring payment relationship. The merchant must NOT resubmit the same transaction. The merchant can continue the billing process in the subsequent billing period."
            },
            {
              "value": "03",
              "description": "For Mastercard, account closed as fraudulent. Obtain another type of payment from customer due to account being closed or fraud. Possible reason: Account closed as fraudulent. For Visa, the card holder wants to stop all recurring payment transactions for a specific merchant. Stop recurring payment requests."
            },
            {
              "value": "21",
              "description": "For Mastercard, the card holder has been unsuccessful at canceling recurring payment through merchant. Stop recurring payment requests. For Visa, all recurring payments were canceled for the card number requested. Stop recurring payment requests."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "processor_response"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-capture.json": {
      "type": "object",
      "title": "Capture",
      "description": "A captured payment.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-capture_status.json"
        },
        {
          "properties": {
            "id": {
              "description": "The PayPal-generated ID for the captured payment.",
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "description": "The amount for this captured payment.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
              "readOnly": true
            },
            "parent_transaction": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-parent_transaction.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            "invoice_id": {
              "description": "The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.",
              "type": "string",
              "readOnly": true
            },
            "custom_id": {
              "type": "string",
              "description": "The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.",
              "maxLength": 127
            },
            "seller_protection": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-seller_protection.json",
              "readOnly": true
            },
            "final_capture": {
              "description": "Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.",
              "type": "boolean",
              "default": false,
              "readOnly": true
            },
            "seller_receivable_breakdown": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-seller_receivable_breakdown.json",
              "readOnly": true
            },
            "disbursement_mode": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-disbursement_mode.json"
            },
            "error": {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            "links": {
              "description": "An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
                "x-publicDocsSchemaName": "link_description"
              }
            },
            "processor_response": {
              "description": "An object that provides additional processor information for a direct credit card transaction.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-processor_response.json",
              "x-visibility": {
                "extent": "EXTERNAL"
              }
            },
            "supplementary_data": {
              "description": "An object that provides supplementary/additional data for a payment transaction that might be sent to the processor if a credit card is involved. This object is designed to pass information that depending on the type of data passed and use case can lead to an improvement in conversion rates, manage risk and ensure compliance. Currently this object allows the API caller to specify airline_itineraries if the transaction includes an airline ticket purchase.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-supplementary_data.json"
            }
          }
        },
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-activity_timestamps.json"
        }
      ],
      "x-publicDocsSchemaName": "capture",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-capture_status.json": {
      "type": "object",
      "title": "Capture Status",
      "description": "The status of a captured payment.",
      "properties": {
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>."
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            },
            {
              "value": "FAILED",
              "description": "There was an error while capturing payment.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ],
          "readOnly": true
        },
        "status_details": {
          "description": "The details of the captured payment status.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-capture_status_details.json"
        }
      },
      "x-publicDocsSchemaName": "capture_status"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-capture_status_details.json": {
      "title": "Capture Status Details",
      "description": "The details of the captured payment status.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the captured payment status is `PENDING` or `DENIED`.",
          "type": "string",
          "x-enum": [
            {
              "value": "BUYER_COMPLAINT",
              "description": "The payer initiated a dispute for this captured payment with PayPal."
            },
            {
              "value": "CHARGEBACK",
              "description": "The captured funds were reversed in response to the payer disputing this captured payment with the issuer of the financial instrument used to pay for this captured payment."
            },
            {
              "value": "ECHECK",
              "description": "The payer paid by an eCheck that has not yet cleared."
            },
            {
              "value": "INTERNATIONAL_WITHDRAWAL",
              "description": "Visit your online account. In your **Account Overview**, accept and deny this payment."
            },
            {
              "value": "OTHER",
              "description": "No additional specific reason can be provided. For more information about this captured payment, visit your account online or contact PayPal."
            },
            {
              "value": "PENDING_REVIEW",
              "description": "The captured payment is pending manual review."
            },
            {
              "value": "RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION",
              "description": "The payee has not yet set up appropriate receiving preferences for their account. For more information about how to accept or deny this payment, visit your account online. This reason is typically offered in scenarios such as when the currency of the captured payment is different from the primary holding currency of the payee."
            },
            {
              "value": "REFUNDED",
              "description": "The captured funds were refunded."
            },
            {
              "value": "TRANSACTION_APPROVED_AWAITING_FUNDING",
              "description": "The payer must send the funds for this captured payment. This code generally appears for manual EFTs."
            },
            {
              "value": "UNILATERAL",
              "description": "The payee does not have a PayPal account."
            },
            {
              "value": "VERIFICATION_REQUIRED",
              "description": "The payee's PayPal account is not verified."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "capture_status_details"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-parent_transaction.json": {
      "type": "object",
      "title": "Parent Transaction",
      "description": "Information about the parent transaction.",
      "properties": {
        "id": {
          "description": "The PayPal-generated ID for Authorization or Order this transaction is capturing.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The payment type the parent transaction.",
          "type": "string",
          "readOnly": true,
          "x-enum": [
            {
              "value": "AUTHORIZATION",
              "description": "The parent transaction is an authorization."
            },
            {
              "value": "ORDER",
              "description": "The parent transaction is an order."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "parent_transaction"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-seller_receivable_breakdown.json": {
      "type": "object",
      "title": "Seller Receivable Breakdown",
      "description": "The detailed breakdown of the capture activity.",
      "properties": {
        "gross_amount": {
          "description": "The amount for this captured payment in the currency of the transaction.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "paypal_fee": {
          "description": "The applicable fee for this captured payment in the currency of the transaction.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "paypal_fee_in_receivable_currency": {
          "description": "The applicable fee for this captured payment in the receivable currency. Returned only in cases the fee is charged in the receivable currency. Example 'CNY'.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "net_amount": {
          "description": "The net amount that the payee receives for this captured payment in their PayPal account. The net amount is computed as <code>gross_amount</code> minus the <code>paypal_fee</code> minus the <code>platform_fees</code>.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "receivable_amount": {
          "description": "The net amount that is credited to the payee's PayPal account. Returned only when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds. The amount is computed as <code>net_amount</code> times <code>exchange_rate</code>.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "exchange_rate": {
          "description": "The exchange rate that determines the amount that is credited to the payee's PayPal account. Returned when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-exchange_rate.json"
        },
        "platform_fees": {
          "type": "array",
          "description": "An array of platform or partner fees, commissions, or brokerage fees that associated with the captured payment.",
          "minItems": 0,
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-platform_fee.json",
            "x-publicDocsSchemaName": "platform_fee"
          }
        }
      },
      "required": [
        "gross_amount"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-exchange_rate.json": {
      "description": "The exchange rate that determines the amount to convert from one currency to another currency.",
      "type": "object",
      "title": "Exchange Rate",
      "properties": {
        "source_currency": {
          "description": "The source currency from which to convert an amount.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json"
        },
        "target_currency": {
          "description": "The target currency to which to convert an amount.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json"
        },
        "value": {
          "description": "The target currency amount. Equivalent to one unit of the source currency. Formatted as integer or decimal value with one to 15 digits to the right of the decimal point.",
          "type": "string"
        }
      },
      "readOnly": true,
      "x-publicDocsSchemaName": "exchange_rate"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json": {
      "type": "object",
      "title": "Error",
      "description": "The error details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The human-readable, unique name of the error."
        },
        "message": {
          "type": "string",
          "description": "The message that describes the error."
        },
        "debug_id": {
          "type": "string",
          "description": "The PayPal internal ID. Used for correlation purposes."
        },
        "information_link": {
          "type": "string",
          "description": "The information link, or URI, that shows detailed information about this error for the developer.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of additional details about the error.",
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error_details.json",
            "x-publicDocsSchemaName": "error_details"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          }
        }
      },
      "required": [
        "name",
        "message",
        "debug_id"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error_details.json": {
      "title": "Error Details",
      "type": "object",
      "description": "The error details. Required for client-side `4XX` errors.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
        },
        "value": {
          "type": "string",
          "description": "The value of the field that caused the error."
        },
        "location": {
          "type": "string",
          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
          "default": "body"
        },
        "issue": {
          "type": "string",
          "description": "The unique, fine-grained application-level error code."
        },
        "description": {
          "type": "string",
          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
        }
      },
      "required": [
        "issue"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-refund.json": {
      "type": "object",
      "title": "Refund",
      "description": "The refund information.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-refund_status.json"
        },
        {
          "properties": {
            "id": {
              "description": "The PayPal-generated ID for the refund.",
              "type": "string",
              "readOnly": true
            },
            "amount": {
              "description": "The amount that the payee refunded to the payer.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
              "readOnly": true
            },
            "invoice_id": {
              "description": "The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.",
              "type": "string",
              "readOnly": true
            },
            "note_to_payer": {
              "description": "The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives.",
              "type": "string",
              "readOnly": true
            },
            "seller_payable_breakdown": {
              "description": "The breakdown of the refund.",
              "type": "object",
              "title": "Merchant Payable Breakdown",
              "properties": {
                "gross_amount": {
                  "description": "The amount that the payee refunded to the payer.",
                  "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
                  "readOnly": true
                },
                "paypal_fee": {
                  "description": "The PayPal fee that was refunded to the payer. This fee might not match the PayPal fee that the payee paid when the payment was captured.",
                  "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
                  "readOnly": true
                },
                "net_amount": {
                  "description": "The net amount that the payee's account is debited, if the payee holds funds in the currency for this refund. The net amount is calculated as <code>gross_amount</code> minus <code>paypal_fee</code> minus <code>platform_fees</code>.",
                  "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
                  "readOnly": true
                },
                "platform_fees": {
                  "type": "array",
                  "description": "An array of platform or partner fees, commissions, or brokerage fees for the refund.",
                  "minItems": 0,
                  "maxItems": 1,
                  "items": {
                    "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-platform_fee.json",
                    "x-publicDocsSchemaName": "platform_fee"
                  }
                },
                "net_amount_breakdown": {
                  "type": "array",
                  "description": "An array of breakdown values for the net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the payee holds their funds.",
                  "items": {
                    "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-net_amount_breakdown_item.json",
                    "x-publicDocsSchemaName": "net_amount_breakdown_item"
                  },
                  "readOnly": true
                },
                "total_refunded_amount": {
                  "description": "The total amount refunded from the original capture to date. For example, if a payer makes a $100 purchase and was refunded $20 a week ago and was refunded $30 in this refund, the `gross_amount` is $30 for this refund and the `total_refunded_amount` is $50.",
                  "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
                }
              },
              "readOnly": true
            },
            "links": {
              "description": "An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
                "x-publicDocsSchemaName": "link_description"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-activity_timestamps.json"
        }
      ],
      "x-publicDocsSchemaName": "refund",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-refund_status.json": {
      "type": "object",
      "description": "The refund status.",
      "title": "Refund Status",
      "properties": {
        "status": {
          "description": "The status of the refund.",
          "type": "string",
          "x-enum": [
            {
              "value": "CANCELLED",
              "description": "The refund was cancelled."
            },
            {
              "value": "PENDING",
              "description": "The refund is pending. For more information, see <code>status_details.reason</code>."
            },
            {
              "value": "COMPLETED",
              "description": "The funds for this transaction were debited to the customer's account."
            }
          ],
          "readOnly": true
        },
        "status_details": {
          "description": "The details of the refund status.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-refund_status_details.json"
        }
      },
      "x-publicDocsSchemaName": "refund_status"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-refund_status_details.json": {
      "title": "Refund Status Details",
      "description": "The details of the refund status.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the refund has the `PENDING` or `FAILED` status.",
          "type": "string",
          "x-enum": [
            {
              "value": "ECHECK",
              "description": "The customer's account is funded through an eCheck, which has not yet cleared."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "refund_status_details"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-net_amount_breakdown_item.json": {
      "type": "object",
      "title": "Net Amount Breakdown Item",
      "description": "The net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the merchant holds their funds.",
      "properties": {
        "payable_amount": {
          "description": "The net amount debited from the merchant's PayPal account.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "converted_amount": {
          "description": "The converted payable amount.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "exchange_rate": {
          "description": "The exchange rate that determines the amount that was debited from the merchant's PayPal account.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-exchange_rate.json"
        }
      },
      "x-publicDocsSchemaName": "net_amount_breakdown"
    },
    "order_status.json": {
      "type": "string",
      "description": "The order status.",
      "title": "Order Status",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "x-enum": [
        {
          "value": "CREATED",
          "description": "The order was created with the specified context."
        },
        {
          "value": "SAVED",
          "description": "The order was saved and persisted. The order status continues to be in progress until a capture is made with <code>final_capture = true</code> for all purchase units within the order."
        },
        {
          "value": "APPROVED",
          "description": "The customer approved the payment through the PayPal wallet or another form of guest or unbranded payment. For example, a card, bank account, or so on."
        },
        {
          "value": "VOIDED",
          "description": "All purchase units in the order are voided."
        },
        {
          "value": "COMPLETED",
          "description": "The payment was authorized or the authorized payment was captured for the order."
        },
        {
          "value": "PAYER_ACTION_REQUIRED",
          "description": "The order requires an action from the payer (e.g. 3DS authentication). Redirect the payer to the \"rel\":\"payer_action\" HATEOAS link returned as part of the response prior to authorizing or capturing the order."
        },
        {
          "value": "PARTIALLY_COMPLETED",
          "description": "Some of the 'purchase_units' within the Order could not be successfully authorized or captured. This status is only applicable if you have multiple 'purchase_units' for an order.",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-credit_financing_offer.json": {
      "type": "object",
      "description": "The details about the payer-selected credit financing offer.",
      "title": "Credit Financing Offer",
      "properties": {
        "issuer": {
          "type": "string",
          "description": "The issuer of the credit financing offer.",
          "x-enum": [
            {
              "value": "PAYPAL",
              "description": "Issued by PayPal.",
              "default": true
            }
          ]
        },
        "total_payment": {
          "description": "The total amount due, which is the sum of `purchase_unit[].amount` + `total_interest`.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "total_interest": {
          "description": "The interest due.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "installment_details": {
          "type": "object",
          "title": "Installment Details",
          "description": "The payer-approved installment payment plan details.",
          "properties": {
            "period": {
              "type": "string",
              "description": "The frequency with which the payer has agreed to make the payment.",
              "x-enum": [
                {
                  "value": "MONTHLY",
                  "description": "Payments are monthly.",
                  "default": true
                }
              ]
            },
            "payment_due": {
              "description": "The payment due at the end of each period.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
            }
          }
        },
        "term": {
          "description": "The payer-selected financing term, in months.",
          "type": "integer"
        }
      },
      "x-publicDocsSchemaName": "credit_financing_offer"
    },
    "order_request.json": {
      "type": "object",
      "title": "Order Request",
      "description": "The order request details.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "intent": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-checkout_payment_intent.json"
        },
        "processing_instruction": {
          "$ref": "#/definitions/processing_instruction.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "payer": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payer.json"
        },
        "purchase_units": {
          "type": "array",
          "description": "An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "x-publicDocsSchemaName": "purchase_unit",
            "description": "The purchase unit. Establishes a contract between a payer and the payee.",
            "$ref": "#/definitions/purchase_unit_request.json"
          }
        },
        "payment_source": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_source.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "application_context": {
          "x-publicDocsSchemaName": "application_context",
          "description": "Customize the payer experience during the approval process for the payment with PayPal.",
          "$ref": "#/definitions/order_application_context.json"
        }
      },
      "required": [
        "intent",
        "purchase_units"
      ]
    },
    "processing_instruction.json": {
      "type": "string",
      "title": "Processing Instruction",
      "description": "The instruction to process an order.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "default": "NO_INSTRUCTION",
      "x-enum": [
        {
          "value": "ORDER_SAVED_EXPLICITLY",
          "description": "The API caller saves the order for future payment processing by making an explicit <code>v2/checkout/orders/id/save</code> call after the payer approves the order."
        },
        {
          "value": "ORDER_SAVED_ON_BUYER_APPROVAL",
          "description": "PayPal implicitly saves the order on behalf of the API caller after the payer approves the order. Note that this option is not currently supported."
        },
        {
          "value": "NO_INSTRUCTION",
          "description": "The API caller intends to authorize <code>v2/checkout/orders/id/authorize</code> or capture <code>v2/checkout/orders/id/capture</code> after the payer approves the order.",
          "default": true
        }
      ],
      "properties": {}
    },
    "purchase_unit_request.json": {
      "type": "object",
      "title": "Purchase Unit Request",
      "description": "The purchase unit request. Includes required information for the payment contract.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`.",
          "maxLength": 256
        },
        "amount": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-amount_with_breakdown.json"
        },
        "payee": {
          "description": "The merchant who receives payment for this transaction.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee.json"
        },
        "payment_instruction": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_instruction.json"
        },
        "description": {
          "type": "string",
          "description": "The purchase description.",
          "maxLength": 127
        },
        "custom_id": {
          "type": "string",
          "description": "The API caller-provided external ID. Used to reconcile client transactions with PayPal transactions. Appears in transaction and settlement reports but is not visible to the payer.",
          "maxLength": 127
        },
        "invoice_id": {
          "type": "string",
          "description": "The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.",
          "maxLength": 127
        },
        "soft_descriptor": {
          "type": "string",
          "description": "The soft descriptor is the dynamic text used to construct the statement descriptor that appears on a payer's card statement.<br><br>If an Order is paid using the \"PayPal Wallet\", the statement descriptor will appear in following format on the payer's card statement: <code><var>PAYPAL_prefix</var>+(space)+<var>merchant_descriptor</var>+(space)+ <var>soft_descriptor</var></code><blockquote><strong>Note:</strong> The merchant descriptor is the descriptor of the merchant’s payment receiving preferences which can be seen by logging into the merchant account https://www.sandbox.paypal.com/businessprofile/settings/info/edit</blockquote>The <code>PAYPAL</code> prefix uses 8 characters. Only the first 22 characters will be displayed in the statement. <br>For example, if:<ul><li>The PayPal prefix toggle is <code>PAYPAL *</code>.</li><li>The merchant descriptor in the profile is <code>Janes Gift</code>.</li><li>The soft descriptor is <code>800-123-1234</code>.</li></ul>Then, the statement descriptor on the card is <code>PAYPAL * Janes Gift 80</code>.",
          "maxLength": 22
        },
        "items": {
          "type": "array",
          "description": "An array of items that the customer purchases from the merchant.",
          "items": {
            "x-publicDocsSchemaName": "item",
            "description": "The item.",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-item.json"
          }
        },
        "shipping": {
          "description": "The name and address of the person to whom to ship the items.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-shipping_detail.json"
        },
        "supplementary_data": {
          "description": "Contains Supplementary Data.",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-supplementary_data.json"
        }
      },
      "required": [
        "amount"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payment_source.json": {
      "type": "object",
      "title": "Payment Source",
      "description": "The payment source definition.",
      "properties": {
        "card": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "token": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-token.json"
        },
        "bank": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bank.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "paypal": {
          "description": "Indicates that paypal wallet is the payment source. Main use of this selection is to provide additional instructions associated with this choice like vaulting.",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet.json"
        },
        "alipay": {
          "description": "[Alipay is a third-party mobile and online payment platform, established in Hangzhou, China](/https://intl.alipay.com/).",
          "x-supportedCountries": [
            "C2"
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-alipay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "alipay"
        },
        "bancontact": {
          "description": "[Bancontact is the most popular online payment in Belgium.](/https://www.bancontact.com/).",
          "x-supportedCountries": [
            {
              "code": "BE"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bancontact_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "bancontact"
        },
        "blik": {
          "description": "[BLIK is a mobile payment system, created by Polish Payment Standard in order to allow millions of users to pay in shops, payout cash in ATMs and make online purchases and payments](/https://blikmobile.pl//).",
          "x-supportedCountries": [
            {
              "code": "PL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-blik_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "blik"
        },
        "eps": {
          "description": "[The eps transfer is an online payment method developed by many Austrian banks.](/https://www.eps-ueberweisung.at/).",
          "x-supportedCountries": [
            {
              "code": "AT"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-eps_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "eps"
        },
        "giropay": {
          "description": "[The giropay is an Internet payment System in Germany, based on online banking.](/http://giropay.de/).",
          "x-supportedCountries": [
            {
              "code": "DE"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-giropay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "giropay"
        },
        "ideal": {
          "description": "[iDEAL is an online payment method that enables consumers to pay online through their own bank.](/https://www.ideal.nl//).",
          "x-supportedCountries": [
            {
              "code": "NL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-ideal_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "ideal"
        },
        "multibanco": {
          "description": "[Multibanco is an interbank network in Portugal.](/https://www.multibanco.pt/).",
          "x-supportedCountries": [
            {
              "code": "PT"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-multibanco_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "multibanco"
        },
        "mybank": {
          "description": "[MyBank is an e-authorisation solution which enables safe digital payments and identity authentication through a consumer’s own online banking portal or mobile application.](/https://www.mybank.eu/).",
          "x-supportedCountries": [
            {
              "code": "IT"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-mybank_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "mybank"
        },
        "payu": {
          "description": "[PayU is a payment service provider delivering access to the Polish and Czech banking systems.](/https://www.payu.cz/en/payment-methods/).",
          "x-supportedCountries": [
            {
              "code": "CZ"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payu_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "payu"
        },
        "p24": {
          "description": "[P24 (Przelewy24) is a secure and fast online bank transfer service linked to all the major banks in Poland.](/www.przelewy24.pl/).",
          "x-supportedCountries": [
            {
              "code": "PL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-p24_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "p24"
        },
        "poli": {
          "description": "[POLi is a secure and fast online bank transfer service linked to all the major banks in Australia and New Zealand.](https://www.polipayments.com/).",
          "x-supportedCountries": [
            {
              "code": "AU"
            },
            {
              "code": "NZ"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-poli_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "poli"
        },
        "sofort": {
          "description": "[SOFORT Banking is a real-time bank transfer payment method that buyers use to transfer funds directly to merchants from their bank accounts.](/https://www.klarna.com/sofort/).",
          "x-supportedCountries": [
            {
              "code": "AT"
            },
            {
              "code": "BE"
            },
            {
              "code": "DE"
            },
            {
              "code": "ES"
            },
            {
              "code": "IT"
            },
            {
              "code": "NL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-sofort_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "sofort"
        },
        "trustly": {
          "description": "[Trustly is a payment method that allows customers to shop and pay from their bank account.](/https://www.trustly.net/).",
          "x-supportedCountries": [
            {
              "code": "DE"
            },
            {
              "code": "DK"
            },
            {
              "code": "EE"
            },
            {
              "code": "ES"
            },
            {
              "code": "FI"
            },
            {
              "code": "GB"
            },
            {
              "code": "IT"
            },
            {
              "code": "MT"
            },
            {
              "code": "NL"
            },
            {
              "code": "NO"
            },
            {
              "code": "PL"
            },
            {
              "code": "SE"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-trustly_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "trustly"
        },
        "trustpay": {
          "description": "[TrustPay is a payment method that allows customers to shop and pay from their bank account.](/https://www.trustpay.eu/).",
          "x-supportedCountries": [
            {
              "code": "CZ"
            },
            {
              "code": "SK"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-trustpay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "trustpay"
        },
        "verkkopankki": {
          "description": "Verkkopankki(Finnish Online Banking) combines all Finnish bank links under one real-time bank transfer product.",
          "x-supportedCountries": [
            {
              "code": "FI"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-verkkopankki_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "verkkopankki"
        },
        "wechatpay": {
          "description": "[WeChat Pay allows buyers to pay using Quick Pay, QR Code, In-App Web-Based, or Native In-App Payments.](/https://pay.weixin.qq.com/index.php/public/wechatpay).",
          "x-supportedCountries": [
            {
              "code": "C2"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-wechatpay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "wechatpay"
        }
      },
      "x-publicDocsSchemaName": "payment_source"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-card.json": {
      "type": "object",
      "title": "Card",
      "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the card.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The card holder's name as it appears on the card.",
          "maxLength": 300
        },
        "number": {
          "type": "string",
          "description": "The primary account number (PAN) for the payment card.",
          "minLength": 13,
          "maxLength": 19
        },
        "expiry": {
          "description": "The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json"
        },
        "security_code": {
          "type": "string",
          "description": "The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID.",
          "pattern": "[0-9]{3,4}"
        },
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "card_type": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "billing_address": {
          "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_8759_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        },
        "authentication_results": {
          "type": "array",
          "description": "A list of authentication results.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-3ds_result.json"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "attributes": {
          "description": "Additional attributes associated with the use of this card.",
          "x-publicDocsSchemaName": "card_attributes",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_attributes.json"
        }
      },
      "required": [
        "number",
        "expiry"
      ],
      "x-publicDocsSchemaName": "card"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json": {
      "type": "string",
      "description": "The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
      "minLength": 7,
      "maxLength": 7,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-3ds_result.json": {
      "type": "object",
      "title": "The 3D Secure Authentication Result",
      "description": "Additional 3D Secure authentication data.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authentication_result_type.json"
        },
        {
          "properties": {
            "eci_flag": {
              "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-eci_flag.json"
            },
            "ucaf_indicator": {
              "description": "Universal Cardholder Authentication Field (UCAF) Indicator value provided by the issuer.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-ucaf_indicator.json"
            },
            "card_brand": {
              "description": "Card brand that the transaction was processed for authentication.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-3ds_card_brand.json"
            },
            "cavv": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "description": "This is the cardholder authentication value. The CAVV is unique to the cardholder and to the transaction that was authenticated."
            },
            "xid": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "description": "Transaction identifier resulting from authentication processing."
            },
            "enrolled": {
              "description": "Status of Authentication eligibility.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-enrolled.json"
            },
            "pares_status": {
              "description": "Transactions status result identifier. The outcome of the issuer's authentication.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-pares_status.json"
            },
            "merchant_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "description": "The merchant name that was sent in the authentication request."
            },
            "three_ds_version": {
              "type": "string",
              "minLength": 1,
              "maxLength": 10,
              "description": "The 3DS version that was used to process the transaction."
            },
            "directory_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction."
            },
            "authentication_type": {
              "description": "Indicates the type of authentication that will be used to challenge the card holder.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authentication_type.json"
            },
            "access_control_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the Access Control Server (ACS) to identify a single transaction."
            },
            "signature_verification_status": {
              "description": "Transaction Signature status identifier.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-signature_verification_status.json"
            },
            "paypal_acquiring_mid": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^[0-9A-Z]+$",
              "description": "The PayPal acquiring MID to be used for authorization."
            },
            "paypal_acquiring_bin": {
              "type": "string",
              "minLength": 1,
              "maxLength": 6,
              "pattern": "^[0-9]+$",
              "description": "The PayPal acquiring BIN to be used for authorization."
            },
            "cavv_algorithm": {
              "description": "Indicates the algorithm used to generate the CAVV value.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-cavv_algorithm.json"
            },
            "three_ds_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the 3DS Server to identify a single transaction."
            }
          }
        }
      ],
      "required": [
        "type"
      ],
      "x-publicDocsSchemaName": "3ds_result",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authentication_result_type.json": {
      "type": "object",
      "title": "Authentication Result Type",
      "description": "Indicates the form of authentication used on the financial instrument.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of authentication used on the financial instrument.",
          "x-enum": [
            {
              "value": "THREE_DS_AUTHENTICATION",
              "description": "The card was authenticated using 3D Secure (3DS) authentication scheme."
            }
          ]
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-eci_flag.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.",
      "x-enum": [
        {
          "value": "MASTERCARD_NON_3D_SECURE_TRANSACTION",
          "description": "Mastercard non-3-D Secure transaction."
        },
        {
          "value": "MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION",
          "description": "Mastercard attempted authentication transaction."
        },
        {
          "value": "MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION",
          "description": "Mastercard fully authenticated transaction."
        },
        {
          "value": "FULLY_AUTHENTICATED_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB fully authenticated transaction."
        },
        {
          "value": "ATTEMPTED_AUTHENTICATION_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB attempted authentication transaction."
        },
        {
          "value": "NON_3D_SECURE_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB non-3-D Secure transaction."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-ucaf_indicator.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Universal Cardholder Authentication Field (UCAF) Indicator value provided by the issuer.",
      "x-enum": [
        {
          "value": "NON_SECURECODE_TRANSACTION",
          "description": "Non-SecureCode transaction, bypassed by the merchant."
        },
        {
          "value": "MERCHANT_ONLY_SECURECODE_TRANSACTION",
          "description": "Merchant-Only SecureCode transaction."
        },
        {
          "value": "FULLY_AUTHENTICATED_SECURECODE",
          "description": "Fully authenticated SecureCode."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-3ds_card_brand.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Card brand that the transaction was processed for authentication.",
      "x-enum": [
        {
          "value": "AMERICAN_EXPRESS",
          "description": "Card Brand Amex."
        },
        {
          "value": "DISCOVER",
          "description": "Card Brand DISCOVER."
        },
        {
          "value": "JCB",
          "description": "Card Brand JCB."
        },
        {
          "value": "MAESTRO",
          "description": "Card Brand MAESTRO."
        },
        {
          "value": "MASTERCARD",
          "description": "Card Brand MASTERCARD."
        },
        {
          "value": "SOLO",
          "description": "Card Brand SOLO."
        },
        {
          "value": "VISA",
          "description": "Card Brand VISA."
        },
        {
          "value": "ELECTRON",
          "description": "Card Brand ELECTRON."
        },
        {
          "value": "ELO",
          "description": "Card Brand ELO."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-authentication_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Indicates the type of authentication that was used to challenge the card holder.",
      "x-enum": [
        {
          "value": "STATIC",
          "description": "Indicates fixed password."
        },
        {
          "value": "DYNAMIC",
          "description": "Indicates one-time password. Could be single-step or multi-step."
        },
        {
          "value": "OUT_OF_BAND",
          "description": "Indicates biometric over the phone."
        },
        {
          "value": "DECOUPLED",
          "description": "Indicates decoupled authentication."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-signature_verification_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[A-Z]+$",
      "description": "Transaction signature status identifier.",
      "x-enum": [
        {
          "value": "YES",
          "description": "Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted."
        },
        {
          "value": "NO",
          "description": "Indicates that the PARes could not be validated."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-cavv_algorithm.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "description": "Indicates the algorithm used to generate the CAVV/AAV value.",
      "x-enum": [
        {
          "value": "CVV_WITH_ATN",
          "description": "Refers to the Visa CAVV generation specification that includes a unique identifier built into the value."
        },
        {
          "value": "MASTERCARD_SPA_ALGORITHM",
          "description": "Refers to Secure Payment Algorithm used to generate Mastercard's Accountholder Authentication Value (AAV)."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-card_attributes.json": {
      "type": "object",
      "title": "Card Attributes",
      "description": "Additional attributes associated with the use of this card",
      "properties": {
        "customer": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-customer.json"
        },
        "vault": {
          "description": "Instruction to vault the card based on the specified strategy.",
          "allOf": [
            {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-vault_instruction_base.json"
            }
          ]
        },
        "verification": {
          "description": "Instruction to optionally verify the card based on the specified strategy",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_verification.json"
        }
      },
      "x-publicDocsSchemaName": "card_attributes",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-customer.json": {
      "type": "object",
      "title": "Customer information on merchant's or partner's system of records",
      "description": "The details about a customer in merchant's or partner's system of records.",
      "properties": {
        "id": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-merchant_partner_customer_id.json"
        }
      },
      "x-publicDocsSchemaName": "customer"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-merchant_partner_customer_id.json": {
      "type": "string",
      "description": "The unique ID for a customer in merchant's or partner's system of records.",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^[0-9a-zA-Z_-]+$",
      "x-publicDocsSchemaName": "merchant_partner_customer_id",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-vault_instruction_base.json": {
      "type": "object",
      "title": "Base vault Instruction parameters",
      "description": "Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.",
      "properties": {
        "confirm_payment_token": {
          "type": "string",
          "description": "Defines how and when the payment source gets vaulted.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "ON_ORDER_COMPLETION",
              "description": "Defines that the payer's payment-source should be vaulted only when at least one payment (authorization/capture) using that payment-source is successful."
            }
          ]
        }
      },
      "required": [
        "confirm_payment_token"
      ],
      "x-publicDocsSchemaName": "vault_instruction_base",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-card_verification.json": {
      "type": "object",
      "description": "The API caller can opt in to verify the card through PayPal offered verification services (e.g. Smart Dollar Auth, 3DS).",
      "properties": {
        "method": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "x-enum": [
            {
              "value": "3D_SECURE",
              "description": "The contingency surfaced as an additional security layer that helps prevent unauthorized card-not-present transactions and protects the merchant from exposure to fraud."
            },
            {
              "value": "AVS_CVV",
              "description": "Places a temporary hold on the card to ensure its validity. This process protects the merchant from exposure to fraud. This verification method will confirm that the address information or CVV included matches what the issuing bank has on file for the associated card, ensuring that only authorized card users are able to make purchases from you."
            }
          ],
          "x-publicDocsSchemaName": "card_verification"
        }
      },
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-token.json": {
      "type": "object",
      "title": "Token",
      "description": "The tokenized payment source to fund a payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the token.",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "description": "The tokenization method that generated the ID.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_-]+$",
          "x-enum": [
            {
              "value": "NONCE",
              "description": "A secure, one-time-use reference to a payment source, such as payment card or PayPal account.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYMENT_METHOD_TOKEN",
              "description": "The payment method token, which is a reference to a transactional payment source. Typically stored on the merchant's server.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "BILLING_AGREEMENT",
              "description": "The PayPal billing agreement ID. References an approved recurring payment for goods or services."
            },
            {
              "value": "FUNDING_OPTION_ID",
              "description": "The PayPal funding option ID. Represents a payment plan identifier computed based on buyer wallet, seller account and transaction currency.",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            {
              "value": "PAYPAL_TRANSACTION_ID",
              "description": "This input is primarily aimed at providing backward compatibility to approved merchants that have previously integrated with [DoReferenceTransaction](https://developer.paypal.com/docs/classic/api/merchant/DoReferenceTransaction-API-Operation-NVP/?mark=DoReferenceTransaction). The use is analogous to the use of [ReferenceID](https://developer.paypal.com/docs/classic/api/merchant/DoReferenceTransaction-API-Operation-NVP/?mark=REFERENCEID) field within the DoReferenceTransaction API. The value is typically a valid transaction ID from a previous purchase, such as a card charge using the DoDirectPayment API. Transaction IDs are valid for 4 years from the transaction date.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PNREF",
              "description": "This input is primarily aimed at providing backward compatibility to approved merchants that have previously integrated with [PayFlow SubmitReferenceTransactions](https://developer.paypal.com/docs/classic/payflow/integration-guide/submit-transactions/?mark=Reference%20Transactions#submit-reference-transactions---tokenization). The [PNREF](https://developer.paypal.com/docs/classic/payflow/integration-guide/transaction-responses/?mark=pnref#pnref) is a unique transaction identification number issued by PayPal. The `PNREF` is returned in a transaction response indicating that your transaction was received by PayPal. `PNREF` is valid for 15 months from the transaction date.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "AUTHORIZATION_ID",
              "description": "This id is the authorization id from previously successful authorization call.  It is used to authorize additional amount over the previously authorized amount stored in the systems, if the requested amount is higher.  In the case that authorization id is no longer valid (e.g. voided or used), it would return an error.  For expired authorization id, it would do a fresh authorization.",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          ]
        }
      },
      "required": [
        "id",
        "type"
      ],
      "x-publicDocsSchemaName": "token"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-bank.json": {
      "type": "object",
      "title": "Bank Source",
      "description": "The bank source used to fund the payment",
      "properties": {
        "ach_debit": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-ach_debit.json"
        }
      },
      "x-publicDocsSchemaName": "bank"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-ach_debit.json": {
      "type": "object",
      "title": "ACH bank payment object",
      "description": "ACH bank details required to fund the payment.",
      "properties": {
        "account_number": {
          "type": "string",
          "description": "The US bank account number from which the payment will be debited.",
          "pattern": "[0-9]{3,17}",
          "minLength": 3,
          "maxLength": 17
        },
        "routing_number": {
          "type": "string",
          "description": "The 9-digit ABA routing transit number for the bank at which the account is held.",
          "pattern": "[0-9]{9}",
          "minLength": 9,
          "maxLength": 9
        },
        "account_type": {
          "type": "string",
          "description": "Represents the type of the bank account.  If not provided, default is CHECKING.",
          "default": "CHECKING",
          "minLength": 1,
          "maxLength": 255,
          "x-enum": [
            {
              "value": "CHECKING",
              "description": "Bank account of type CHECKING."
            },
            {
              "value": "SAVINGS",
              "description": "Bank account of type SAVINGS."
            }
          ]
        },
        "account_holder_name": {
          "type": "string",
          "description": "Name of the person or business that owns the bank account.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "required": [
        "account_number",
        "routing_number",
        "account_holder_name"
      ],
      "x-publicDocsSchemaName": "ach_debit"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet.json": {
      "type": "object",
      "title": "PayPal Wallet",
      "description": "A resource that identies that a paypal wallet is used for payment.",
      "properties": {
        "payment_method_preference": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee_payment_method_preference.json"
        },
        "attributes": {
          "description": "Additional attributes associated with the use of this wallet.",
          "x-publicDocsSchemaName": "paypal_wallet_attributes",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet_attributes.json"
        }
      },
      "x-publicDocsSchemaName": "paypal_wallet",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payee_payment_method_preference.json": {
      "type": "string",
      "description": "The merchant-preferred payment methods.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "default": "UNRESTRICTED",
      "x-enum": [
        {
          "value": "UNRESTRICTED",
          "description": "Accepts any type of payment from the customer.",
          "default": true
        },
        {
          "value": "IMMEDIATE_PAYMENT_REQUIRED",
          "description": "Accepts only immediate payment from the customer. For example, credit card, PayPal balance, or instant ACH. Ensures that at the time of capture, the payment does not have the `pending` status."
        }
      ],
      "x-publicDocsSchemaName": "payee_payment_method_preference",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet_attributes.json": {
      "type": "object",
      "title": "PayPal wallet Attributes",
      "description": "Additional attributes associated with the use of this paypal wallet",
      "properties": {
        "customer": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-customer.json"
        },
        "vault": {
          "allOf": [
            {
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-vault_instruction_base.json"
            },
            {
              "$ref": "#/definitions/customized_x_unsupported_3578_MerchantsCommonComponentsSpecification-v1-schema-vault_paypal_wallet_base.json"
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "paypal_wallet_attributes",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-vault_paypal_wallet_base.json": {
      "type": "object",
      "title": "Vaulted PayPal Wallet Common Attributes",
      "description": "Resource consolidating common request and response attirbutes for vaulting PayPal Wallet.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description displayed to PayPal consumer on the approval flow for PayPal, as well as on the PayPal payment token management experience on PayPal.com.",
          "minLength": 1,
          "maxLength": 128
        },
        "product_label": {
          "type": "string",
          "description": "Merchant/Partner defined identifier uniquely identify merchant/partner's business and the usage of the PayPal payment token for the business. Please contact your PayPal Technical Account Manager to define the product_label for your business and how it can help your business. For details on “product_label” and different types of usages of a PayPal Payment Token, please refer to documentation. For a business with different type of usage of the payment method, a new product_label needs to be defined and a new PayPal Payment Token will be created. For including multiple businesses of same charge pattern, an existing product_label with the same charge pattern can be leveraged. Business can decide to use custom name for the product_label. If no product_label is specified, default policies will apply for PayPal payment method, irrespective of the nature of the business.",
          "minLength": 1,
          "maxLength": 25,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "shipping": {
          "description": "The shipping address for the Payer.",
          "$ref": "#/definitions/customized_x_unsupported_4353_MerchantsCommonComponentsSpecification-v1-schema-shipping_detail.json"
        },
        "usage_type": {
          "type": "string",
          "description": "The usage type associated with the PayPal payment token.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "MERCHANT",
              "description": "The PayPal Payment Token will be used for future transaction directly with a merchant."
            },
            {
              "value": "PLATFORM",
              "description": "The PayPal Payment Token will be used for future transaction on a platform. A platform is typically a marketplace or a channel that a payer can purchase goods and services from multiple merchants."
            }
          ]
        },
        "customer_type": {
          "type": "string",
          "description": "The customer type associated with the PayPal payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "default": "CONSUMER",
          "x-enum": [
            {
              "value": "CONSUMER",
              "description": "The customer vaulting the PayPal payment token is a consumer on the merchant / platform."
            },
            {
              "value": "BUSINESS",
              "description": "The customer vaulting the PayPal payment token is a business on merchant / platform."
            }
          ]
        },
        "permit_multiple_payment_tokens": {
          "type": "boolean",
          "description": "Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same PayPal account. This only applies to PayPal payment source.",
          "default": false
        }
      },
      "required": [
        "usage_type"
      ],
      "x-publicDocsSchemaName": "vault_paypal_wallet_base",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-alipay_request.json": {
      "type": "object",
      "title": "Alipay payment object",
      "description": "Information needed to pay using Alipay",
      "properties": {
        "name": {
          "description": "Name on the wallet.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "alipay_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-bancontact_request.json": {
      "type": "object",
      "title": "Bancontact payment object",
      "description": "Information needed to pay using Bancontact.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "bancontact_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-blik_request.json": {
      "type": "object",
      "title": "BLIK payment object",
      "description": "Information needed to pay using BLIK.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "blik_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-eps_request.json": {
      "type": "object",
      "title": "An eps payment object",
      "description": "Information needed to pay using eps.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "eps_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-giropay_request.json": {
      "type": "object",
      "title": "A giropay payment object",
      "description": "Information needed to pay using giropay.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "giropay_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-ideal_request.json": {
      "type": "object",
      "title": "iDEAL payment object",
      "description": "Information needed to pay using iDEAL.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "ideal_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-multibanco_request.json": {
      "type": "object",
      "title": "Multibanco payment object",
      "description": "Information needed to pay using Multibanco.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "multibanco_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-mybank_request.json": {
      "type": "object",
      "title": "MyBank payment object",
      "description": "Information needed to pay using MyBank.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "mybank_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payu_request.json": {
      "type": "object",
      "title": "PayU payment object",
      "description": "Information needed to pay using PayU.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        },
        "country_code": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "payu_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-p24_request.json": {
      "type": "object",
      "title": "P24 payment object",
      "description": "Information needed to pay using P24 (Przelewy24).",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "email",
        "country_code"
      ],
      "x-publicDocsSchemaName": "p24_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-poli_request.json": {
      "type": "object",
      "title": "POLi payment object",
      "description": "Information needed to pay using POLi.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "poli_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-sofort_request.json": {
      "type": "object",
      "title": "Sofort payment object",
      "description": "Information needed to pay using Sofort.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bic": {
          "description": "The bank identification code (BIC).",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bic.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "sofort_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-trustly_request.json": {
      "type": "object",
      "title": "Trustly payment object",
      "description": "Information needed to pay using Trustly.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "trustly_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-trustpay_request.json": {
      "type": "object",
      "title": "TrustPay payment object",
      "description": "Information needed to pay using TrustPay.",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "trustpay_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-verkkopankki_request.json": {
      "type": "object",
      "title": "Verkkopankki (Finnish Online Banking) payment object",
      "description": "Information needed to pay using Verkkopankki (Finnish Online Banking).",
      "properties": {
        "name": {
          "description": "The name of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "email": {
          "description": "The email address of the account holder associated with this payment method.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "bank_id": {
          "description": "The numeric bank identifier of the account holder associated with this payment method. Valid bank ids at the moment are 50 (Aktia), 3 (Danske Bank), 6 (Handelsbanken), 1 Nordea, 61 (Oma Säästöpankki), 2 (Osuuspankki), 51 (POP Pankki), (10) S-Pankki, (52) Säästöpankki, (5) Ålandsbanken",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "name",
        "email",
        "country_code"
      ],
      "x-publicDocsSchemaName": "verkkopankki_request"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-wechatpay_request.json": {
      "type": "object",
      "title": "WeChat Pay payment object",
      "description": "Information needed to pay using WeChat Pay.",
      "properties": {
        "name": {
          "description": "Name on the Wallet.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-full_name.json",
          "x-publicDocsSchemaName": "name"
        },
        "country_code": {
          "description": "The two-character ISO 3166-1 country code.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "wechatpay_request"
    },
    "order_application_context.json": {
      "type": "object",
      "title": "Application Context",
      "description": "Customizes the payer experience during the approval process for the payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "brand_name": {
          "type": "string",
          "description": "The label that overrides the business name in the PayPal account on the PayPal site.",
          "maxLength": 127
        },
        "locale": {
          "description": "The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json"
        },
        "landing_page": {
          "type": "string",
          "description": "The type of landing page to show on the PayPal site for customer checkout.",
          "default": "NO_PREFERENCE",
          "x-enum": [
            {
              "value": "LOGIN",
              "description": "When the customer clicks <strong>PayPal Checkout</strong>, the customer is redirected to a page to log in to PayPal and approve the payment."
            },
            {
              "value": "BILLING",
              "description": "When the customer clicks <strong>PayPal Checkout</strong>, the customer is redirected to a page to enter credit or debit card and other relevant billing information required to complete the purchase."
            },
            {
              "value": "NO_PREFERENCE",
              "description": "When the customer clicks <strong>PayPal Checkout</strong>, the customer is redirected to either a page to log in to PayPal and approve the payment or to a page to enter credit or debit card and other relevant billing information required to complete the purchase, depending on their previous interaction with PayPal."
            }
          ]
        },
        "shipping_preference": {
          "type": "string",
          "description": "The shipping preference:<ul><li>Displays the shipping address to the customer.</li><li>Enables the customer to choose an address on the PayPal site.</li><li>Restricts the customer from changing the address during the payment-approval process.</li></ul>",
          "default": "GET_FROM_FILE",
          "x-enum": [
            {
              "value": "GET_FROM_FILE",
              "description": "Use the customer-provided shipping address on the PayPal site.",
              "default": true
            },
            {
              "value": "NO_SHIPPING",
              "description": "Redact the shipping address from the PayPal site. Recommended for digital goods."
            },
            {
              "value": "SET_PROVIDED_ADDRESS",
              "description": "Use the merchant-provided address. The customer cannot change this address on the PayPal site."
            }
          ]
        },
        "user_action": {
          "type": "string",
          "description": "Configures a <strong>Continue</strong> or <strong>Pay Now</strong> checkout flow.",
          "default": "CONTINUE",
          "x-enum": [
            {
              "value": "CONTINUE",
              "description": "After you redirect the customer to the PayPal payment page, a <strong>Continue</strong> button appears. Use this option when the final amount is not known when the checkout flow is initiated and you want to redirect the customer to the merchant page without processing the payment.",
              "default": true
            },
            {
              "value": "PAY_NOW",
              "description": "After you redirect the customer to the PayPal payment page, a <strong>Pay Now</strong> button appears. Use this option when the final amount is known when the checkout is initiated and you want to process the payment immediately when the customer clicks <strong>Pay Now</strong>."
            }
          ]
        },
        "payment_method": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_method.json"
        },
        "return_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer approves the payment."
        },
        "cancel_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer cancels the payment."
        },
        "payment_token": {
          "type": "string",
          "maxLength": 19,
          "description": "The internal client-generated token.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "client_configuration": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-client_configuration.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "vault": {
          "type": "boolean",
          "description": "Signals to vault the payment source upon successful validation.",
          "default": false,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "preferred_payment_source": {
          "description": "The preferred payment source for the payer at the moment is supported only for PayPal Billing Agreements. If this information is provided during the corresponding PayPal Checkout, experience will have this payment source pre-selected for the payer.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/customized_x_unsupported_565_MerchantsCommonComponentsSpecification-v1-schema-payment_source.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json": {
      "type": "string",
      "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/).",
      "format": "ppaas_common_language_v3",
      "maxLength": 10,
      "minLength": 2,
      "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-payment_method.json": {
      "type": "object",
      "description": "The customer and merchant payment preferences.",
      "title": "Payment Method",
      "properties": {
        "payer_selected": {
          "type": "string",
          "description": "The customer-selected payment method on the merchant site.",
          "minLength": 1,
          "pattern": "^[0-9A-Z_]+$",
          "default": "PAYPAL",
          "x-enum": [
            {
              "value": "PAYPAL_CREDIT",
              "description": "PayPal Credit.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYPAL",
              "description": "PayPal.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ]
        },
        "payee_preferred": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payee_payment_method_preference.json"
        },
        "standard_entry_class_code": {
          "type": "string",
          "description": "NACHA (the regulatory body governing the ACH network) requires that API callers (merchants, partners) obtain the consumer’s explicit authorization before initiating a transaction. To stay compliant, you’ll need to make sure that you retain a compliant authorization for each transaction that you originate to the ACH Network using this API. ACH transactions are categorized (using SEC codes) by how you capture authorization from the Receiver (the person whose bank account is being debited or credited). PayPal supports the following SEC codes.",
          "default": "WEB",
          "minLength": 3,
          "maxLength": 255,
          "x-enum": [
            {
              "value": "TEL",
              "description": "The API caller (merchant/partner) accepts authorization and payment information from a consumer over the telephone."
            },
            {
              "value": "WEB",
              "description": "The API caller (merchant/partner) accepts Debit transactions from a consumer on their website."
            },
            {
              "value": "CCD",
              "description": "Cash concentration and disbursement for corporate debit transaction. Used to disburse or consolidate funds. Entries are usually Optional high-dollar, low-volume, and time-critical. (e.g. intra-company transfers or invoice payments to suppliers)."
            },
            {
              "value": "PPD",
              "description": "Prearranged payment and deposit entries. Used for debit payments authorized by a consumer account holder, and usually initiated by a company. These are usually recurring debits (such as insurance premiums)."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "payment_method"
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-client_configuration.json": {
      "type": "object",
      "title": "Client configuration",
      "description": "Client configuration that captures the product flows and specific experiences that a user completes a paypal transaction.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "product_code": {
          "type": "string",
          "description": "Types of the payment acceptance solution.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "EXPRESS_CHECKOUT",
              "description": "The payment acceptance solution is express checkout."
            },
            {
              "value": "WEBSITE_PAYMENTS_STANDARD",
              "description": "The payment acceptance solution is website payment standard."
            },
            {
              "value": "DIRECT_CREDIT_CARD",
              "description": "The payment acceptance solution is credit card."
            },
            {
              "value": "BILLING_AGREEMENTS",
              "description": "The payment acceptance solution is a billing agreement."
            },
            {
              "value": "BILLING_SUBSCRIPTIONS",
              "description": "Billing plan and subcription solution"
            },
            {
              "value": "PAYOUTS",
              "description": "MassPay/Payouts solution"
            },
            {
              "value": "AUTOWITHDRAWAL",
              "description": "Automatic withdrawal initiated to meet a regulatory compliance policy."
            },
            {
              "value": "VAULT",
              "description": "Paypal Vault solution."
            },
            {
              "value": "INVOICING",
              "description": "The product code representing invoice payments."
            },
            {
              "value": "PAYPAL_IDENTITY_LINKING",
              "description": "Paypal Connect payments solution."
            }
          ]
        },
        "product_feature": {
          "type": "string",
          "description": "A feature capturing variant of a generic product code, when applicable.",
          "default": "NONE",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "NONE",
              "description": "The default value for most payment products."
            },
            {
              "value": "ORDERS",
              "description": "The payment product featuring order being persisted."
            },
            {
              "value": "BILLING_AGREEMENTS",
              "description": "The payment product features a billing agreement payment."
            }
          ]
        },
        "api": {
          "type": "string",
          "description": "The primary api used to trigger the paypal transaction.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAYMENTS_V1",
              "description": "Payments V1 API."
            },
            {
              "value": "ORDERS_V1",
              "description": "Orders V1 API."
            },
            {
              "value": "ORDERS_V2",
              "description": "Orders V2 API."
            },
            {
              "value": "LEGACY_CHECKOUT_API",
              "description": "Paypal legacy checkout API."
            },
            {
              "value": "BILLING_V1",
              "description": "Billing V1 API"
            },
            {
              "value": "VAULT_V2",
              "description": "VAULT V2 API"
            },
            {
              "value": "IDENTITY",
              "description": "IDENTITY API"
            },
            {
              "value": "INVOICING_V1",
              "description": "INVOICING V1 API"
            },
            {
              "value": "INVOICING_V2",
              "description": "INVOICING V2 API"
            },
            {
              "value": "LEGACY_BILLING_API",
              "description": "Paypal legacy Billing API."
            },
            {
              "value": "SUBSCRIPTIONS_V1",
              "description": "Subscriptions V1 API."
            },
            {
              "value": "RECURRING_PAYMENTS_V1",
              "description": "Recurring Payments REST API."
            },
            {
              "value": "LEGACY_RECURRING_PAYMENTS",
              "description": "Legacy Recurring Payments NVP/SOAP API"
            },
            {
              "value": "NONE",
              "description": "The transaction / experience does not involve API interaction"
            }
          ]
        },
        "integration_artifact": {
          "type": "string",
          "description": "Identifier for the software that paypal has provided to enable the integration.",
          "default": "NONE",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAYPAL_JS_SDK",
              "description": "PayPal's JavaScript SDK, for checkout. This includes PayPal branded payments ( Paypal wallet, Venmo, PayPal Credit), Alternative payment methods and Hosted card processing capabilities"
            },
            {
              "value": "JS_V3",
              "description": "Paypal's client side javascript, Version 3, for checkout."
            },
            {
              "value": "JS_V4",
              "description": "Paypal's client side javascript, Version 4, for checkout."
            },
            {
              "value": "BRAINTREE_VZERO",
              "description": "Use this when Merchant has integrated with an old version of BRAINTREE_VZERO that does not ingest JS_V3 or V4."
            },
            {
              "value": "NATIVE_SDK",
              "description": "Use this when Merchant has integrated with PayPal's Native Checkout SDK."
            },
            {
              "value": "NONE",
              "description": "The transaction integration type is not defined."
            }
          ]
        },
        "experience": {
          "description": "The experience that a user completes a paypal transaction.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-product_experience.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-product_experience.json": {
      "type": "object",
      "title": "Product Experience",
      "description": "The product experiences that a user completes on a PayPal transaction.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "user_experience_flow": {
          "type": "string",
          "description": "The user experience flow for the PayPal transaction.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "FULL_PAGE_REDIRECT",
              "description": "The consumer's browser does a 302 redirect to <a href=\"https://www.paypal.com/us/home\">paypal.com</a> from the third-party site."
            },
            {
              "value": "INCONTEXT",
              "description": "The buyer interacts with <a href=\"https://www.paypal.com/us/home\">paypal.com</a> in an iframe or pop up window, which is a modal that is outside or hovers over the existing merchant experience."
            },
            {
              "value": "INLINE",
              "description": "The buyer interacts with <a href=\"https://www.paypal.com/us/home\">paypal.com</a> through an iframe on the merchant site, and is in line with the existing merchant experience."
            },
            {
              "value": "NATIVE",
              "description": "The buyer interacts with PayPal through PayPal's native SDK."
            },
            {
              "value": "FULL_PAGE",
              "description": "The buyer interacts with PayPal by opening PayPal.com directly on browser"
            }
          ]
        },
        "entry_point": {
          "type": "string",
          "description": "The payment method user chose to start the payment process.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAY_WITH_VENMO",
              "description": "The transaction is initiated from Venmo."
            },
            {
              "value": "PAY_WITH_CARD",
              "description": "The transaction is initiated from a credit card."
            },
            {
              "value": "PAY_WITH_PAYPAL",
              "description": "The transaction is initiated from PayPal."
            },
            {
              "value": "PAY_WITH_PAYPAL_CREDIT",
              "description": "The transaction is initiated from PayPal credit."
            },
            {
              "value": "PAY_WITH_SEPA",
              "description": "The transaction is initiated from Pay With SEPA."
            },
            {
              "value": "PAY_WITH_ALTPAY_ALIPAY",
              "description": "The transaction is initiated from Alternative Payment AliPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_BANCONTACT",
              "description": "The transaction is initiated from Alternative Payment Bancontact."
            },
            {
              "value": "PAY_WITH_ALTPAY_BOLETO",
              "description": "The transaction is initiated from Alternative Payment Boleto."
            },
            {
              "value": "PAY_WITH_ALTPAY_EPS",
              "description": "The transaction is initiated from Alternative Payment EPS."
            },
            {
              "value": "PAY_WITH_ALTPAY_GIROPAY",
              "description": "The transaction is initiated from Alternative Payment Giropay."
            },
            {
              "value": "PAY_WITH_ALTPAY_IDEAL",
              "description": "The transaction is initiated from Alternative Payment iDeal."
            },
            {
              "value": "PAY_WITH_ALTPAY_MYBANK",
              "description": "The transaction is initiated from Alternative Payment MyBank."
            },
            {
              "value": "PAY_WITH_ALTPAY_OXXO",
              "description": "The transaction is initiated from Alternative Payment OXXO."
            },
            {
              "value": "PAY_WITH_ALTPAY_P24",
              "description": "The transaction is initiated from Alternative Payment P24."
            },
            {
              "value": "PAY_WITH_ALTPAY_SOFORT",
              "description": "The transaction is initiated from Alternative Payment Sofort."
            },
            {
              "value": "PAY_WITH_ALTPAY_WECHATPAY",
              "description": "The transaction is initiated from Alternative Payment WeChatPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_ZIMPLER",
              "description": "The transaction is initiated from Alternative Payment Zimpler."
            },
            {
              "value": "PAYPAL_SITE",
              "description": "The action is initiated on PayPal.com website"
            },
            {
              "value": "UNKNOWN",
              "description": "The transaction source is unknown."
            }
          ]
        },
        "payment_method": {
          "type": "string",
          "description": "Payment method used to complete the transaction. This can sometimes be different than the entry point if user changed their mind during the checkout flow.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAY_WITH_VENMO",
              "description": "The transaction is completed through Venmo."
            },
            {
              "value": "PAY_WITH_CARD",
              "description": "The transaction is completed through a credit card."
            },
            {
              "value": "PAY_WITH_PAYPAL",
              "description": "The transaction is completed through PayPal."
            },
            {
              "value": "PAY_WITH_PAYPAL_CREDIT",
              "description": "The transaction is completed through PayPal credit."
            },
            {
              "value": "PAY_WITH_SEPA",
              "description": "The transaction is completed through Pay With SEPA."
            },
            {
              "value": "PAY_WITH_ALTPAY_ALIPAY",
              "description": "The transaction is completed through Alternative Payment AliPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_BANCONTACT",
              "description": "The transaction is completed through Alternative Payment Bancontact."
            },
            {
              "value": "PAY_WITH_ALTPAY_BOLETO",
              "description": "The transaction is completed through Alternative Payment Boleto."
            },
            {
              "value": "PAY_WITH_ALTPAY_EPS",
              "description": "The transaction is completed through Alternative Payment EPS."
            },
            {
              "value": "PAY_WITH_ALTPAY_GIROPAY",
              "description": "The transaction is completed through Alternative Payment Giropay."
            },
            {
              "value": "PAY_WITH_ALTPAY_IDEAL",
              "description": "The transaction is completed through Alternative Payment iDeal."
            },
            {
              "value": "PAY_WITH_ALTPAY_MYBANK",
              "description": "The transaction is completed through Alternative Payment MyBank."
            },
            {
              "value": "PAY_WITH_ALTPAY_OXXO",
              "description": "The transaction is completed through Alternative Payment OXXO."
            },
            {
              "value": "PAY_WITH_ALTPAY_P24",
              "description": "The transaction is completed through Alternative Payment P24."
            },
            {
              "value": "PAY_WITH_ALTPAY_SOFORT",
              "description": "The transaction is completed through Alternative Payment Sofort."
            },
            {
              "value": "PAY_WITH_ALTPAY_WECHATPAY",
              "description": "The transaction is completed through Alternative Payment WeChatPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_ZIMPLER",
              "description": "The transaction is completed through Alternative Payment Zimpler."
            },
            {
              "value": "UNKNOWN",
              "description": "The transaction payment method is unknown."
            }
          ]
        },
        "channel": {
          "type": "string",
          "description": "The payment flow channel type.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "WEB",
              "description": "A browser on a PC."
            },
            {
              "value": "MOBILE_WEB",
              "description": "A browser on a mobile device."
            },
            {
              "value": "MOBILE_APP",
              "description": "A native app in a mobile device."
            },
            {
              "value": "BATCH",
              "description": "A batch invocation"
            }
          ]
        },
        "product_flow": {
          "type": "string",
          "description": "The product flow type.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "CLASSIC",
              "description": "A legacy checkout API flow."
            },
            {
              "value": "HERMES",
              "description": "A web application handles the user's checkout interaction."
            },
            {
              "value": "PROX",
              "description": "An eBay application handles the user's PayPal checkout experience."
            },
            {
              "value": "SMART_PAYMENT_BUTTONS",
              "description": "A web application handles the user's checkout interaction."
            },
            {
              "value": "BUYER_APPROVAL_BILLING_AGREEMENT_CREATE",
              "description": "A buyer signing up for a billing agreement"
            },
            {
              "value": "CONSUMER_EXP_BILLING_AGREEMENT_MODIFY",
              "description": "A billing agreement modification flow initiated by consumer on paypal.com"
            },
            {
              "value": "ONE_TIME_PAYMENT_USING_BILLING_AGREEMENT",
              "description": "A flow allowing consumer to change funding for a transaction, while buyer is present for the transaction"
            },
            {
              "value": "BUYER_APPROVAL_BILLING_AGREEMENT_WITH_PURCHASE",
              "description": "A purchase flow which buyer also approves creation of a billing agreement"
            },
            {
              "value": "BUYER_APPROVAL_SUBSCRIPTIONS",
              "description": "A buyer signing up for a Subscription."
            },
            {
              "value": "CONSUMER_EXP_SUBSCRIPTIONS_MODIFY",
              "description": "A subscription modification flow intiated by consumer on paypal.com."
            },
            {
              "value": "BUYER_APPROVAL_SUBSCRIPTIONS_REVISE",
              "description": "A subscription modification flow intiated by consumer on merchant site."
            },
            {
              "value": "BUYER_APPROVAL_SUBSCRIPTIONS_PRICING_CHANGE",
              "description": "A buyer consenting changes made to a plan of the subscription"
            },
            {
              "value": "BUYER_INSTRUMENT_AUTHENTICATION_BILLING_AGREEMENT",
              "description": "Additional factor authentication flow for Billing Agreements."
            },
            {
              "value": "NEGATIVE_BALANCE_COLLECTION",
              "description": "Collection flow with the system initiating payments to resolve negative balance on sink accounts."
            }
          ]
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json": {
      "type": "array",
      "title": "Patch Request",
      "description": "An array of JSON patch objects to apply partial updates to resources.",
      "items": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch.json",
        "x-publicDocsSchemaName": "patch"
      },
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch.json": {
      "type": "object",
      "title": "Patch",
      "description": "The JSON patch object to apply partial updates to resources.",
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation.",
          "x-enum": [
            {
              "value": "add",
              "description": "Depending on the target location reference, completes one of these functions:<ul><li><strong>The target location is an array index</strong>. Inserts a new value into the array at the specified index.</li><li><strong>The target location is an object parameter that does not already exist</strong>. Adds a new parameter to the object.</li><li><strong>The target location is an object parameter that does exist</strong>. Replaces that parameter's value.</li></ul>The <code>value</code> parameter defines the value to add. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.1\">4.1. add</a>."
            },
            {
              "value": "remove",
              "description": "Removes the value at the target location. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.2\">4.2. remove</a>."
            },
            {
              "value": "replace",
              "description": "Replaces the value at the target location with a new value. The operation object must contain a <code>value</code> parameter that defines the replacement value. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.3\">4.3. replace</a>."
            },
            {
              "value": "move",
              "description": "Removes the value at a specified location and adds it to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to move the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.4\">4.4. move</a>."
            },
            {
              "value": "copy",
              "description": "Copies the value at a specified location to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to copy the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.5\">4.5. copy</a>."
            },
            {
              "value": "test",
              "description": "Tests that a value at the target location is equal to a specified value. The operation object must contain a <code>value</code> parameter that defines the value to compare to the target location's value. For the operation to succeed, the target location must be equal to the <code>value</code> value. For test, <code>equal</code> indicates that the value at the target location and the value that <code>value</code> defines are of the same JSON type. The data type of the value determines how equality is defined:<table><thead align=\"left\"><tr><th>Type</th><th>Considered equal if both values</th></tr></thead><tbody align=\"left\"><tr><td><strong>strings</strong></td><td>Contain the same number of Unicode characters and their code points are byte-by-byte equal.</td></tr><tr><td><strong>numbers</strong></td><td>Are numerically equal.</td></tr><tr><td><strong>arrays</strong></td><td>Contain the same number of values, and each value is equal to the value at the corresponding position in the other array, by using these type-specific rules.</td></tr><tr><td><strong>objects</strong></td><td>Contain the same number of parameters, and each parameter is equal to a parameter in the other object, by comparing their keys (as strings) and their values (by using these type-specific rules).</td></tr><tr><td><strong>literals (<code>false</code>, <code>true</code>, and <code>null</code>)</strong></td><td>Are the same. The comparison is a logical comparison. For example, whitespace between the parameter values of an array is not significant. Also, ordering of the serialization of object parameters is not significant.</td></tr></tbody></table>For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.6\">4.6. test</a>."
            }
          ]
        },
        "path": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location at which to complete the operation."
        },
        "value": {
          "type": [
            "number",
            "integer",
            "string",
            "boolean",
            "null",
            "array",
            "object"
          ],
          "title": "Patch Value",
          "description": "The value to apply. The <code>remove</code> operation does not require a value."
        },
        "from": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation."
        }
      },
      "required": [
        "op"
      ]
    },
    "order_validate_request.json": {
      "type": "object",
      "title": "Order Action Request",
      "description": "Completes an action for an order.",
      "properties": {
        "payment_source": {
          "x-publicDocsSchemaName": "payment_source",
          "$ref": "#/definitions/extended_payment_source.json"
        },
        "application_context": {
          "x-publicDocsSchemaName": "application_context",
          "$ref": "#/definitions/order_validate_application_context.json"
        }
      },
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "extended_payment_source.json": {
      "type": "object",
      "title": "Payment Source With Additional Authentication Challenges",
      "description": "A payment source that has additional authentication challenges.",
      "allOf": [
        {
          "description": "The source of payment for the order, which can be a token or a card. Use this object only if you have not redirected the user after order creation to approve the payment. In such cases, the user-selected payment method in the PayPal flow is implicitly used.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_source.json"
        },
        {
          "properties": {
            "contingencies": {
              "type": "array",
              "description": "An array of contingencies.",
              "x-publicDocsSchemaName": "contingencies",
              "x-deprecated": {
                "since_version": "2.1"
              },
              "items": {
                "x-publicDocsSchemaName": "contingency",
                "$ref": "#/definitions/contingency.json"
              }
            }
          }
        }
      ],
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "x-publicDocsSchemaName": "payment_source",
      "properties": {}
    },
    "contingency.json": {
      "type": "string",
      "title": "Contingency",
      "description": "An action to be taken on a payment method to validate it.",
      "x-enum": [
        {
          "value": "3D_SECURE",
          "description": "When specified, 3D Secure contingency will be triggered on 3DS enabled cards, if required."
        }
      ],
      "properties": {}
    },
    "order_validate_application_context.json": {
      "type": "object",
      "title": "Application Context",
      "description": "Customizes the payer experience during the approval process for the payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "vault": {
          "type": "boolean",
          "description": "Signals to vault the payment source upon successful validation. The payment source is vaulted upon successful capture when INTENT=SALE and authorization when INTENT=AUTHORIZE.",
          "default": false,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      }
    },
    "order_authorize_request.json": {
      "type": "object",
      "title": "Authorize Request",
      "description": "The authorization of an order request.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "payment_source": {
          "description": "The source of payment for the order, which can be a token or a card. Use this object only if you have not redirected the user after order creation to approve the payment. In such cases, the user-selected payment method in the PayPal flow is implicitly used.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_source.json"
        },
        "reference_id": {
          "type": "string",
          "description": "The API caller-provided external ID for the purchase unit. Required for multiple purchase units.",
          "maxLength": 256,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "amount": {
          "description": "The amount to authorize.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        }
      }
    },
    "order_capture_request.json": {
      "type": "object",
      "title": "Order Capture Request",
      "description": "Completes an capture payment for an order.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "payment_source": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_source.json"
        }
      }
    },
    "model-payment_context_data.json": {
      "title": "Payment Context",
      "description": "Payment context data required for processing payments for an order.",
      "type": "object",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "intent": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-checkout_payment_intent.json"
        },
        "application_context": {
          "description": "Customization data for the payer experience during payment approval process.",
          "$ref": "#/definitions/order_application_context.json"
        },
        "facilitators": {
          "description": "List of facilitators involved in the payment[s].",
          "type": "array",
          "maxItems": 10,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-facilitator.json"
          }
        },
        "payment_units": {
          "description": "List of payment contract data.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-payment_unit.json"
          }
        }
      }
    },
    "model-facilitator.json": {
      "title": "Facilitator",
      "description": "Facilitator involved in the Payment. Usually the API caller. Example: AliExpress, facebook, eBay.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/model-participant.json"
        },
        {
          "properties": {
            "type": {
              "$ref": "#/definitions/model-enums-facilitator_type.json"
            },
            "client_id": {
              "description": "OAuth 2.0 client_id of the facilitator app.",
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            },
            "integration_identifier": {
              "description": "A String Integration Identifier to identify a partner in the ecosystem.",
              "type": "string",
              "maxLength": 127,
              "minLength": 1
            },
            "segments": {
              "description": "List of (business)segments the actor operates in.",
              "type": "array",
              "maxItems": 50,
              "minItems": 1,
              "items": {
                "description": "Segments like MARKETPLACE, SHOPPING_CART, CROWDFUNDING etc.",
                "type": "string",
                "maxLength": 127,
                "minLength": 1
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "model-participant.json": {
      "title": "Participant",
      "description": "Participant in a payment activity, one of person or business must be provided.",
      "allOf": [
        {
          "$ref": "#/definitions/model-account.json"
        },
        {
          "properties": {
            "person": {
              "$ref": "#/definitions/model-person.json"
            },
            "business": {
              "$ref": "#/definitions/model-business.json"
            }
          }
        }
      ],
      "properties": {}
    },
    "model-account.json": {
      "title": "Account",
      "description": "Encapsulates the properties of user account.",
      "type": "object",
      "properties": {
        "account_number": {
          "description": "Unique account number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "account_id": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-account_id.json"
        },
        "tier": {
          "description": "The classification of the PayPal account.",
          "$ref": "#/definitions/CustomerCommonComponentsSpecification-v1-schema-account_model-account_tier.json"
        },
        "registration_type": {
          "type": "string",
          "description": "The registration_type fields represents how the account was created. Currently supported values are FULL, GUEST, ANONYMOUS. For more information about the meaning of each registration type, refer to the UserGuide.",
          "pattern": "^[A-Z_]+$",
          "maxLength": 255,
          "minLength": 1
        },
        "legal_country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-country_code.json"
        },
        "account_tags": {
          "description": "Array of tags stored for the account in User domain by other clients Eg: YOUTH_ACCOUNT, RESTRICTED, WAX_USER, MASSPAY_ENABLED etc.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "description": "Account tag in User domain by other clients Eg: YOUTH_ACCOUNT, RESTRICTED, WAX_USER, MASSPAY_ENABLED etc.",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "status": {
          "description": "Status of account like OPEN, or CLOSED. For paypal accounts, the status is defined by User domain.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "pricing_category": {
          "description": "Pricing category for the account as defined by PalPal pricing.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "legal_entity": {
          "description": "The account's legal PayPal entity Eg: INC, EUROPE, CHINA etc. For paypal accounts, it is defined by User domain.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "time_created": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_time.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-account_id.json": {
      "type": "string",
      "description": "The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.",
      "format": "ppaas_payer_id_v3",
      "minLength": 13,
      "maxLength": 13,
      "pattern": "^[2-9A-HJ-NP-Z]{13}$",
      "properties": {}
    },
    "CustomerCommonComponentsSpecification-v1-schema-account_model-account_tier.json": {
      "description": "Paypal account type.",
      "title": "Account type",
      "type": "string",
      "pattern": "^[0-9A-Z_]+$",
      "minLength": 1,
      "maxLength": 100,
      "x-enum": [
        {
          "value": "BUSINESS",
          "description": "PayPal Business account."
        },
        {
          "value": "PERSONAL",
          "description": "PayPal personal account."
        },
        {
          "value": "PREMIER",
          "description": "PayPal Premier account."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-country_code.json": {
      "type": "string",
      "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
      "format": "ppaas_common_country_code_v2",
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^([A-Z]{2}|C2)$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_time.json": {
      "type": "string",
      "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
      "format": "ppaas_date_time_v3",
      "minLength": 20,
      "maxLength": 64,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
      "properties": {}
    },
    "model-person.json": {
      "title": "Person",
      "description": "Person information.",
      "allOf": [
        {
          "$ref": "#/definitions/model-party.json"
        },
        {
          "properties": {
            "names": {
              "description": "Names of person.",
              "type": "array",
              "maxItems": 10,
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-name.json"
              }
            },
            "citizenship": {
              "description": "The two character iso country code for where the legal citizenship of party.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-country_code.json"
            },
            "birth_date": {
              "description": "Person's date of birth.",
              "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_no_time.json"
            },
            "identifications": {
              "description": "Identity documents for the entity like passport number.",
              "type": "array",
              "maxItems": 10,
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-identity_document.json"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "model-party.json": {
      "title": "Party",
      "description": "The properties of a party.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for a party.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "external_id": {
          "description": "External identifier for a party, it could be venmo id, facebook email etc.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "primary": {
          "description": "Indicates if the party is primary Party.",
          "type": "boolean"
        },
        "primary_email": {
          "description": "The primary email address of the party.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-email_address.json"
        },
        "emails": {
          "description": "Email addresses.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-email_address.json"
          }
        },
        "phones": {
          "description": "Details of party's phone numbers.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-phone_info.json"
          }
        },
        "addresses": {
          "description": "Details of party's addresses.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-address_with_confirmation.json"
          }
        },
        "create_time": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_time.json"
        },
        "update_time": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_time.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-email_address.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "ppaas_common_email_address_v2",
      "minLength": 3,
      "maxLength": 254,
      "pattern": "^.+@[^\"\\-].+$",
      "properties": {}
    },
    "model-phone_info.json": {
      "title": "Phone Info",
      "description": "Phone information.",
      "type": "object",
      "properties": {
        "phone_number": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-phone.json"
        },
        "phone_type": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-phone_type.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "country_code": {
          "type": "string",
          "x-publicDocsSchemaName": "country_calling_code",
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 3,
          "pattern": "^[0-9]{1,3}?$"
        },
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        },
        "extension_number": {
          "type": "string",
          "description": "The extension number.",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[0-9]{1,15}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-phone_type.json": {
      "type": "string",
      "title": "Phone Type",
      "description": "The phone type.",
      "x-enum": [
        {
          "value": "FAX",
          "description": "A fax machine."
        },
        {
          "value": "HOME",
          "description": "A home phone."
        },
        {
          "value": "MOBILE",
          "description": "A mobile phone."
        },
        {
          "value": "OTHER",
          "description": "Other."
        },
        {
          "value": "PAGER",
          "description": "A pager."
        },
        {
          "value": "WORK",
          "description": "A work phone."
        }
      ],
      "properties": {}
    },
    "model-address_with_confirmation.json": {
      "title": "Address with confirmation status.",
      "description": "Address and confirmation details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-address_name.json"
        },
        {
          "properties": {
            "id": {
              "description": "Unique address identifier.",
              "type": "string",
              "maxLength": 30,
              "minLength": 1
            },
            "confirmation_status": {
              "description": "Address confirmation status like NONE, PENDING, CONFIRMED, FAILED.",
              "type": "string",
              "maxLength": 127,
              "minLength": 1
            },
            "confirmation_authority": {
              "description": "What 3rd party or process has determined the current confirmation_status.",
              "type": "string",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-address_name.json": {
      "type": "object",
      "title": "Address with name",
      "description": "The name and address, typically used for billing and shipping purposes.",
      "allOf": [
        {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-address_portable.json"
        },
        {
          "properties": {
            "addressee": {
              "description": "The name on the address, for example,  Mr J. Smith.",
              "type": "string",
              "minLength": 1,
              "maxLength": 200
            }
          }
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "maxLength": 100
        },
        "admin_area_4": {
          "type": "string",
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
          "maxLength": 100
        },
        "admin_area_3": {
          "type": "string",
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
          "maxLength": 100
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-country_code.json"
        },
        "address_details": {
          "type": "object",
          "title": "Address Details",
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "properties": {
            "street_number": {
              "type": "string",
              "description": "The street number.",
              "maxLength": 100
            },
            "street_name": {
              "type": "string",
              "description": "The street name. Just `Drury` in `Drury Lane`.",
              "maxLength": 100
            },
            "street_type": {
              "type": "string",
              "description": "The street type. For example, avenue, boulevard, road, or expressway.",
              "maxLength": 100
            },
            "delivery_service": {
              "type": "string",
              "description": "The delivery service. Post office box, bag number, or post office name.",
              "maxLength": 100
            },
            "building_name": {
              "type": "string",
              "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.",
              "maxLength": 100
            },
            "sub_building": {
              "type": "string",
              "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
              "maxLength": 100
            }
          }
        }
      },
      "required": [
        "country_code"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-address_portable_postal_code_validation.json": {
      "oneOf": [
        {
          "country_code": "AL",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AR",
          "validation_regex": "([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?"
        },
        {
          "country_code": "AT",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BE",
          "validation_regex": "[1-9]\\d{3}"
        },
        {
          "country_code": "BG",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Z]{2}[ ]?\\d{4}"
        },
        {
          "country_code": "BR",
          "validation_regex": "\\d{5}[\\-]?\\d{3}"
        },
        {
          "country_code": "BT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "BY",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CA",
          "validation_regex": "[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ ]?\\d[ABCEGHJ-NPRSTV-Z]\\d"
        },
        {
          "country_code": "CH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CL",
          "validation_regex": "\\d{7}"
        },
        {
          "country_code": "CN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CR",
          "validation_regex": "\\d{4,5}|\\d{3}-\\d{4}"
        },
        {
          "country_code": "CY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CZ",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "DE",
          "validation_regex": "(0[1-9]|[1-9]\\d)\\d{3}"
        },
        {
          "country_code": "DK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "DO",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "EC",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "EE",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "ES",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FI",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FM",
          "validation_regex": "(9694[1-4])(?:[ \\-]?(\\d{4}))?"
        },
        {
          "country_code": "FO",
          "validation_regex": "(FO[ \\-]?)?\\d{3}"
        },
        {
          "country_code": "FR",
          "validation_regex": "\\d{2}[ ]?\\d{3}"
        },
        {
          "country_code": "GB",
          "validation_regex": "GIR[ ]?0AA|(?:(?:AB|AL|B|BA|BB|BD|BF|BH|BL|BN|BR|BS|BT|BX|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(?:\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}))|BFPO[ ]?\\d{1,4}"
        },
        {
          "country_code": "GF",
          "validation_regex": "9[78]3\\d{2}"
        },
        {
          "country_code": "GL",
          "validation_regex": "(DK-?)?39\\d{2}"
        },
        {
          "country_code": "GP",
          "validation_regex": "9[78][01]\\d{2}"
        },
        {
          "country_code": "GR",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "HR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "HU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ID",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z0-9 \\-]{1,10}"
        },
        {
          "country_code": "IL",
          "validation_regex": "\\d{5}(\\d{2})?"
        },
        {
          "country_code": "IN",
          "validation_regex": "\\d{3}[ ]?\\d{3}"
        },
        {
          "country_code": "IS",
          "validation_regex": "\\d{3}"
        },
        {
          "country_code": "IT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "JP",
          "validation_regex": "\\d{3}-?\\d{4}"
        },
        {
          "country_code": "KG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "KH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KW",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KZ",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "LA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LK",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "LV",
          "validation_regex": "LV-\\d{4}"
        },
        {
          "country_code": "MA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MC",
          "validation_regex": "980\\d{2}"
        },
        {
          "country_code": "MD",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ME",
          "validation_regex": "8\\d{4}"
        },
        {
          "country_code": "MK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "MN",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MQ",
          "validation_regex": "9[78]2\\d{2}"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Z]{3}[ ]?\\d{2,4}"
        },
        {
          "country_code": "MU",
          "validation_regex": "\\d{3}(?:\\d{2}|[A-Z]{2}\\d{3})"
        },
        {
          "country_code": "MV",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MX",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MY",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "NL",
          "validation_regex": "\\d{4}[ ]?[A-Z]{2}"
        },
        {
          "country_code": "NO",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "NP",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NZ",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "OM",
          "validation_regex": "(?:PC )?\\d{3}"
        },
        {
          "country_code": "PE",
          "validation_regex": "(?:LIMA[ ]?\\d{1,2}|CALLAO[ ]?0?\\d)|[0-2]?\\d{1,4}"
        },
        {
          "country_code": "PH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "PL",
          "validation_regex": "\\d{2}-\\d{3}"
        },
        {
          "country_code": "PT",
          "validation_regex": "\\d{4}([\\-]?\\d{3})?"
        },
        {
          "country_code": "PY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "RE",
          "validation_regex": "9[78]4\\d{2}"
        },
        {
          "country_code": "RO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "RS",
          "validation_regex": "\\d{5,6}"
        },
        {
          "country_code": "RU",
          "validation_regex": "[1-9]\\d{5}"
        },
        {
          "country_code": "SA",
          "validation_regex": "\\d{5}([\\-]?\\d{4})?"
        },
        {
          "country_code": "SE",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "SI",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "SK",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SM",
          "validation_regex": "4789\\d"
        },
        {
          "country_code": "SV",
          "validation_regex": "(?:CP[ ]?)?[1-3][1-7][0-2]\\d"
        },
        {
          "country_code": "TH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TW",
          "validation_regex": "\\d{3}(\\d{2})?"
        },
        {
          "country_code": "UA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "US",
          "validation_regex": "\\d{5}([ \\-]?\\d{4})?"
        },
        {
          "country_code": "UY",
          "validation_regex": "[1-9]\\d{4}"
        },
        {
          "country_code": "VA",
          "validation_regex": "00120"
        },
        {
          "country_code": "VE",
          "validation_regex": "[1-8]\\d{3}([\\-]?[A-Z])?"
        },
        {
          "country_code": "VN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "YT",
          "validation_regex": "976\\d{2}"
        },
        {
          "country_code": "ZA",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "C2",
          "validation_regex": "\\d{6}"
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "prefix": {
          "type": "string",
          "description": "The prefix, or title, to the party's name.",
          "maxLength": 140
        },
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        },
        "middle_name": {
          "type": "string",
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "maxLength": 140
        },
        "suffix": {
          "type": "string",
          "description": "The suffix for the party's name.",
          "maxLength": 140
        },
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_no_time.json": {
      "type": "string",
      "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
      "format": "ppaas_date_notime_v2",
      "minLength": 10,
      "maxLength": 10,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-identity_document.json": {
      "type": "object",
      "description": "The identity document.",
      "title": "Identity Document",
      "properties": {
        "type": {
          "description": "The identity document type.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-identity_document_type.json"
        },
        "issuer": {
          "description": "The issuer of the document.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-document_issuer.json"
        },
        "id_number": {
          "description": "The document number, such as the passport number.",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "issued_date": {
          "description": "The date when the document was issued.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_no_time.json"
        },
        "expiration_date": {
          "description": "The expiration date of the document.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_no_time.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-identity_document_type.json": {
      "type": "string",
      "title": "Identity Document Type",
      "description": "The identity document type.",
      "minLength": 1,
      "maxLength": 255,
      "x-enum": [
        {
          "value": "SOCIAL_SECURITY_NUMBER",
          "description": "Social security number."
        },
        {
          "value": "INDIVIDUAL_TAXPAYER_IDENTIFICATION_NUMBER",
          "description": "Individual tax identification number."
        },
        {
          "value": "NATIONAL_IDENTIFICATION_NUMBER",
          "description": "National identification number, such as CPF or AADHAR."
        },
        {
          "value": "TAX_IDENTIFICATION_NUMBER",
          "description": "The tax identification number, such as PAN CARD."
        },
        {
          "value": "PASSPORT_NUMBER",
          "description": "The passport number."
        },
        {
          "value": "SSN4",
          "description": "Last 4 digits of the social security number."
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-document_issuer.json": {
      "type": "object",
      "title": "Document Issuer",
      "description": "The document-issuing authority information.",
      "properties": {
        "country_code": {
          "description": "The country code where document was issued.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-country_code.json"
        },
        "province_code": {
          "type": "string",
          "description": "The [state or province code that issued the identity document](/docs/integration/direct/rest/state-codes/), as defined by [ISO 3166-2:2013](https://www.iso.org/standard/63546.html).",
          "minLength": 5,
          "maxLength": 6,
          "pattern": "^[A-Z]{2}-([A-Z]{2,3}|[0-9]{2,3})$"
        },
        "authority": {
          "type": "string",
          "description": "The entity that issued the identity document. For example, `registration authority`.",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "country_code"
      ]
    },
    "model-business.json": {
      "title": "Business Info",
      "description": "Business information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/model-party.json"
        },
        {
          "properties": {
            "names": {
              "description": "Names of business.",
              "type": "array",
              "maxItems": 10,
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-business_name.json"
              }
            },
            "type": {
              "description": "Type of business. Eg: INDIVIDUAL, PROPRIETORSHIP, PARTNERSHIP etc.",
              "$ref": "#/definitions/CustomerCommonComponentsSpecification-v1-schema-account_model-business_type.json"
            },
            "category": {
              "$ref": "#/definitions/model-business_category.json"
            },
            "identifications": {
              "description": "Identification details for the business.",
              "type": "array",
              "maxItems": 30,
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/model-business_identification.json"
              }
            },
            "description": {
              "description": "Description of business.",
              "type": "string",
              "maxLength": 255,
              "minLength": 1
            },
            "owners": {
              "description": "Beneficial owners of the business.",
              "type": "array",
              "maxItems": 100,
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/model-person.json"
              }
            },
            "url": {
              "description": "Web site url (online presence) for the business.",
              "format": "uri",
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "customer_service_contacts": {
              "description": "Contact information for customer service.",
              "$ref": "#/definitions/model-customer_service_contact.json"
            }
          }
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-business_name.json": {
      "type": "object",
      "title": "Business Name",
      "description": "The business name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-business_name_validation.json"
      },
      "properties": {
        "business_name": {
          "type": "string",
          "description": "Required. The business name of the party.",
          "maxLength": 300
        },
        "orthography": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-orthography.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-business_name_validation.json": {
      "oneOf": [
        {
          "country_code": "AD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "AZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "BZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE]"
        },
        {
          "country_code": "CO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "CZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "DE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "DJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "DK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "DM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "DO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "DZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "EC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "EE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "EG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "EH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ER",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ES",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ET",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "FI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "FJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "FK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "FM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "FO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "FR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0342-\\u0345\\u037A-\\u037D\\u037F\\u0384-\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03D7\\u03F3\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u0374\\u0375\\u037E\\u0386\\u0387\\u03FC]"
        },
        {
          "country_code": "GT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "GY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "HK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE]"
        },
        {
          "country_code": "HN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "HR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "HT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "HU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ID",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "IT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "JE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "JM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "JO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "JP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u3005\\uFF07\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FF\\u31F0-\\u31FF\\uFF65-\\uFF9F\\uFF0D\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE\\u32D0-\\u32FE\\u3300-\\u3357\\u337B-\\u337F]"
        },
        {
          "country_code": "KE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\uAC00-\\uD7A3\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE\\u3200-\\u321E\\u3260-\\u327F]"
        },
        {
          "country_code": "KW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "KZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "LY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ME",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ML",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "MZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "NZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "OM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "PY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "QA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "RE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "RO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "RS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "RU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "RW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE]"
        },
        {
          "country_code": "SH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ST",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "SZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0E01-\\u0E3A\\u0E40-\\u0E4F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u0E3F\\u0E50-\\u0E59]"
        },
        {
          "country_code": "TJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "TW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE]"
        },
        {
          "country_code": "TZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "UA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "UG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "US",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "UY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "UZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "VU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "WF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "WS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "XK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "YE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "YT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ZA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ZM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "ZW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]"
        },
        {
          "country_code": "C2",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]|[\\x20-\\x40\\x5B-\\x60\\x7B-\\x7E\\xA1-\\xAC\\xAE\\xAF\\xB0-\\xBF\\xD7\\xF7\\u2010\\u2012-\\u2015\\u2018-\\u2026\\u2030-\\u2040\\u2042-\\u2046\\u204A-\\u204F\\u2051-\\u2057\\u20A1\\u20A2\\u20A6\\u20A9-\\u20AE\\u20B1\\u20B2\\u20B4\\u20B5\\u20B8-\\u20BA\\u20BC\\u20BD\\u211E\\u2120\\u2122]|[\\u3001-\\u3030\\u3036\\u3038-\\u303C\\u3220-\\u324F\\u3251-\\u325F\\u3280-\\u32CB\\u3358-\\u3370\\u33E0-\\u33FE\\uFF01-\\uFF06\\uFF08-\\uFF0C\\uFF0E-\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B-\\uFF64\\uFFE0-\\uFFE8\\uFFE9-\\uFFEE]"
        }
      ],
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-orthography.json": {
      "type": "string",
      "title": "Orthography Type",
      "description": "The orthography type based on the ISO 15924 names for scripts. Scipts are chosen based on [most widely used writing systems](https://www.worldatlas.com/articles/the-world-s-most-popular-writing-scripts.html).",
      "pattern": "^[A-Z][a-z]{3}$",
      "minLength": 4,
      "maxLength": 4,
      "x-enum": [
        {
          "value": "Zyyy",
          "description": "The orthography cannot be determined."
        },
        {
          "value": "Zzzz",
          "description": "The orthography is unknown."
        },
        {
          "value": "Kana",
          "description": "An angular form of Japanese writing for words of foreign origin."
        },
        {
          "value": "Cyrl",
          "description": "The Slavic languages alphabet. Used in eastern Europe."
        },
        {
          "value": "Arab",
          "description": "The Arabic language alphabet."
        },
        {
          "value": "Armn",
          "description": "The Armenian alphabet."
        },
        {
          "value": "Beng",
          "description": "The Bengali alphabet. Used in eastern India."
        },
        {
          "value": "Cans",
          "description": "The Unified Canadian Aboriginal Syllabics alphabet."
        },
        {
          "value": "Deva",
          "description": "The Devanagari (Nagari) alphabet."
        },
        {
          "value": "Ethi",
          "description": "The Ethiopic alphabet."
        },
        {
          "value": "Geor",
          "description": "The Georgian (Mkhedruli and Mtavruli) alphabet."
        },
        {
          "value": "Grek",
          "description": "The Greek alphabet."
        },
        {
          "value": "Gujr",
          "description": "The Gujurati language alphabet. Used in western India."
        },
        {
          "value": "Guru",
          "description": "The Gurmukhi alphabet. Used in the northern Indian state of Punjab."
        },
        {
          "value": "Hani",
          "description": "The Han (Hanzi, Kanji, Hanja) alphabet."
        },
        {
          "value": "Hebr",
          "description": "The Hebrew alphabet."
        },
        {
          "value": "Java",
          "description": "The Javanese alphabet."
        },
        {
          "value": "Jpan",
          "description": "The Japanese (alias for Han + Hiragana + Katakana) alphabet."
        },
        {
          "value": "Khmr",
          "description": "The Khmer alphabet."
        },
        {
          "value": "Knda",
          "description": "The Kannada alphabet. Used in the southern Indian state of Karnataka."
        },
        {
          "value": "Kore",
          "description": "Korean (alias for Hangul + Han)."
        },
        {
          "value": "Laoo",
          "description": "The Lao alphabet."
        },
        {
          "value": "Latn",
          "description": "The Latin alphabet."
        },
        {
          "value": "Mlym",
          "description": "The Malayalam alphabet. Used in the southern Indian state of Kerala."
        },
        {
          "value": "Mong",
          "description": "The Mongolian alphabet."
        },
        {
          "value": "Mymr",
          "description": "The Myanmar (Burmese) alphabet."
        },
        {
          "value": "Orya",
          "description": "The Oriya (Odia) alphabet. Used in the eastern Indian state of Odisha."
        },
        {
          "value": "Sinh",
          "description": "The Sinhala alphabet."
        },
        {
          "value": "Sund",
          "description": "The Sundanese alphabet."
        },
        {
          "value": "Syrc",
          "description": "The Syriac alphabet."
        },
        {
          "value": "Taml",
          "description": "The Tamil alphabet. Used in the southern Indian state of Tamilnadu."
        },
        {
          "value": "Telu",
          "description": "The Telugu language alphabet. Used in the southern Indian state of Andhra pradesh."
        },
        {
          "value": "Thaa",
          "description": "The Thaana (Maldivian) alphabet."
        },
        {
          "value": "Thai",
          "description": "The Thai alphabet. Used in Thailand."
        },
        {
          "value": "Tibt",
          "description": "The Tibetan alphabet."
        },
        {
          "value": "Yiii",
          "description": "The Yi alphabet."
        }
      ],
      "properties": {}
    },
    "CustomerCommonComponentsSpecification-v1-schema-account_model-business_type.json": {
      "description": "The business types classified.",
      "title": "Business type",
      "type": "string",
      "pattern": "^[0-9A-Z_]+$",
      "minLength": 1,
      "maxLength": 255,
      "x-enum": [
        {
          "value": "ANY_OTHER_BUSINESS_ENTITY",
          "description": "The any other business entity. "
        },
        {
          "value": "ASSOCIATION",
          "description": "The association."
        },
        {
          "value": "CORPORATION",
          "description": "The corporation."
        },
        {
          "value": "GENERAL_PARTNERSHIP",
          "description": "The general partnership."
        },
        {
          "value": "GOVERNMENT",
          "description": "The government."
        },
        {
          "value": "INDIVIDUAL",
          "description": "The individual."
        },
        {
          "value": "LIMITED_LIABILITY_PARTNERSHIP",
          "description": "The limited liability partnership."
        },
        {
          "value": "LIMITED_LIABILITY_PROPRIETORS",
          "description": "The limited liability proprietors."
        },
        {
          "value": "LIMITED_LIABILITY_PRIVATE_CORPORATION",
          "description": "The limited liability private corporation."
        },
        {
          "value": "LIMITED_PARTNERSHIP",
          "description": "The limited partnership."
        },
        {
          "value": "LIMITED_PARTNERSHIP_PRIVATE_CORPORATION",
          "description": "The limited partnership private corporation."
        },
        {
          "value": "NONPROFIT",
          "description": "The nonprofit."
        },
        {
          "value": "ONLY_BUY_OR_SEND_MONEY",
          "description": "The only buy and send money."
        },
        {
          "value": "OTHER_CORPORATE_BODY",
          "description": "The other corporate body."
        },
        {
          "value": "PARTNERSHIP",
          "description": "The partnership."
        },
        {
          "value": "PRIVATE_PARTNERSHIP",
          "description": "The private partnership."
        },
        {
          "value": "PROPRIETORSHIP",
          "description": "The proprietorship."
        },
        {
          "value": "PROPRIETORSHIP_CRAFTSMAN",
          "description": "The proprietorship craftsman."
        },
        {
          "value": "PROPRIETORY_COMPANY",
          "description": "The proprietory company."
        },
        {
          "value": "PRIVATE_CORPORATION",
          "description": "The private corporation."
        },
        {
          "value": "PUBLIC_COMPANY",
          "description": "The public company."
        },
        {
          "value": "PUBLIC_CORPORATION",
          "description": "The public corporation."
        },
        {
          "value": "PUBLIC_PARTNERSHIP",
          "description": "The public partnership."
        },
        {
          "value": "REGISTERED_COOPERATIVE",
          "description": "A group of private owners who have registered their bsuiness."
        }
      ],
      "properties": {}
    },
    "model-business_category.json": {
      "title": "Business Category",
      "description": "Business category information. Refer: https://developer.paypal.com/docs/commerce-platform/reference/categories-subcategories/.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Industry standard category code of business.",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "sub_category": {
          "description": "Industry standard sub category of business.",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "mcc_code": {
          "description": "Industry standard merchant category code of business.",
          "type": "string",
          "maxLength": 4,
          "minLength": 1
        }
      }
    },
    "model-business_identification.json": {
      "title": "Business Identification",
      "description": "Business identification details.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of identification number. Eg: TAX_IDENTIFICATION_NUMBER, BUSINESS_REGISTRATION_NUMBER.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "identifier": {
          "description": "The number or value of the identifier.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "issuer": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-document_issuer.json"
        },
        "issued_time": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-date_time.json"
        }
      }
    },
    "model-customer_service_contact.json": {
      "title": "Customer Service Contact",
      "description": "Customer care contact information.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "Customer service email addresses.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-email_address.json"
          }
        },
        "phones": {
          "description": "Details of customer service phone numbers.",
          "type": "array",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-phone_info.json"
          }
        }
      }
    },
    "model-enums-facilitator_type.json": {
      "title": "Facilitator Type",
      "description": "Facilitator type.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "API_CALLER",
          "description": "A party who sets up the context and eventually owns or controls the payment."
        },
        {
          "value": "PARTNER",
          "description": "A checkout participant involved in the transaction who is setup as a partner."
        },
        {
          "value": "INTERNAL",
          "description": "Internal applications or actors."
        }
      ],
      "properties": {}
    },
    "model-payment_unit.json": {
      "title": "Payment Unit",
      "description": "Payment data for a purchase unit.",
      "type": "object",
      "properties": {
        "reference_id": {
          "description": "Unique Identifier for this payment unit scoped in current order.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "parent_reference_id": {
          "description": "Reference Id of the parent payment unit.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "idempotency_id": {
          "description": "Idempotency Id for the payment.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "partner_attribution_id": {
          "description": "BN Code or Partner Attribution Id used for revenue attribution.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "payment_category": {
          "description": "Payment Category PHYSICAL_GOODS, DIGITAL_GOODS, DONATIONS, PLATFORM_FEE Etc.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "amount": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-amount_with_breakdown.json"
        },
        "items": {
          "type": "array",
          "description": "List of purchase items.",
          "maxItems": 10,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-item.json"
          }
        },
        "shipping_details": {
          "$ref": "#/definitions/model-shipping_details.json"
        },
        "custom_id": {
          "description": "Free-form field for the use of clients.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "description": {
          "description": "Description of what is being paid for.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "invoice_id": {
          "description": "Invoice id to track this payment.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "payment_schedule_category": {
          "description": "Payment schedule category. Eg: FIRST_RECURRING, SUBSEQUENT_RECURRING, INSTALLMENT, UNSCHEDULED Etc.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "soft_descriptor_details": {
          "$ref": "#/definitions/model-soft_descriptor_details.json"
        },
        "biller_company_name": {
          "type": "string",
          "description": "The name of the originator company used in ACH settlement. While processing bank transactions as a third party processor, clients sending transactions to PayPal may or may not provide this info.",
          "maxLength": 16,
          "minLength": 1
        },
        "biller_company_id": {
          "type": "string",
          "description": "The Id of the originator company used in ACH settlement. While processing bank transactions as a third party processor, clients sending transactions to PayPal may or may not provide this info. This Id is assigned by the banks to originator.",
          "maxLength": 10,
          "minLength": 1
        },
        "odfi_details": {
          "description": "Originating Depository Financial Institution (ODFI) details.",
          "$ref": "#/definitions/model-odfi_details.json"
        },
        "context_attributes": {
          "description": "List of context attributes usually used to lookup as an alternative id or provides a relative context for a payment.",
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-payment_context_attribute.json"
          }
        },
        "receiver": {
          "description": "Receiver of the payment.",
          "$ref": "#/definitions/model-participant.json"
        },
        "payment_directives": {
          "$ref": "#/definitions/model-payment_directives.json"
        }
      }
    },
    "model-shipping_details.json": {
      "title": "Shipping Details.",
      "description": "Shipping details for transaction.",
      "type": "object",
      "properties": {
        "shipping_address": {
          "description": "Shipping Address.",
          "$ref": "#/definitions/model-address_with_confirmation.json"
        },
        "options": {
          "type": "array",
          "description": "An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.",
          "maxItems": 10,
          "minItems": 1,
          "items": {
            "description": "The option that the payee or merchant offers to the payer to ship or pick up their items.",
            "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-shipping_option.json",
            "x-publicDocsSchemaName": "shipping_option"
          }
        }
      }
    },
    "model-soft_descriptor_details.json": {
      "title": "Soft Descriptor",
      "description": "Soft Descriptor Details.",
      "type": "object",
      "properties": {
        "soft_descriptor": {
          "type": "string",
          "description": "Soft Descriptor.",
          "maxLength": 30,
          "minLength": 1
        },
        "contact_type": {
          "type": "string",
          "description": "Contact type allows the merchant to specify the type of the additional information passing in the soft descriptor Eg : CITY/URL/PHONE.",
          "maxLength": 127,
          "minLength": 1
        },
        "contact_value": {
          "type": "string",
          "description": "Contact value allows the merchant to provide the business location, business phone number or URL to the instrument holder.",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "model-odfi_details.json": {
      "type": "object",
      "title": "Originating Depository Financial Institution (ODFI) details.",
      "description": "ODFI acts as the interface between the Federal Reserve or ACH network and the originator of the transaction.",
      "properties": {
        "standard_entry_class_code": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1,
          "pattern": "^[A-Z]+$",
          "description": "The Standard Entry Class (SEC) code is a three-character code included in the company/batch header record to identify the type of ACH transactions contained in that batch.",
          "x-enum": [
            {
              "value": "ARC",
              "description": "Account Receivable Check. Converted checks received via the US mail or at a drop box location for the payment of goods or services."
            },
            {
              "value": "BOC",
              "description": "Back Office Conversion. Converted checks received by merchant at the point of purchase or at manned bill payment locations, and processed during back office operations."
            },
            {
              "value": "CCD",
              "description": "Corporate Credit or Debit. Transfer of funds where they are either distributed or consolidated between corporate entities."
            },
            {
              "value": "CTX",
              "description": "Corporate Trade Exchange. Application that supports the transfer of funds within a trading partner relationship."
            },
            {
              "value": "IAT",
              "description": "International ACH Transaction. Transaction involving a financial agency's office that is not located in the territorial jurisdiction of the United States."
            },
            {
              "value": "POP",
              "description": "Point of Purchase Entry. Entry initiated by the consumer via a debit card for payment of goods or services."
            },
            {
              "value": "PPD",
              "description": "Prearranged Payment and Deposit Entry. Entry initiated by an organization based on a standing or single entry authorization from a receiver to transfer funds to or from a consumer account of the receiver."
            },
            {
              "value": "RCK",
              "description": "Represented Check Entry. Application used by originators to re-present a check that has been processed through the check collection system and returned because of insufficient or uncollected funds."
            },
            {
              "value": "TEL",
              "description": "Telephone Authorized Entry. Debit transaction to a consumer's account pursuant to an oral authorization obtained from the consumer via the telephone."
            },
            {
              "value": "WEB",
              "description": "Internet Authorized Entry. Entry used for the origination of debit entries to a consumer's account pursuant to an authorization that is obtained from the Receiver via the internet."
            }
          ]
        }
      }
    },
    "model-payment_context_attribute.json": {
      "title": "Payment Context Attribute",
      "description": "Payment Context Attribute. Typically used as a reference for a payment. Eg: CART_ID, PAY_ID.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Context attribute name.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "value": {
          "description": "Context attribute value.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "model-payment_directives.json": {
      "title": "Payment Directives",
      "description": "Payment Directives for transaction.",
      "type": "object",
      "properties": {
        "disbursement_type": {
          "$ref": "#/definitions/model-enums-disbursement_type.json"
        },
        "linked_group_id": {
          "description": "Identifier that links the transactions to be treated as one atomic unit for payment processing. All-or-none policy is enforced by this identifier.",
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "settlement_account_number": {
          "description": "Settlement account number where the funds finally get settled to.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "loss_account_number": {
          "description": "Loss account number used for recovery of loss.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "liability_type": {
          "$ref": "#/definitions/model-enums-liability_type.json"
        },
        "special_deny": {
          "description": "Special deny setting to force decline a (compliance) pending transaction.",
          "type": "boolean"
        },
        "allow_duplicate_invoice_id": {
          "description": "A directive to allow or deny transactions with duplicate invoice id (for the receiver account).",
          "type": "boolean"
        },
        "policy_directives": {
          "description": "Policy directives indicating how to process the payment.",
          "type": "array",
          "maxItems": 30,
          "minItems": 1,
          "items": {
            "description": "Partner Policy contingency based on the policies and grants set between partner and merchant.",
            "$ref": "#/definitions/model-policy_directive.json"
          }
        },
        "payment_method_directives": {
          "description": "Directives for certain payment methods based on eligibility.",
          "type": "array",
          "maxItems": 30,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-payment_method_directive.json"
          }
        },
        "pricing_directives": {
          "description": "Pricing directives for the transaction.",
          "type": "array",
          "maxItems": 25,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/model-pricing_directive.json"
          }
        },
        "authorization_directives": {
          "$ref": "#/definitions/model-authorization_directives.json"
        },
        "currency_receiving_directive": {
          "$ref": "#/definitions/model-enums-currency_receiving_type.json"
        },
        "immediate_payment_required": {
          "description": "Flag to indicate if immediate payment is required. A directive to fail the transaction if the payment goes to a pending state.",
          "type": "boolean"
        }
      }
    },
    "model-enums-disbursement_type.json": {
      "title": "Disbursement Type",
      "description": "Disbursement type.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "INSTANT",
          "description": "Instant Disbursement Type."
        },
        {
          "value": "DELAYED",
          "description": "Delayed Disbursement Type."
        }
      ],
      "properties": {}
    },
    "model-enums-liability_type.json": {
      "title": "Liability Type",
      "description": "Liability type defined by PayPal Risk.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "FULL",
          "description": "Full liability for post payment events. The loss_account will be used for events including refunds, reversals, disputes etc."
        },
        {
          "value": "PARTIAL",
          "description": "Partial liability for post payment events. The loss_account will be used for limited cases like UNAUTH."
        }
      ],
      "properties": {}
    },
    "model-policy_directive.json": {
      "title": "Policy Directive",
      "description": "Policy directive indicating how to process the payment.",
      "type": "object",
      "properties": {
        "payment_decision": {
          "description": "Indicates the payment state decision. Can be ALLOW, DENY or ALLOW_WITH_HOLD.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "reason": {
          "description": "List of reasons for the payment decision.",
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "description": "Reason code for the payment policy decision. Eg: RECEIVER_CONSENTS_NOT_GRANTED_FOR_FACILITATOR, RECEIVER_ENROLLMENT_PENDING, RECEIVER_ONBOARDING_PENDING etc.",
            "type": "string",
            "maxLength": 127,
            "minLength": 1
          }
        }
      }
    },
    "model-payment_method_directive.json": {
      "title": "Payment Method Directive",
      "description": "Directives for certain payment methods based on eligibility.",
      "type": "object",
      "properties": {
        "payment_processing_type": {
          "description": "Indicates the type of payment processing. Eg: CUSTOM_CARD_PROCESSING, CUSTOM_BANK_PROCESSING.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1
        },
        "processing_decision": {
          "description": "Defines the payment processing decision as ALLOW, DENY, UNKNOWN.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "reason": {
          "description": "Reasons for the decision. Usually set for a DENY decision.",
          "type": "array",
          "maxItems": 10,
          "minItems": 1,
          "items": {
            "description": "A reason for the processing decision. Eg: CUSTOM_BANK_PROCESSING_NOT_ENABLED_FOR_RECEIVER, PRODUCT_UCC_NOT_ENABLED_FOR_RECEIVER Etc.",
            "type": "string",
            "maxLength": 127,
            "minLength": 1
          }
        }
      }
    },
    "model-pricing_directive.json": {
      "title": "Pricing Directive",
      "description": "Pricing directive for transaction indication the source and type of pricing.",
      "type": "object",
      "properties": {
        "participant_type": {
          "description": "Participant type.",
          "$ref": "#/definitions/model-enums-participant_type.json"
        },
        "account_number": {
          "description": "Account number of the preference owner.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1,
          "pattern": "^[0-9]{1,30}?$"
        },
        "type": {
          "description": "Pricing type.",
          "$ref": "#/definitions/model-enums-pricing_type.json"
        }
      }
    },
    "model-enums-participant_type.json": {
      "title": "Participant Type",
      "description": "Participant type.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "SENDER",
          "description": "Sender of the payment."
        },
        {
          "value": "RECEIVER",
          "description": "Receiver of the payment."
        },
        {
          "value": "FACILITATOR",
          "description": "Facilitator of the payment."
        }
      ],
      "properties": {}
    },
    "model-enums-pricing_type.json": {
      "title": "Pricing Type",
      "description": "Type of pricing applied to a payment.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "BLENDED",
          "description": "Blended Pricing Type."
        },
        {
          "value": "IC_PLUS",
          "description": "IC+ Pricing Type."
        }
      ],
      "properties": {}
    },
    "model-authorization_directives.json": {
      "title": "Auth Directives",
      "description": "Auth directives for the transaction.",
      "type": "object",
      "properties": {
        "honor_time_offset": {
          "description": "Honor period offset. This is the offset period (in seconds) starting from time of authorization after which held funds (if any) will be released automatically.",
          "type": "integer",
          "minimum": 1,
          "maximum": 31622400
        },
        "expiry_time_offset": {
          "description": "Expiry period offset. This is the offset period (in seconds) starting from time of authorization after which authorization is voided automatically.",
          "type": "integer",
          "minimum": 1,
          "maximum": 31622400
        },
        "allow_multiple_captures": {
          "description": "Indicates if multiple captures can be allowed on an Authorization.",
          "type": "boolean"
        },
        "tolerance": {
          "$ref": "#/definitions/model-auth_tolerance.json"
        }
      }
    },
    "model-auth_tolerance.json": {
      "title": "Auth Tolerance",
      "description": "Auth-Capture Tolerance details.",
      "type": "object",
      "properties": {
        "percent": {
          "description": "Defines the maximum percentage that can be captured for an authorization, as a fixed-point, signed decimal number. For example, define a 110.99% toklerance as `110.99`.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-percentage.json"
        },
        "absolute": {
          "description": "Defines the maximum absolute value above the authorized amount that can be captured for an authorization.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-money.json"
        }
      }
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-percentage.json": {
      "type": "string",
      "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
      "format": "ppaas_common_percentage_v2",
      "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
      "properties": {}
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-money.json": {
      "type": "object",
      "title": "Money",
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "properties": {
        "currency_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-currency_code.json"
        },
        "value": {
          "type": "string",
          "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).",
          "maxLength": 32,
          "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
        }
      },
      "required": [
        "currency_code",
        "value"
      ]
    },
    "MerchantsCommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-currency_code.json": {
      "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
      "type": "string",
      "format": "ppaas_common_currency_code_v2",
      "minLength": 3,
      "maxLength": 3,
      "properties": {}
    },
    "model-enums-currency_receiving_type.json": {
      "title": "Currency PRP",
      "description": "Currency receiving type defines the options when receiving payment in a currency not held by the reciver.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "ACCEPT",
          "description": "Accept payment after auto currency conversion."
        },
        {
          "value": "DENY",
          "description": "Deny payment."
        },
        {
          "value": "HOLD",
          "description": "Pend payment for seller's approval."
        },
        {
          "value": "ACCEPT_OPEN",
          "description": "Accept payment after opening a new currency holding."
        }
      ],
      "properties": {}
    },
    "model-payment_details_request.json": {
      "title": "Payment Details Request",
      "description": "Payment details for an order.",
      "type": "object",
      "properties": {
        "payment_source": {
          "description": "The payment source used for the payment of an order",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payment_source.json"
        },
        "purchase_units": {
          "type": "array",
          "description": "An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.",
          "maxItems": 10,
          "minItems": 1,
          "items": {
            "description": "A purchase unit. Establishes a contract between a customer and merchant.",
            "$ref": "#/definitions/model-update_purchase_unit_request.json"
          }
        }
      },
      "required": [
        "purchase_units"
      ]
    },
    "model-update_purchase_unit_request.json": {
      "type": "object",
      "title": "Update Purchase Unit",
      "description": "The purchase unit details. Used to capture required information for the payment contract.",
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "The API caller-provided external ID for the purchase unit.",
          "maxLength": 256,
          "minLength": 1
        },
        "payments": {
          "description": "The comprehensive summary of payments for the purchase unit.",
          "$ref": "#/definitions/model-update_payment_collection_request.json"
        }
      },
      "required": [
        "reference_id",
        "payments"
      ]
    },
    "model-update_payment_collection_request.json": {
      "type": "object",
      "title": "Update Payment Collection",
      "description": "The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments.",
      "properties": {
        "authorizations": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "description": "An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.",
          "items": {
            "description": "The authorized payment for a purchase unit.",
            "$ref": "#/definitions/model-update_authorization_request.json"
          }
        },
        "captures": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "description": "An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.",
          "items": {
            "description": "The captured payment for a purchase unit.",
            "$ref": "#/definitions/model-update_capture_request.json"
          }
        }
      }
    },
    "model-update_authorization_request.json": {
      "type": "object",
      "title": "Update Authorization",
      "description": "The authorized payment transaction.",
      "properties": {
        "id": {
          "description": "The unique transaction ID for the authorized payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "status": {
          "description": "The status for the authorized payment.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1,
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The authorized payment is created. No captured payments have been made for this authorized payment."
            },
            {
              "value": "CAPTURED",
              "description": "The authorized payment has one or more captures against it. The sum of these captured payments is greater than the amount of the original authorized payment."
            },
            {
              "value": "DENIED",
              "description": "PayPal cannot authorize funds for this authorized payment."
            },
            {
              "value": "EXPIRED",
              "description": "The authorized payment has expired."
            },
            {
              "value": "PARTIALLY_CAPTURED",
              "description": "A captured payment was made for the authorized payment for an amount that is less than the amount of the original authorized payment."
            },
            {
              "value": "VOIDED",
              "description": "The authorized payment was voided. No more captured payments can be made against this authorized payment."
            },
            {
              "value": "PENDING",
              "description": "The created authorization is in pending state. For more information, see <code>status.details</code>"
            }
          ]
        },
        "status_details": {
          "description": "The details of the authorized order pending status.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authorization_status_details.json"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "model-update_capture_request.json": {
      "type": "object",
      "title": "Update Capture",
      "description": "A captured payment.",
      "properties": {
        "id": {
          "description": "The transaction ID for the captured payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "maxLength": 127,
          "minLength": 1,
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>"
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            }
          ]
        },
        "status_details": {
          "description": "The details of the captured payment status.",
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-capture_status_details.json"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "customized_x_unsupported_2856_MerchantsCommonComponentsSpecification-v1-schema-card_response.json": {
      "type": "object",
      "title": "Card Response",
      "description": "The payment card to use to fund a payment. Card can be a credit or debit card.",
      "properties": {
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "brand": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "type": {
          "type": "string",
          "description": "The payment card type.",
          "readOnly": true,
          "x-enum": [
            {
              "value": "CREDIT",
              "description": "A credit card."
            },
            {
              "value": "DEBIT",
              "description": "A debit card."
            },
            {
              "value": "PREPAID",
              "description": "A Prepaid card."
            },
            {
              "value": "UNKNOWN",
              "description": "Card type cannot be determined."
            }
          ]
        },
        "bin": {
          "type": "string",
          "description": "An acronym for Bank Identification Number (BIN), also known as IIN (Issuer Identification Number). It Is a standardized global numbering scheme (6 to 8 digits) used to identify a bank / institution that issued the card.",
          "pattern": "^[0-9]{6,8}$",
          "maxLength": 8,
          "minLength": 6,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "authentication_result": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-authentication_response.json"
        },
        "attributes": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-card_attributes_response.json"
        }
      },
      "x-publicDocsSchemaName": "card_response"
    },
    "customized_x_unsupported_2991_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_4520_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        }
      }
    },
    "customized_x_unsupported_5675_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_4120_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "customized_x_unsupported_1125_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "customized_x_unsupported_6439_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_5492_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "customized_x_unsupported_8759_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_3578_MerchantsCommonComponentsSpecification-v1-schema-vault_paypal_wallet_base.json": {
      "type": "object",
      "title": "Vaulted PayPal Wallet Common Attributes",
      "description": "Resource consolidating common request and response attirbutes for vaulting PayPal Wallet.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description displayed to PayPal consumer on the approval flow for PayPal, as well as on the PayPal payment token management experience on PayPal.com.",
          "minLength": 1,
          "maxLength": 128
        },
        "product_label": {
          "type": "string",
          "description": "Merchant/Partner defined identifier uniquely identify merchant/partner's business and the usage of the PayPal payment token for the business. Please contact your PayPal Technical Account Manager to define the product_label for your business and how it can help your business. For details on “product_label” and different types of usages of a PayPal Payment Token, please refer to documentation. For a business with different type of usage of the payment method, a new product_label needs to be defined and a new PayPal Payment Token will be created. For including multiple businesses of same charge pattern, an existing product_label with the same charge pattern can be leveraged. Business can decide to use custom name for the product_label. If no product_label is specified, default policies will apply for PayPal payment method, irrespective of the nature of the business.",
          "minLength": 1,
          "maxLength": 25,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "usage_type": {
          "type": "string",
          "description": "The usage type associated with the PayPal payment token.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "MERCHANT",
              "description": "The PayPal Payment Token will be used for future transaction directly with a merchant."
            },
            {
              "value": "PLATFORM",
              "description": "The PayPal Payment Token will be used for future transaction on a platform. A platform is typically a marketplace or a channel that a payer can purchase goods and services from multiple merchants."
            }
          ]
        },
        "customer_type": {
          "type": "string",
          "description": "The customer type associated with the PayPal payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "default": "CONSUMER",
          "x-enum": [
            {
              "value": "CONSUMER",
              "description": "The customer vaulting the PayPal payment token is a consumer on the merchant / platform."
            },
            {
              "value": "BUSINESS",
              "description": "The customer vaulting the PayPal payment token is a business on merchant / platform."
            }
          ]
        },
        "permit_multiple_payment_tokens": {
          "type": "boolean",
          "description": "Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same PayPal account. This only applies to PayPal payment source.",
          "default": false
        }
      },
      "required": [
        "usage_type"
      ],
      "x-publicDocsSchemaName": "vault_paypal_wallet_base",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "customized_x_unsupported_4353_MerchantsCommonComponentsSpecification-v1-schema-shipping_detail.json": {
      "type": "object",
      "description": "The shipping details.",
      "title": "Shipping Details",
      "properties": {
        "name": {
          "description": "The name of the person to whom to ship the items. Supports only the `full_name` property.",
          "$ref": "#/definitions/customized_x_unsupported_1125_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "address": {
          "description": "The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_6439_MerchantsCommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "x-publicDocsSchemaName": "shipping_detail"
    },
    "customized_x_unsupported_565_MerchantsCommonComponentsSpecification-v1-schema-payment_source.json": {
      "type": "object",
      "title": "Payment Source",
      "description": "The payment source definition.",
      "properties": {
        "token": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-token.json"
        },
        "bank": {
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bank.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "paypal": {
          "description": "Indicates that paypal wallet is the payment source. Main use of this selection is to provide additional instructions associated with this choice like vaulting.",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-paypal_wallet.json"
        },
        "alipay": {
          "description": "[Alipay is a third-party mobile and online payment platform, established in Hangzhou, China](/https://intl.alipay.com/).",
          "x-supportedCountries": [
            "C2"
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-alipay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "alipay"
        },
        "bancontact": {
          "description": "[Bancontact is the most popular online payment in Belgium.](/https://www.bancontact.com/).",
          "x-supportedCountries": [
            {
              "code": "BE"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-bancontact_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "bancontact"
        },
        "blik": {
          "description": "[BLIK is a mobile payment system, created by Polish Payment Standard in order to allow millions of users to pay in shops, payout cash in ATMs and make online purchases and payments](/https://blikmobile.pl//).",
          "x-supportedCountries": [
            {
              "code": "PL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-blik_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "blik"
        },
        "eps": {
          "description": "[The eps transfer is an online payment method developed by many Austrian banks.](/https://www.eps-ueberweisung.at/).",
          "x-supportedCountries": [
            {
              "code": "AT"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-eps_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "eps"
        },
        "giropay": {
          "description": "[The giropay is an Internet payment System in Germany, based on online banking.](/http://giropay.de/).",
          "x-supportedCountries": [
            {
              "code": "DE"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-giropay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "giropay"
        },
        "ideal": {
          "description": "[iDEAL is an online payment method that enables consumers to pay online through their own bank.](/https://www.ideal.nl//).",
          "x-supportedCountries": [
            {
              "code": "NL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-ideal_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "ideal"
        },
        "multibanco": {
          "description": "[Multibanco is an interbank network in Portugal.](/https://www.multibanco.pt/).",
          "x-supportedCountries": [
            {
              "code": "PT"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-multibanco_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "multibanco"
        },
        "mybank": {
          "description": "[MyBank is an e-authorisation solution which enables safe digital payments and identity authentication through a consumer’s own online banking portal or mobile application.](/https://www.mybank.eu/).",
          "x-supportedCountries": [
            {
              "code": "IT"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-mybank_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "mybank"
        },
        "payu": {
          "description": "[PayU is a payment service provider delivering access to the Polish and Czech banking systems.](/https://www.payu.cz/en/payment-methods/).",
          "x-supportedCountries": [
            {
              "code": "CZ"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-payu_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "payu"
        },
        "p24": {
          "description": "[P24 (Przelewy24) is a secure and fast online bank transfer service linked to all the major banks in Poland.](/www.przelewy24.pl/).",
          "x-supportedCountries": [
            {
              "code": "PL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-p24_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "p24"
        },
        "poli": {
          "description": "[POLi is a secure and fast online bank transfer service linked to all the major banks in Australia and New Zealand.](https://www.polipayments.com/).",
          "x-supportedCountries": [
            {
              "code": "AU"
            },
            {
              "code": "NZ"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-poli_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "poli"
        },
        "sofort": {
          "description": "[SOFORT Banking is a real-time bank transfer payment method that buyers use to transfer funds directly to merchants from their bank accounts.](/https://www.klarna.com/sofort/).",
          "x-supportedCountries": [
            {
              "code": "AT"
            },
            {
              "code": "BE"
            },
            {
              "code": "DE"
            },
            {
              "code": "ES"
            },
            {
              "code": "IT"
            },
            {
              "code": "NL"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-sofort_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "sofort"
        },
        "trustly": {
          "description": "[Trustly is a payment method that allows customers to shop and pay from their bank account.](/https://www.trustly.net/).",
          "x-supportedCountries": [
            {
              "code": "DE"
            },
            {
              "code": "DK"
            },
            {
              "code": "EE"
            },
            {
              "code": "ES"
            },
            {
              "code": "FI"
            },
            {
              "code": "GB"
            },
            {
              "code": "IT"
            },
            {
              "code": "MT"
            },
            {
              "code": "NL"
            },
            {
              "code": "NO"
            },
            {
              "code": "PL"
            },
            {
              "code": "SE"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-trustly_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "trustly"
        },
        "trustpay": {
          "description": "[TrustPay is a payment method that allows customers to shop and pay from their bank account.](/https://www.trustpay.eu/).",
          "x-supportedCountries": [
            {
              "code": "CZ"
            },
            {
              "code": "SK"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-trustpay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "trustpay"
        },
        "verkkopankki": {
          "description": "Verkkopankki(Finnish Online Banking) combines all Finnish bank links under one real-time bank transfer product.",
          "x-supportedCountries": [
            {
              "code": "FI"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-verkkopankki_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "verkkopankki"
        },
        "wechatpay": {
          "description": "[WeChat Pay allows buyers to pay using Quick Pay, QR Code, In-App Web-Based, or Native In-App Payments.](/https://pay.weixin.qq.com/index.php/public/wechatpay).",
          "x-supportedCountries": [
            {
              "code": "C2"
            }
          ],
          "$ref": "#/definitions/MerchantsCommonComponentsSpecification-v1-schema-wechatpay_request.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "x-publicDocsSchemaName": "wechatpay"
        }
      },
      "x-publicDocsSchemaName": "payment_source"
    }
  },
  "x-errors": [
    {
      "name": "ACTION_DOES_NOT_MATCH_INTENT",
      "message": "Order was created with an intent to `CAPTURE`.",
      "description": "<br/>To complete the transaction, call [capture payment for order](/docs/api/orders/v2/#orders_capture) or create an order with an intent of `AUTHORIZE`."
    },
    {
      "name": "AGREEMENT_ALREADY_CANCELLED",
      "message": "The requested agreement is already cancelled.",
      "description": "<br/>The specified agreement ID cannot be used for this transaction."
    },
    {
      "name": "AMOUNT_CANNOT_BE_SPECIFIED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>An authorization amount can only be specified if an order was saved by calling `/v2/checkout/orders/{order_id}/save`. Save the order and try again."
    },
    {
      "name": "AMOUNT_MISMATCH",
      "message": "The amount specified does not match the breakdown.",
      "description": "<br/>The amount must equal `item_total` + `tax_total` + `shipping` + `handling` + `insurance` - `shipping_discount` - `discount`."
    },
    {
      "name": "AMOUNT_NOT_PATCHABLE",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The amount cannot be updated as the `payer` has chosen and approved a specific financing offer for a given amount. Create an order with the updated order amount and have the `payer` approve the new payment terms."
    },
    {
      "name": "AUTH_CAPTURE_NOT_ENABLED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The authorization and capture feature is not enabled for the merchant. Make sure that the recipient of the funds is a verified business account."
    },
    {
      "name": "AUTHENTICATION_FAILURE",
      "message": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
      "description": "<br/>The account validations failed for the user."
    },
    {
      "name": "AUTHORIZATION_AMOUNT_EXCEEDED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The specified authorization amount exceeded the allowable limit. Specify a different amount and try the request again. Alternately, contact Customer Support to increase your limits."
    },
    {
      "name": "AUTHORIZATION_CURRENCY_MISMATCH",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The currency of the authorization must match the currency of the order that the payer created and approved. Check the <code>currency_code</code> and try the request again."
    },
    {
      "name": "BILLING_AGREEMENT_NOT_FOUND",
      "message": "The requested Billing Agreement token was not found.",
      "description": "<br/>Verify the token and try the request again."
    },
    {
      "name": "CANNOT_BE_NEGATIVE",
      "message": "Must be greater than or equal to zero.",
      "description": "<br/>Try the request again with a different value."
    },
    {
      "name": "CANNOT_BE_ZERO_OR_NEGATIVE",
      "message": "Must be greater than zero.",
      "description": "<br/>Try the request again with a different value."
    },
    {
      "name": "CARD_BRAND_NOT_SUPPORTED",
      "message": "Processing of this card brand is not supported.",
      "description": "<br/>Please use another card to continue with this transaction."
    },
    {
      "name": "CARD_TYPE_NOT_SUPPORTED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>Processing of this card type is not supported. Use another card type."
    },
    {
      "name": "INVALID_SECURITY_CODE_LENGTH",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The security_code length is invalid for the specified card type."
    },
    {
      "name": "CITY_REQUIRED",
      "message": "The specified country requires a city (`address.admin_area_2`).",
      "description": "<br/>Specify a city and try the request again."
    },
    {
      "name": "COMPLIANCE_VIOLATION",
      "message": "Transaction cannot be processed due to a possible compliance violation.",
      "description": "<br/>To get more information about the transaction, call Customer Support."
    },
    {
      "name": "CONSENT_NEEDED",
      "message": "Authorization failed due to insufficient permissions.",
      "description": "<br/>To continue with this transaction, the payer must provide consent."
    },
    {
      "name": "CURRENCY_NOT_SUPPORTED_FOR_CARD_TYPE",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The currency code is not supported for direct card payments for this card type. See [Currency Codes](/docs/integration/direct/rest/currency-codes/) for list of supported currency codes."
    },
    {
      "name": "CURRENCY_NOT_SUPPORTED_FOR_COUNTRY",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>Currency code not supported for direct card payments in this country. Please refer https://developer.paypal.com/docs/integration/direct/rest/currency-codes/ for list of supported currency codes."
    },
    {
      "name": "DECIMAL_PRECISION",
      "message": "The value of the field should not be more than two decimal places.",
      "description": "<br/>Verify the number of decimal places and try the request again."
    },
    {
      "name": "DOMESTIC_TRANSACTION_REQUIRED",
      "message": "This transaction requires the payee and payer to be resident in the same country.",
      "description": "<br/>To create this payment, a domestic transaction is required."
    },
    {
      "name": "DUPLICATE_INVOICE_ID",
      "message": "Duplicate Invoice ID detected.",
      "description": "<br/>To avoid a duplicate transaction, verify that the invoice ID is unique for each transaction."
    },
    {
      "name": "DUPLICATE_REQUEST_ID",
      "message": "The value of PayPal-Request-Id header has already been used.",
      "description": "<br/>Specify a different value and try the request again."
    },
    {
      "name": "FIELD_NOT_PATCHABLE",
      "message": "Field cannot be patched.",
      "description": "<br/>You cannot update this field."
    },
    {
      "name": "INSTRUMENT_DECLINED",
      "message": "The funding instrument presented was either declined by the processor or bank.",
      "description": "<br/>The specified funding instrument cannot be used for this payment."
    },
    {
      "name": "INTERNAL_SERVER_ERROR",
      "message": "An internal server error has occurred.",
      "description": "<br/>Retry the request later."
    },
    {
      "name": "INTERNAL_SERVICE_ERROR",
      "message": "An internal service error has occurred.",
      "description": "<br/>An internal server error has occurred."
    },
    {
      "name": "INVALID_ACCOUNT_STATUS",
      "message": "Account validations failed for the user.",
      "description": "<br/>To continue with this transaction, the payer must provide consent."
    },
    {
      "name": "INVALID_ARRAY_MAX_ITEMS",
      "message": "The number of items in an array parameter is too large.",
      "description": "<br/>The number of items in an array parameter is too large."
    },
    {
      "name": "INVALID_ARRAY_MIN_ITEMS",
      "message": "The number of items in an array parameter is too small.",
      "description": "<br/>The number of items in an array parameter is too small."
    },
    {
      "name": "INVALID_COUNTRY_CODE",
      "message": "Country code is invalid.",
      "description": "<br/>For list of supported country codes, see [Country and Region Codes](/docs/integration/direct/rest/country-codes/)."
    },
    {
      "name": "INVALID_CURRENCY_CODE",
      "message": "Currency code is invalid or is not currently supported.",
      "description": "<br/>For a list of supported currency codes, see [Currency Codes](/docs/integration/direct/rest/currency-codes/)."
    },
    {
      "name": "INVALID_JSON_POINTER_FORMAT",
      "message": "Path should be a valid [JavaScript Object Notation (JSON) Pointer](https://tools.ietf.org/html/rfc6901) that references a location within the request where the operation is performed.",
      "description": "<br/>The path is not valid."
    },
    {
      "name": "INVALID_PARAMETER_SYNTAX",
      "message": "The value of a field does not conform to the expected format.",
      "description": "<br/>Verify that the pattern is supported and try the request again."
    },
    {
      "name": "INVALID_PARAMETER_VALUE",
      "message": "The value of a field is invalid.",
      "description": "<br/>Verify the parameter value and try the request again."
    },
    {
      "name": "INVALID_PARAMETER",
      "message": "Cannot be specified as part of the request.",
      "description": "<br/>Check that the API supports this parameter and try the request again."
    },
    {
      "name": "INVALID_PATCH_OPERATION",
      "message": "Request is not well-formed, syntactically incorrect, or violates schema.",
      "description": "<br/>The operation cannot be honored. You cannot add a property that is already present. Instead, use replace. You cannot remove a property that is not present. Instead, use add. You cannot replace a property that is not present. Instead, use add."
    },
    {
      "name": "INVALID_PAYER_ID",
      "message": "The payer ID is not valid.",
      "description": "<br/>Verify the payer ID and try the request again."
    },
    {
      "name": "INVALID_RESOURCE_ID",
      "message": "Specified resource ID does not exist.",
      "description": "<br/>Verify the resource ID and try the request again."
    },
    {
      "name": "INVALID_STRING_LENGTH",
      "message": "The value of a field is either too short or too long.",
      "description": "<br/>Verify the minimum and maximum values and try the request again."
    },
    {
      "name": "ITEM_TOTAL_MISMATCH",
      "message": "Verify the corresponding values and try the request again.",
      "description": "<br/>The item total should equal the sum of (`unit_amount` * `quantity`) across all items for a `purchase_unit`."
    },
    {
      "name": "ITEM_TOTAL_REQUIRED",
      "message": "If item details are specified (`items.unit_amount` and `items.quantity`) corresponding `amount.breakdown.item_total` is required.",
      "description": "<br/>The `amount.breakdown.item_total` value was not found."
    },
    {
      "name": "MAX_AUTHORIZATION_COUNT_EXCEEDED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The maximum number of authorizations that are allowed for the order was reached. To increase your limit, contact Customer Support."
    },
    {
      "name": "MAX_NUMBER_OF_PAYMENT_ATTEMPTS_EXCEEDED",
      "message": "You have exceeded the maximum number of payment attempts.",
      "description": "<br/>To review the maximum number of payment attempts allowed and retry this transaction, call Customer Support."
    },
    {
      "name": "MAX_VALUE_EXCEEDED",
      "message": "Should be less than or equal to 9999999.99.",
      "description": "<br/>Try the request again with a different value."
    },
    {
      "name": "MISSING_REQUIRED_PARAMETER",
      "message": "A required field or parameter is missing.",
      "description": "<br/>Verify that you have specified all required parameters and try the request again."
    },
    {
      "name": "MISSING_SHIPPING_ADDRESS",
      "message": "The shipping address is required when `shipping_preference=SET_PROVIDED_ADDRESS`.",
      "description": "<br/>Verify that you have provided the shipping address and try the request again."
    },
    {
      "name": "MULTI_CURRENCY_ORDER",
      "message": "Multiple differing values of `currency_code` are not supported.",
      "description": "<br/>The entire order request must have the same currency code."
    },
    {
      "name": "MULTIPLE_SHIPPING_ADDRESS_NOT_SUPPORTED",
      "message": "Multiple shipping addresses are not supported.",
      "description": "<br/>Try the request again with the same `shipping_address`."
    },
    {
      "name": "MULTIPLE_SHIPPING_OPTION_SELECTED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>Only one shipping.option can be set to `selected = true`."
    },
    {
      "name": "INVALID_PICKUP_ADDRESS",
      "message": "Invalid shipping address.",
      "description": "<br/>If the 'shipping_option.type' is set as 'PICKUP' then the 'shipping_detail.name.full_name' should start with 'S2S' meaning Ship To Store. Example: 'S2S My Store'."
    },
    {
      "name": "NOT_AUTHORIZED",
      "message": "Authorization failed due to insufficient permissions.",
      "description": "<br/>To check that your application has sufficient permissions, log in to the PayPal Developer Portal."
    },
    {
      "name": "NOT_ENABLED_FOR_CARD_PROCESSING",
      "message": "The request fails. The API Caller account is not setup to be able to process card payments. Please contact PayPal customer support.",
      "description": "<br/>The request fails. The API Caller account is not setup to be able to process card payments. Please contact PayPal customer support."
    },
    {
      "name": "NOT_PATCHABLE",
      "message": "Cannot be patched.",
      "description": "<br/>You cannot update this field."
    },
    {
      "name": "NOT_SUPPORTED",
      "message": "This field is not currently supported.",
      "description": "<br/>Specify only supported parameters and try the request again."
    },
    {
      "name": "ORDER_ALREADY_AUTHORIZED",
      "message": "Order already authorized. If `intent=AUTHORIZE` only one authorization per order is allowed.",
      "description": "<br/>The order was already authorized and you can create only one authorization for an order."
    },
    {
      "name": "ORDER_ALREADY_CAPTURED",
      "message": "Order already captured. If `intent=CAPTURE` only one capture per order is allowed.",
      "description": "<br/>The order was already captured and you can capture only one payment for an order."
    },
    {
      "name": "ORDER_ALREADY_COMPLETED",
      "message": "The order cannot be patched after it is completed.",
      "description": "<br/>The order cannot be patched after it is completed."
    },
    {
      "name": "ORDER_CANNOT_BE_SAVED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The option to save an order is only available if the `intent` is `AUTHORIZE` and the `processing_instruction` is `ORDER_SAVED_EXPLICITLY`. Change the `intent` to `AUTHORIZE` and the `processing_instruction` to `ORDER_SAVED_EXPLICITLY` and try the request again."
    },
    {
      "name": "ORDER_COMPLETED_OR_VOIDED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>Order is voided or completed and hence cannot be authorized."
    },
    {
      "name": "ORDER_EXPIRED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>Order is expired and hence cannot be authorized. Please contact Customer Support if you need to increase your order validity period."
    },
    {
      "name": "ORDER_NOT_APPROVED",
      "message": "Payer has not yet approved the Order for payment.",
      "description": "<br/>The payer has not yet approved payment for the order. Redirect the payer to the `rel:approve` URL that was returned in the HATEOAS links in the create order response or provide a valid `payment_source` in the request."
    },
    {
      "name": "ORDER_NOT_SAVED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>Please save the order by calling v2/orders/{order_id}/save or alternately, If you do not intend to save the order, `PATCH` the order to update the value of `processing_instruction` to `NO_INSTRUCTION`."
    },
    {
      "name": "ORDER_PREVIOUSLY_VOIDED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>This order has been previously voided and cannot be voided again.  Verify the order id and try again."
    },
    {
      "name": "PARAMETER_VALUE_NOT_SUPPORTED",
      "message": "The value specified for this field is not currently supported.",
      "description": "<br/>The specified parameter value is not supported."
    },
    {
      "name": "PATCH_PATH_REQUIRED",
      "message": "Specify a `path` for the field for which the operation needs to be performed.",
      "description": "<br/>To complete the operation for this field, specify a `path` for the field."
    },
    {
      "name": "PATCH_VALUE_REQUIRED",
      "message": "Please specify a `value` to for the field that is being patched.",
      "description": "<br/>Try your request again."
    },
    {
      "name": "PAYEE_ACCOUNT_INVALID",
      "message": "Payee account specified is invalid. Please check the `payee.email_address` or `payee.merchant_id` specified and try again. Ensure that either  `payee.merchant_id` or `payee.email_address` is specified.",
      "description": "<br/>Specify either `payee.merchant_id` or `payee.email_address`."
    },
    {
      "name": "PAYEE_ACCOUNT_LOCKED_OR_CLOSED",
      "message": "Payee account is locked or closed.",
      "description": "<br/>To get more information about the status of the account, call Customer Support."
    },
    {
      "name": "PAYEE_ACCOUNT_RESTRICTED",
      "message": "The merchant account is restricted.",
      "description": "<br/>To get more information about the status of the account, call Customer Support."
    },
    {
      "name": "PAYEE_BLOCKED_TRANSACTION",
      "message": "The fraud settings for this seller are such that this payment cannot be executed.",
      "description": "<br/>Verify the fraud settings. Then, retry the transaction."
    },
    {
      "name": "PAYER_ACCOUNT_LOCKED_OR_CLOSED",
      "message": "Payer account is locked or closed.",
      "description": "<br/>To get more information about the status of the account, call Customer Support."
    },
    {
      "name": "PAYER_ACCOUNT_RESTRICTED",
      "message": "Payer account is restricted.",
      "description": "<br/>To get more information about the status of the account, call Customer Support."
    },
    {
      "name": "PAYER_CANNOT_PAY",
      "message": "Payer cannot pay for this transaction.",
      "description": "<br/>Please contact the payer to find other ways to pay for this transaction."
    },
    {
      "name": "PAYER_CONSENT_REQUIRED",
      "message": "The payer has not provided appropriate consent to proceed with this transaction.",
      "description": "<br/>To proceed with the transaction, you must get payer consent."
    },
    {
      "name": "PAYER_COUNTRY_NOT_SUPPORTED",
      "message": "Payer Country is not supported.",
      "description": "<br/>The Payer country is not supported. Redirect the payer to select another funding source."
    },
    {
      "name": "PAYEE_NOT_ENABLED_FOR_CARD_PROCESSING",
      "message": "The API Caller account is not setup to be able to process card payments. Please contact PayPal customer support.",
      "description": "<br/>The request fails. The API Caller account is not setup to be able to process card payments. Please contact PayPal customer support."
    },
    {
      "name": "PAYMENT_INSTRUCTION_REQUIRED",
      "message": "You must provide the payment instruction when you capture an authorized payment for `intent=AUTHORIZE`.",
      "description": "<br/>For details, see <a href=\"/docs/api/payments/#authorization_capture\">Capture authorization</a>. For `intent=CAPTURE`, send the payment instruction when you create the order."
    },
    {
      "name": "PERMISSION_DENIED",
      "message": "You do not have permission to access or perform operations on this resource.",
      "description": "<br/>If you make API calls on behalf of a merchant or payee, ensure that you have been granted appropriate permissions to continue with this request."
    },
    {
      "name": "POSTAL_CODE_REQUIRED",
      "message": "The specified country requires a postal code.",
      "description": "<br/>Specify a postal code and try the request again."
    },
    {
      "name": "PREFERRED_SHIPPING_OPTION_AMOUNT_MISMATCH",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The amount provided in the preferred shipping option should match the amount provided in amount breakdown."
    },
    {
      "name": "REDIRECT_PAYER_FOR_ALTERNATE_FUNDING",
      "message": "Transaction failed. Redirect the payer to select another funding source.",
      "description": "<br/>The transaction failed. Redirect the payer to select another funding source."
    },
    {
      "name": "REFERENCE_ID_NOT_FOUND",
      "message": "Filter expression value is incorrect.",
      "description": "<br/>Check the value of the `reference_id` and try the request again."
    },
    {
      "name": "REFERENCE_ID_REQUIRED",
      "message": "'reference_id' is required for each 'purchase_unit' if multiple 'purchase_unit' are provided.",
      "description": "<br/>Provide a unique value for `reference_id` for each `purchase_unit` and try the request again."
    },
    {
      "name": "DUPLICATE_REFERENCE_ID",
      "message": "`reference_id` must be unique if multiple `purchase_unit` are provided.",
      "description": "<br/>Provide a unique value for `reference_id` for each `purchase_unit` and try the request again."
    },
    {
      "name": "SHIPPING_ADDRESS_INVALID",
      "message": "Provided shipping address is invalid.",
      "description": "<br/>Provided shipping address is invalid."
    },
    {
      "name": "SHIPPING_OPTION_NOT_SELECTED",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>At least one of the `shipping.option` values must be `selected = true`."
    },
    {
      "name": "SHIPPING_OPTIONS_NOT_SUPPORTED",
      "description": "Shipping options are not supported when `application_context.shipping_preference` is set as `NO_SHIPPING` or `SET_PROVIDED_ADDRESS`."
    },
    {
      "name": "TAX_TOTAL_MISMATCH",
      "message": "Should equal sum of (`tax` * `quantity`) across all items for a given `purchase_unit`.",
      "description": "<br/>The tax total must equal the sum of (`tax` * `quantity`) across all items for a `purchase_unit`."
    },
    {
      "name": "TAX_TOTAL_REQUIRED",
      "message": "If item details are specified (`items.tax_total` and `items.quantity`), the corresponding `amount.breakdown.tax_total` is required.",
      "description": "<br/>The `amount.breakdown.tax_total` is a required field."
    },
    {
      "name": "TRANSACTION_AMOUNT_EXCEEDS_MONTHLY_MAX_LIMIT",
      "message": "The transaction amount exceeds monthly maximum limit.",
      "description": "<br/>To review the monthly transaction limits and retry this transaction, call Customer Support."
    },
    {
      "name": "TRANSACTION_BLOCKED_BY_PAYEE",
      "message": "The requested action could not be performed, semantically incorrect, or failed business validation.",
      "description": "<br/>The transaction was blocked by the payee’s Fraud Protection settings."
    },
    {
      "name": "TRANSACTION_LIMIT_EXCEEDED",
      "message": "Total payment amount exceeded transaction limit.",
      "description": "<br/>To review the transaction limit and retry this transaction, call Customer Support."
    },
    {
      "name": "TRANSACTION_RECEIVING_LIMIT_EXCEEDED",
      "message": "The transaction exceeds the payee's receiving limit.",
      "description": "<br/>To review the transaction limit and retry this transaction, call Customer Support."
    },
    {
      "name": "TRANSACTION_REFUSED",
      "message": "The transaction was refused.",
      "description": "<br/>Verify the transaction and try the request again."
    },
    {
      "name": "UNSUPPORTED_INTENT",
      "message": "`intent=AUTHORIZE` is not supported for multiple purchase units. Only `intent=CAPTURE` is supported.",
      "description": "<br/>`intent=AUTHORIZE` is not supported for multiple purchase units. Only `intent=CAPTURE` is supported."
    },
    {
      "name": "UNSUPPORTED_PATCH_PARAMETER_VALUE",
      "message": "The value specified for this field is not currently supported.",
      "description": "<br/>Try the request again with a different value."
    },
    {
      "name": "UNSUPPORTED_PAYMENT_INSTRUCTION",
      "message": "Only supported when the `intent=CAPTURE`.",
      "description": "<br/>If intent is `AUTHORIZE`, you must provide a `payment_instruction` when you capture payment for the authorization. For details, see [capture authorized payment](/docs/api/payments/v2/#authorizations_capture)."
    },
    {
      "name": "PAYEE_ACCOUNT_NOT_SUPPORTED",
      "message": "Payee does not have an account with PayPal.",
      "description": "Your current setup requires the 'payee' to have a verified account with PayPal before you can process transactions on their behalf."
    },
    {
      "name": "PAYEE_ACCOUNT_NOT_VERIFIED",
      "message": "Payee has not verified their account with PayPal.",
      "description": "Your current setup requires the 'payee' to have an account with PayPal before you can process transactions on their behalf."
    },
    {
      "name": "PAYEE_NOT_CONSENTED",
      "message": "Payee does not have appropriate consent to allow the API caller to process this type of transaction on their behalf.",
      "description": "<br/>Your current setup requires the 'payee' to provide a consent before this transaction can be processed successfully."
    },
    {
      "name": "AMOUNT_CHANGE_NOT_ALLOWED",
      "message": "The amount specified is different from the amount authorized by payer.",
      "description": "<br/>The payment method that the payer has used requires that the final amount is the same as the original amount at the time of creating the order."
    },
    {
      "name": "BILLING_AGREEMENT_ID_MISMATCH",
      "message": "Billing Agreement ID must match the one that was provided during order creation.",
      "description": "Billing Agreement ID must match the one that was provided during order creation."
    },
    {
      "name": "PAYPAL_REQUEST_ID_REQUIRED",
      "message": "A PayPal-Request-Id is required if you are trying to process payment for an Order.",
      "description": "Please specify a PayPal-Request-Id or Create the Order without a 'payment_source' specified."
    }
  ],
  "x-requestValidationIssues": []
}